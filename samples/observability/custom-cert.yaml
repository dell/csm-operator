apiVersion: v1
data:
  # replace with actual base64-encoded certificate
  tls.crt: <certificate>
  # replace with actual base64-encoded private key
  tls.key: <privateKey>
kind: Secret
type: kubernetes.io/tls
metadata:
  name: karavi-topology-secret
  namespace: karavi

---

apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: karavi-topology-issuer
  namespace: karavi
spec:
  ca:
    secretName: karavi-topology-secret

---

apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: otel-collector-secret
  namespace: karavi
data:
  # replace with actual base64-encoded certificate
  tls.crt: <certificate>
  # replace with actual base64-encoded private key
  tls.key: <privateKey>

---

apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: otel-collector-issuer
  namespace: karavi
spec:
  ca:
    secretName: otel-collector-secret

---

apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: otel-collector
  namespace: karavi
spec:
  secretName: otel-collector-tls
  duration: 2160h # 90d
  renewBefore: 360h # 15d
  subject:
    organizations:
    - dell
  isCA: false
  privateKey:
    algorithm: RSA
    encoding: PKCS1
    size: 4096
  usages:
    - server auth
    - client auth
  dnsNames:
  - otel-collector
  - otel-collector.karavi.svc.kubernetes.local
  issuerRef:
    name: otel-collector-issuer
    kind: Issuer
    group: cert-manager.io

---

apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: karavi-topology
  namespace: karavi
spec:
  secretName: karavi-topology-tls
  duration: 2160h # 90d
  renewBefore: 360h # 15d
  subject:
    organizations:
    - dell
  isCA: false
  privateKey:
    algorithm: RSA
    encoding: PKCS1
    size: 4096
  usages:
    - server auth
    - client auth
  dnsNames:
  - karavi-topology
  - karavi-topology.karavi.svc.kubernetes.local
  issuerRef:
    name: karavi-topology-issuer
    kind: Issuer
    group: cert-manager.io
