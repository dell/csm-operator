apiVersion: storage.dell.com/v1
kind: ContainerStorageModule
metadata:
  name: authorization
  namespace: authorization
spec:
  modules:
    # Authorization: enable csm-authorization proxy server for RBAC
    - name: authorization-proxy-server
      # enable: Enable/Disable csm-authorization
      enabled: true
      configVersion: v2.3.0
      forceRemoveModule: true
      components:
        # For Kubernetes Container Platform only
        # enabled: Enable/Disable NGINX Ingress Controller
        # Allowed values:
        #   true: enable deployment of NGINX Ingress Controller
        #   false: disable deployment of NGINX Ingress Controller only if you have your own ingress controller. Set the appropriate annotations for the ingresses in the proxy-server section
        # Default value: true
        - name: nginx
          enabled: true
        # enabled: Enable/Disable cert-manager
        # Allowed values:
        #   true: enable deployment of cert-manager
        #   false: disable deployment of cert-manager only if it's already deployed
        # Default value: true
        - name: cert-manager
          enabled: true
        - name: proxy-server
          # enable: Enable/Disable csm-authorization proxy server
          enabled: true
          proxyService: quay.io/dell/container-storage-modules/csm-authorization-proxy:nightly
          proxyServiceReplicas: 1
          tenantService: quay.io/dell/container-storage-modules/csm-authorization-tenant:nightly
          tenantServiceReplicas: 1
          roleService: quay.io/dell/container-storage-modules/csm-authorization-role:nightly
          roleServiceReplicas: 1
          storageService: quay.io/dell/container-storage-modules/csm-authorization-storage:nightly
          storageServiceReplicas: 1
          opa: docker.io/openpolicyagent/opa:0.70.0
          opaKubeMgmt: docker.io/openpolicyagent/kube-mgmt:8.5.11
          authorizationController: quay.io/dell/container-storage-modules/csm-authorization-controller:nightly
          authorizationControllerReplicas: 1
          leaderElection: true
          # controllerReconcileInterval: interval for the authorization controllers to reconcile with Redis.
          controllerReconcileInterval: 5m
          # certificate: base64-encoded certificate for cert/private-key pair -- add certificate here to use custom certificates
          # for self-signed certs, leave empty string
          # Allowed values: string
          certificate: ""
          # privateKey: base64-encoded private key for cert/private-key pair -- add private key here to use custom certificates
          # for self-signed certs, leave empty string
          # Allowed values: string
          privateKey: ""
          # proxy-server ingress will use this hostname
          # NOTE: an additional hostname can be configured in proxyServerIngress.hosts
          # NOTE: proxy-server ingress is configured to accept IP address connections so hostnames are not required
          hostname: "csm-authorization.com"
          # proxy-server ingress configuration
          proxyServerIngress:
            - ingressClassName: nginx
              # additional host rules for the proxy-server ingress
              hosts: []
              # - [application name]-ingress-nginx-controller.[namespace].svc.cluster.local

              # additional annotations for the proxy-server ingress
              annotations: {}
          # openTelemetryCollectorAddress: the OTLP receiving endpoint using gRPC
          openTelemetryCollectorAddress: ""
        - name: redis
          # Redis secret configuration:
          # Use a SecretProviderClass for Redis credentials; otherwise, a default Kubernetes secret is used.
          redisSecretProviderClass:
            # The name of the Kubernetes secret created by the CSI driver
            - redisSecretName: ""
              # The key in the secret that holds the Redis username
              redisUsernameKey: username
              # The key in the secret that holds the Redis password
              redisPasswordKey: password
          redis: redis:7.4.3-alpine
          commander: rediscommander/redis-commander:latest
          redisName: redis-csm
          redisCommander: rediscommander
          sentinel: sentinel
          redisReplicas: 5

        - name: config
          # Optional:
          # Config secret configuration:
          # Use a SecretProviderClass for the config secret; otherwise, the user must manually create the config secret before installing Authorization.
          # If using a Secret Store CSI driver, specify the SecretProviderClass that contains the config object.
          configSecretProviderClass:
            # Name of the SecretProviderClass that holds the config secretObject.
            - configSecretProviderClassName: ""
              # The name of the Kubernetes secret created by the CSI driver
              configSecretName: ""

        # Comment and uncomment the appropriate sections below to use the desired method.
        # Storage system credentials can be provided in one of two ways:
        # 1. Using a SecretProviderClass (for dynamic secrets from external providers)
        # 2. Using a Kubernetes Secret (for static credentials)
        # Only one of the two can be specified at a time.
        - name: storage-system-credentials
          secretProviderClasses:
            vault:
              - secret-provider-class-1
              - secret-provider-class-2
            # conjur:
            # - name: secret-provider-class-3
            #   paths:
            # - usernamePath: secrets/username1
            #   passwordPath: secrets/password1
            # - usernamePath: secrets/username2
            #   passwordPath: secrets/password2
            # - name: secret-provider-class-4
            # paths:
            # - usernamePath: secrets/username3
            #   passwordPath: secrets/password3
          # secrets:
          #   - secret-1
          #   - secret-2
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: csm-config-params
  namespace: authorization
data:
  csm-config-params.yaml: |-
    CONCURRENT_STORAGE_REQUESTS: 10
    LOG_LEVEL: debug
    STORAGE_CAPACITY_POLL_INTERVAL: 30m
