apiVersion: storage.dell.com/v1
kind: ContainerStorageModule
metadata:
  name: authorization
  namespace: authorization
spec:
  modules:
    # Authorization: enable csm-authorization proxy server for RBAC
    - name: authorization-proxy-server
      # enable: Enable/Disable csm-authorization
      enabled: true
      configVersion: v2.3.0
      forceRemoveModule: true
      components:
        # For Kubernetes Container Platform only
        # enabled: Enable/Disable NGINX Ingress Controller
        # Allowed values:
        #   true: enable deployment of NGINX Ingress Controller
        #   false: disable deployment of NGINX Ingress Controller only if you have your own ingress controller. Set the appropriate annotations for the ingresses in the proxy-server section
        # Default value: true
        - name: nginx
          enabled: true
        # enabled: Enable/Disable cert-manager
        # Allowed values:
        #   true: enable deployment of cert-manager
        #   false: disable deployment of cert-manager only if it's already deployed
        # Default value: true
        - name: cert-manager
          enabled: true
        - name: proxy-server
          # enable: Enable/Disable csm-authorization proxy server
          enabled: true
          proxyService: quay.io/dell/container-storage-modules/csm-authorization-proxy:v2.0.0
          tenantService: quay.io/dell/container-storage-modules/csm-authorization-tenant:v2.0.0
          roleService: quay.io/dell/container-storage-modules/csm-authorization-role:v2.0.0
          storageService: quay.io/dell/container-storage-modules/csm-authorization-storage:v2.0.0
          opa: openpolicyagent/opa
          opaKubeMgmt: openpolicyagent/kube-mgmt:0.11
          # controllerReconcileInterval: interval for the authorization controllers to reconcile with Redis.
          controllerReconcileInterval: 5m
          # certificate: base64-encoded certificate for cert/private-key pair -- add certificate here to use custom certificates
          # for self-signed certs, leave empty string
          # Allowed values: string
          certificate: ""
          # privateKey: base64-encoded private key for cert/private-key pair -- add private key here to use custom certificates
          # for self-signed certs, leave empty string
          # Allowed values: string
          privateKey: ""
          # proxy-server ingress will use this hostname
          # NOTE: an additional hostname can be configured in proxyServerIngress.hosts
          # NOTE: proxy-server ingress is configured to accept IP address connections so hostnames are not required
          hostname: "csm-authorization.com"
          # proxy-server ingress configuration
          proxyServerIngress:
            - ingressClassName: nginx
              # additional host rules for the proxy-server ingress
              hosts:
                - authorization-ingress-nginx-controller.authorization.svc.cluster.local
              # additional annotations for the proxy-server ingress
              annotations: {}
        - name: redis
          # Optional Redis secret configuration:
          # If using Secret Store CSI driver, specify the SecretProviderClass for Redis credentials.
          # Otherwise, a default Kubernetes secret will be used.
          redisSecretProviderClass:
            # Name of the SecretProviderClass that holds the Redis secretObject.
            - secretProviderClassName: secret-provider-class-1
              # Name of the Kubernetes secret (created by the Secret Store CSI driver) that contains Redis credentials.
              redisSecretName: redis-secret
              # Key in the secret that stores the Redis username.
              redisUsernameKey: username
              # Key in the secret that stores the Redis password.
              redisPasswordKey: password
          redis: redis:8.2.0-alpine
          commander: rediscommander/redis-commander:latest
          redisName: redis-csm
          redisCommander: rediscommander
          sentinel: sentinel
          redisReplicas: 5
          # by default, csm-authorization will deploy a local (https://kubernetes.io/docs/concepts/storage/storage-classes/#local) volume for redis
          # to use a different storage class for redis, specify the name of the storage class
          # NOTE: the storage class must NOT be a storage class provisioned by a CSI driver using this installation of CSM Authorization
          # Default value: None
          storageclass: ""
        - name: config
          # Config secret configuration:
          # Use a SecretProviderClass for the config secret; otherwise, the user must manually create the config secret before installing Authorization.
          # If using a Secret Store CSI driver, specify the SecretProviderClass that contains the config object.
          configSecretProviderClass:
            # Name of the SecretProviderClass that holds the config secretObject.
            - secretProviderClassName: secret-provider-class-1
              # The name of the Kubernetes secret created by the CSI driver
              configSecretName: config-secret-name
              # Uncomment this section if using Conjur to store the config secret, otherwise leave commented out.
              # Path for Conjur secret that stores the config secret.
              # conjur:
              #   secretPath: secrets/config-object
        - name: storage-system-credentials
          secretProviderClasses:
            vault:
              - secret-provider-class-1

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: csm-config-params
  namespace: authorization
data:
  csm-config-params.yaml: |-
    CONCURRENT_STORAGE_REQUESTS: 10
    LOG_LEVEL: debug
    STORAGE_CAPACITY_POLL_INTERVAL: 5m
