apiVersion: v1
kind: ServiceAccount
metadata:
  name: <DriverDefaultReleaseName>-controller
  namespace: <DriverDefaultReleaseNamespace>
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: <DriverDefaultReleaseName>-controller
rules:
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "watch", "list", "delete", "update", "create"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch", "patch"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete", "update", "patch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims/status"]
    verbs: ["update", "patch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch", "update", "patch", "delete"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csinodes"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments/status"]
    verbs: ["patch"]
  - apiGroups: ["csi.storage.k8s.io"]
    resources: ["csinodeinfos"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch", "update", "delete"]
    verbs: ["get", "list", "watch"]
# below for snapshotter
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list"]
# uncomment this when VGS support is added
#  - apiGroups: ["volumegroup.storage.dell.com"]
#    resources: ["dellcsivolumegroupsnapshots","dellcsivolumegroupsnapshots/status"]
#    verbs: ["create", "list", "watch", "delete", "update"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotcontents"]
    verbs: ["create", "get", "list", "watch", "update", "delete", "patch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshots"]
    verbs: ["get", "list", "watch", "update", "create", "delete"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshots/status","volumesnapshotcontents/status"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["create", "list", "watch", "delete", "update"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: <DriverDefaultReleaseName>-controller
subjects:
  - kind: ServiceAccount
    name: <DriverDefaultReleaseName>-controller
    namespace: <DriverDefaultReleaseNamespace>
roleRef:
  kind: ClusterRole
  name: <DriverDefaultReleaseName>-controller
  apiGroup: rbac.authorization.k8s.io
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: <DriverDefaultReleaseName>-controller
  namespace: <DriverDefaultReleaseNamespace>
  annotations:
      com.dell.karavi-authorization-proxy: "true"
spec:
  strategy:
    rollingUpdate:
      maxUnavailable:  1
  selector:
    matchLabels:
      name: <DriverDefaultReleaseName>-controller
  replicas: 2
  template:
    metadata:
      labels:
        name: <DriverDefaultReleaseName>-controller
    spec:
      affinity:
        nodeSelector:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: name
                operator: In
                values:
                - <DriverDefaultReleaseName>-controller
            topologyKey: kubernetes.io/hostname        
      serviceAccountName: <DriverDefaultReleaseName>-controller
      containers:
        - name: attacher
          image: registry.k8s.io/sig-storage/csi-attacher:v4.0.0
          imagePullPolicy: IfNotPresent
          args:
            - "--csi-address=$(ADDRESS)"
            - "--v=5"
            - "--leader-election=true"
          env:
            - name: ADDRESS
              value: /var/run/csi/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /var/run/csi
        - name: provisioner
          image: registry.k8s.io/sig-storage/csi-provisioner:v3.3.0
          imagePullPolicy: IfNotPresent
          args:
            - "--csi-address=$(ADDRESS)"
            - "--feature-gates=Topology=true"
            - "--volume-name-prefix=k8s"
            - "--volume-name-uuid-length=10"
            - "--leader-election=true"
            - "--timeout=120s"
            - "--v=5"
            - "--default-fstype=ext4"
            - "--extra-create-metadata"
          env:
            - name: ADDRESS
              value: /var/run/csi/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /var/run/csi
#        - name: vg-snapshotter
#          image: dellemc/csi-volumegroup-snapshotter:v1.2.0
#          imagePullPolicy: IfNotPresent 
#          env:
#            - name: ADDRESS
#              value: /var/run/csi/csi.sock
#          volumeMounts:
#            - name: socket-dir
#              mountPath: /var/run/csi
        - name: csi-external-health-monitor-controller
          image: registry.k8s.io/sig-storage/csi-external-health-monitor-controller:v0.7.0
          imagePullPolicy: IfNotPresent
          args:
            - "--csi-address=$(ADDRESS)"
            - "--v=5"
            - "--leader-election=true"
            - "--enable-node-watcher=true"
            - "--http-endpoint=:8080"
            - "--monitor-interval=60s"
            - "--timeout=180s"
          env:
            - name: ADDRESS
              value: /var/run/csi/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /var/run/csi
        - name: snapshotter
          image: registry.k8s.io/sig-storage/csi-snapshotter:v6.1.0
          imagePullPolicy: IfNotPresent
          args:
            - "--csi-address=$(ADDRESS)"
            - "--timeout=120s"
            - "--v=5"
            - "--leader-election=true"
          env:
            - name: ADDRESS
              value: /var/run/csi/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /var/run/csi
        - name: resizer
          image: registry.k8s.io/sig-storage/csi-resizer:v1.6.0
          imagePullPolicy: IfNotPresent
          args:
            - "--csi-address=$(ADDRESS)"
            - "--v=5"
            - "--leader-election=true"
          env:
            - name: ADDRESS
              value: /var/run/csi/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /var/run/csi
        - name: driver
          image: dellemc/csi-vxflexos:v2.6.0
          imagePullPolicy: IfNotPresent
          command: [ "/csi-vxflexos.sh" ]
          args:
            - "--leader-election"
            - "--array-config=/vxflexos-config/config"
            - "--driver-config-params=/vxflexos-config-params/driver-config-params.yaml"
          env:
            - name: CSI_ENDPOINT
              value: /var/run/csi/csi.sock
            - name: X_CSI_MODE
              value: controller
            - name: X_CSI_VXFLEXOS_ENABLESNAPSHOTCGDELETE
              value: false
            - name: X_CSI_VXFLEXOS_ENABLELISTVOLUMESNAPSHOT
              value: false
            - name: SSL_CERT_DIR
              value: /certs
            - name: X_CSI_HEALTH_MONITOR_ENABLED
              value: false
          volumeMounts:
            - name: socket-dir
              mountPath: /var/run/csi
            - name: vxflexos-config
              mountPath: /vxflexos-config
            - name: vxflexos-config-params
              mountPath: /vxflexos-config-params
            - name: certs
              mountPath: /certs
              readOnly: true
      volumes:
        - name: socket-dir
          emptyDir:
        - name: vxflexos-config
          secret:
            secretName: <DriverDefaultReleaseName>-config
        - name: vxflexos-config-params
          configMap:
            name: <DriverDefaultReleaseName>-config-params
        - name: certs
          projected:
            sources:
              - secret:
                  name: <DriverDefaultReleaseName>-certs-0
                  items:
                    - key: cert-0
                      path: cert-0
