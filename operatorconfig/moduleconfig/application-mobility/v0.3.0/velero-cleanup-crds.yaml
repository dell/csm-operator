# This job is meant primarily for cleaning up on CI systems.
# Using this on production systems, especially those that have multiple releases of Velero, will be destructive.
apiVersion: batch/v1
kind: Job
metadata:
  name: velero-cleanup-crds
  namespace: <NAMESPACE>
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": hook-succeeded
  labels:
    app.kubernetes.io/name: velero
    app.kubernetes.io/instance: application-mobility
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  backoffLimit: 3
  template:
    metadata:
      name: velero-cleanup-crds
      labels:
      annotations:
    spec:
      imagePullSecrets:
        - name: 
      serviceAccountName: <SERVICE_ACCOUNT_NAME>
      containers:
        - name: kubectl
          image: <KUBECTL_IMAGEREPOSITORY>@<KUBECTL_IMAGEDIGEST>
          image: <KUBECTL_IMAGEREPOSITORY>:<KUBECTL_IMAGETAG>
          image: <KUBECTL_IMAGEREPOSITORY>:<KUBECTL_VERSION>
          imagePullPolicy: <IMAGE_PULLPOLICY>
          command:
            - /bin/sh
            - -c
            - >
              kubectl delete restore --all;
              kubectl delete backup --all;
              kubectl delete backupstoragelocation --all;
              kubectl delete volumesnapshotlocation --all;
              kubectl delete podvolumerestore --all;
              kubectl delete crd -l component=velero;
          securityContext: 
          resources:
      restartPolicy: OnFailure
      securityContext: 
      nodeSelector:
      tolerations:
      affinity:
