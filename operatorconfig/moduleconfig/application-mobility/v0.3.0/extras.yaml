apiVersion: v1
kind: ConfigMap
metadata:
  name: application-mobility-velero-config-map
  namespace: <NAMESPACE>
  labels:
    app.kubernetes.io/name: application-mobility-velero
    app.kubernetes.io/instance: application-mobility
    #app.kubernetes.io/managed-by: {{ $.Release.Service }}
data: velero/velero-restore-helper:v1.10.0
---
apiVersion: velero.io/v1
kind: Schedule
metadata:
  name: application-mobility-velero-schedule
  namespace: <NAMESPACE>
  #annotations:
    #"helm.sh/hook": post-install,post-upgrade,post-rollback
    #"helm.sh/hook-delete-policy": before-hook-creation
  labels:
    app.kubernetes.io/name: application-mobility-velero
    app.kubernetes.io/instance: application-mobility
    #app.kubernetes.io/managed-by: {{ $.Release.Service }}
spec:
  useOwnerReferencesInBackup: false
  schedule: <SCHEDULE>
  template: <SCHEDULE_TEMPLATE>
---
apiVersion: v1
kind: Service
metadata:
  name: application-mobility-velero
  namespace: <NAMESPACE>
  annotations: <METRIC_SERVICE_ANNOTATIONs>
  labels:
    app.kubernetes.io/name: application-mobility-velero
    app.kubernetes.io/instance: application-mobility
    #app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  type: ClusterIP
  ports:
    - name: http-monitoring
      port: 8085
      targetPort: http-monitoring
  selector:
    name: velero
    app.kubernetes.io/name: application-mobility-velero
    app.kubernetes.io/instance: application-mobility
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: application-mobility-velero
  namespace: <NAMESPACE>
  annotations: <SERVICE_MONITOR_ANNOTATIONS>
  labels:
    app.kubernetes.io/name: application-mobility-velero
    app.kubernetes.io/instance: application-mobility
    #app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  namespaceSelector:
    matchNames:
      - <NAMESPACE>
  selector:
    matchLabels:
      app.kubernetes.io/name: application-mobility-velero
      app.kubernetes.io/instance: application-mobility
  endpoints:
  - port: http-monitoring
    interval: <METRICS_SCRAPEINTERVAL>
    scrapeTimeout: <METRICS_SCRAPETIMEOUT>
    scheme: <SERVICEMONITOR_SCHEME>
    tlsConfig: <SERVICEMONITOR_TLSCONFIG>
---
containers:
        - name: dell-custom-velero-plugin
          #image: <IMAGE_REPOSITORY>@<IMAGE_DIGEST>
          image: dellemc/csm-application-mobility-velero-plugin:v0.1.0
          imagePullPolicy: IfNot Present
          ports:
            - name: http-monitoring
              containerPort: 8085
          command:
            - /velero
          args:
            - server
            ### Flags
          #{{- with .Values.configuration }}
            #- --uploader-type={{ default "restic" .uploaderType }}
            #{{- with .backupSyncPeriod }}
            #- --backup-sync-period={{ . }}
            #{{- with .fsBackupTimeout }}
           # - --fs-backup-timeout={{ . }}
           # {{- with .clientBurst }}
           # - --client-burst={{ . }}
           # {{- with .clientPageSize }}
            #- --client-page-size={{ . }}
           # {{- with .clientQPS }}
           # - --client-qps={{ . }}
          #  {{- with .defaultBackupStorageLocation }}
           # - --default-backup-storage-location={{ . }}
           # {{- with .defaultBackupTTL }}
           # - --default-backup-ttl={{ . }}
           # {{- with .defaultVolumeSnapshotLocations }}
           # - --default-volume-snapshot-locations={{ . }}
           # {{- if .defaultVolumesToFsBackup }}
           # - --default-volumes-to-fs-backup
           # {{- with .defaultRepoMaintainFrequency }}
           # - --default-repo-maintain-frequency={{ . }}
           # {{- with .disableControllers }}
           # - --disable-controllers={{ . }}
           # {{- with .garbageCollectionFrequency }}
           # - --garbage-collection-frequency={{ . }}
            #{{- with .logFormat }}
           # - --log-format={{ . }}
            #{{- with .logLevel }}
            #- --log-level={{ . }}
            #{{- with .metricsAddress }}
            #- --metrics-address={{ . }}
            #{{- with .pluginDir }}
           #- --plugin-dir={{ . }}
            #{{- with .profilerAddress }}
           # - --profiler-address={{ . }}
           #- --restore-only
           # {{- with .restoreResourcePriorities }}
            #- --restore-resource-priorities={{ . }}
           # {{- with .storeValidationFrequency }}
           # - --store-validation-frequency={{ . }}
           # {{- with .terminatingResourceTimeout }}
           # - --terminating-resource-timeout={{ . }}
            ### Global Flags
           #{{- with .features }}
           # - --features={{ . }}
           # {{- with .namespace }}
            #- --namespace={{ . }}
          resources: #<RESOURCES>
          securityContext: #<SECURITY_CONTEXT>
          volumeMounts:
            - name: plugins
              mountPath: /plugins
            - name: cloud-credentials
              mountPath: /credentials
            - name: scratch
              mountPath: /scratch
            - name: tmpdir
              mountPath: /tmp
          envFrom:
          - secretRef:
              name: #<CREDENTIAL_EXTRASECRET_REF>
          env:
            - name: VELERO_SCRATCH_DIR
              value: /scratch
            - name: VELERO_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: LD_LIBRARY_PATH
              value: /plugins
            - name: AWS_SHARED_CREDENTIALS_FILE
              value: /credentials/cloud
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /credentials/cloud
            - name: AZURE_CREDENTIALS_FILE
              value: /credentials/cloud
            - name: ALIBABA_CLOUD_CREDENTIALS_FILE
              value: /credentials/cloud
          #{{- with .Values.configuration.extraEnvVars }}
          #{{- range $key, $value := . }}
            - name: #{{ default "none" $key }}
              value: #{{ default "none" $value | quote }}
          #{{- with .Values.credentials.extraEnvVars }}
          #{{- range $key, $value := . }}
            - name: #{{ default "none" $key }}
              valueFrom:
                secretKeyRef:
                  name: #{{ include "velero.secretName" $ }}
                  key: #none
          lifecycle:
      dnsPolicy: #<DNS_POLICY>