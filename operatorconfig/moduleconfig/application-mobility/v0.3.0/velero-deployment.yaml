apiVersion: apps/v1
kind: Deployment
metadata:
  name: velero
  namespace: <NAMESPACE>
  annotations:
  labels:
    app.kubernetes.io/name: velero
    app.kubernetes.io/instance: application-mobility
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    component: velero
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/instance: application-mobility
      app.kubernetes.io/name: velero
  template:
    metadata:
      labels:
        name: velero
        app.kubernetes.io/name: velero
        app.kubernetes.io/instance: application-mobility
        app.kubernetes.io/managed-by: {{ .Release.Service }}
      annotations:
      <POD_ANNOTATIONS>
      <METRICS_PODANNOTATIONS>
    spec:
      imagePullSecrets: <PULL_SECRET>
        - name: <PULL_SCRET_NAME>
      restartPolicy: Always
      serviceAccountName: <SERVICE_ACCOUNT_NAME>
      priorityClassName: <NODEAGENT_PRIORITYCLASSNAME>
      terminationGracePeriodSeconds: <TERMINATION_GRACE_PERIOD_SECONDS>
      containers:
        - name: velero
          image: <IMAGE_REPOSITORY>@<IMAGE_DIGEST>
          image: <IMAGE_REPOSITORY>:<IMAGE_TAG>
          imagePullPolicy: <IMAGE_PULLPOLICY>
          ports:
            - name: http-monitoring
              containerPort: 8085
          command:
            - /velero
          args:
            - server
            ### Flags
          {{- with .Values.configuration }}
            - --uploader-type={{ default "restic" .uploaderType }}
            {{- with .backupSyncPeriod }}
            - --backup-sync-period={{ . }}
            {{- with .fsBackupTimeout }}
            - --fs-backup-timeout={{ . }}
            {{- with .clientBurst }}
            - --client-burst={{ . }}
            {{- with .clientPageSize }}
            - --client-page-size={{ . }}
            {{- with .clientQPS }}
            - --client-qps={{ . }}
            {{- with .defaultBackupStorageLocation }}
            - --default-backup-storage-location={{ . }}
            {{- with .defaultBackupTTL }}
            - --default-backup-ttl={{ . }}
            {{- with .defaultVolumeSnapshotLocations }}
            - --default-volume-snapshot-locations={{ . }}
            {{- if .defaultVolumesToFsBackup }}
            - --default-volumes-to-fs-backup
            {{- with .defaultRepoMaintainFrequency }}
            - --default-repo-maintain-frequency={{ . }}
            {{- with .disableControllers }}
            - --disable-controllers={{ . }}
            {{- with .garbageCollectionFrequency }}
            - --garbage-collection-frequency={{ . }}
            {{- with .logFormat }}
            - --log-format={{ . }}
            {{- with .logLevel }}
            - --log-level={{ . }}
            {{- with .metricsAddress }}
            - --metrics-address={{ . }}
            {{- with .pluginDir }}
            - --plugin-dir={{ . }}
            {{- with .profilerAddress }}
            - --profiler-address={{ . }}
            - --restore-only
            {{- with .restoreResourcePriorities }}
            - --restore-resource-priorities={{ . }}
            {{- with .storeValidationFrequency }}
            - --store-validation-frequency={{ . }}
            {{- with .terminatingResourceTimeout }}
            - --terminating-resource-timeout={{ . }}
            ### Global Flags
            {{- with .features }}
            - --features={{ . }}
            {{- with .namespace }}
            - --namespace={{ . }}
          resources: <RESOURCES>
          securityContext: <SECURITY_CONTEXT>
          volumeMounts:
            - name: plugins
              mountPath: /plugins
            - name: cloud-credentials
              mountPath: /credentials
            - name: scratch
              mountPath: /scratch
            - name: tmpdir
              mountPath: /tmp
          envFrom:
          - secretRef:
              name: <CREDENTIAL_EXTRASECRET_REF>
          env:
            - name: VELERO_SCRATCH_DIR
              value: /scratch
            - name: VELERO_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: LD_LIBRARY_PATH
              value: /plugins
            - name: AWS_SHARED_CREDENTIALS_FILE
              value: /credentials/cloud
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /credentials/cloud
            - name: AZURE_CREDENTIALS_FILE
              value: /credentials/cloud
            - name: ALIBABA_CLOUD_CREDENTIALS_FILE
              value: /credentials/cloud
          {{- with .Values.configuration.extraEnvVars }}
          {{- range $key, $value := . }}
            - name: {{ default "none" $key }}
              value: {{ default "none" $value | quote }}
          {{- with .Values.credentials.extraEnvVars }}
          {{- range $key, $value := . }}
            - name: {{ default "none" $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "velero.secretName" $ }}
                  key: {{ default "none" $key }}
          lifecycle:
      dnsPolicy: <DNS_POLICY>
      initContainers: {}
 
      volumes:
        - name: cloud-credentials
          secret:
            secretName: {{ include "velero.secretName" . }}
        - name: plugins
          emptyDir: {}
        - name: scratch
          emptyDir: {}
        - name: tmpdir
          emptyDir: {}
      securityContext:
      nodeSelector: <NDE_SELECTOR>
      dnsConfig: <DNS_CONFIG>
      tolerations: <TOLERATIONS>
      affinity: <AFFINITY>

