- scenario: "Install PowerScale Driver(With Observability)"
  paths:
    - "testfiles/storage_csm_powerscale_observability.yaml"
  modules:
    - "observability"
  steps:
    - "Given an environment with k8s or openshift, and CSM operator installed"
    - "Create storageclass with name [op-e2e-isilon] and template [testfiles/powerscale-templates/powerscale-storageclass-template.yaml] for [pscale]"
    - "Set up secret with template [testfiles/powerscale-templates/powerscale-secret-template.yaml] name [isilon-creds] in namespace [isilon] for [pscale]"
    - "Apply custom resource [1]"
    - "Set up secret from [testfiles/observability-cert.yaml] in namespace [karavi]"
    - "Validate custom resource [1]"
    - "Validate [powerscale] driver from CR [1] is installed"
    - "Validate [observability] module from CR [1] is installed"
    # cleanup
    - "Enable forceRemoveDriver on CR [1]"
    - "Delete custom resource [1]"
    - "Restore template [testfiles/powerscale-templates/powerscale-secret-template.yaml] for [pscale]"
    - "Restore template [testfiles/powerscale-templates/powerscale-storageclass-template.yaml] for [pscale]"

- scenario: "Install PowerScale Driver(Standalone), Enable/Disable Observability"
  paths:
    - "testfiles/storage_csm_powerscale.yaml"
  modules:
    - "observability"
  steps:
    - "Given an environment with k8s or openshift, and CSM operator installed"
    - "Apply custom resource [1]"
    - "Validate custom resource [1]"
    - "Validate [powerscale] driver from CR [1] is installed"
    - "Validate [observability] module from CR [1] is not installed"
    - "Enable [observability] module from CR [1]"
    - "Validate [powerscale] driver from CR [1] is installed"
    - "Validate [observability] module from CR [1] is installed"
    - "Disable [observability] module from CR [1]"
    - "Validate [powerscale] driver from CR [1] is installed"
    - "Validate [observability] module from CR [1] is not installed"
    # cleanup
    - "Enable forceRemoveDriver on CR [1]"
    - "Delete custom resource [1]"

- scenario: "Install PowerScale Driver(With Observability), Disable Observability module"
  paths:
    - "testfiles/storage_csm_powerscale_observability.yaml"
  modules:
    - "observability"
  steps:
    - "Given an environment with k8s or openshift, and CSM operator installed"
    - "Apply custom resource [1]"
    - "Validate custom resource [1]"
    - "Validate [powerscale] driver from CR [1] is installed"
    - "Validate [observability] module from CR [1] is installed"
    - "Disable [observability] module from CR [1]"
    - "Validate [powerscale] driver from CR [1] is installed"
    - "Validate [observability] module from CR [1] is not installed"
    # cleanup
    - "Enable forceRemoveDriver on CR [1]"
    - "Delete custom resource [1]"

- scenario: "Install PowerScale Driver(With Authorization and Observability)"
  paths:
    - "testfiles/authorization-templates/csm_authorization_proxy_server_no_cert.yaml"
    - "testfiles/storage_csm_powerscale_observability_auth.yaml"
  modules:
    - "authorizationproxyserver"
    - "authorization"
    - "observability"
  steps:
    - "Given an environment with k8s or openshift, and CSM operator installed"
    - "Create [authorization-proxy-server] prerequisites from CR [1]"
    - "Apply custom resource [1]"
    - "Validate [authorization-proxy-server] module from CR [1] is installed"
    - "Configure authorization-proxy-server for [powerscale]"
    - "Create storageclass with name [op-e2e-isilon] and template [testfiles/powerscale-templates/powerscale-storageclass-template.yaml] for [pscale]"
    - "Set up secret with template [testfiles/powerscale-templates/powerscale-auth-secret-template.yaml] name [isilon-creds-auth] in namespace [isilon] for [pscaleAuth]"
    - "Set up secret with template [testfiles/powerscale-templates/karavi-authorization-config.json] name [karavi-authorization-config] in namespace [isilon] for [pscaleAuthSidecar]"
    - "Set up secret with template [testfiles/authorization-templates/rootCertificate.pem] name [proxy-server-root-certificate] in namespace [isilon] for [authSidecarCert]"
    - "Set up secret from [testfiles/observability-cert.yaml] in namespace [karavi]"
    - "Apply custom resource [2]"
    - "Validate custom resource [2]"
    - "Validate [powerscale] driver from CR [2] is installed"
    - "Validate [authorization] module from CR [2] is installed"
    - "Validate [observability] module from CR [2] is installed"
    - "Run custom test"
    # cleanup
    - "Enable forceRemoveDriver on CR [2]"
    - "Delete custom resource [2]"
    - "Delete custom resource [1]"
    - "Restore template [testfiles/powerscale-templates/powerscale-storageclass-template.yaml] for [pscale]"
    - "Restore template [testfiles/powerscale-templates/powerscale-auth-secret-template.yaml] for [pscaleAuth]"
    - "Restore template [testfiles/powerscale-templates/karavi-authorization-config.json] for [pscaleAuthSidecar]"
    - "Restore template [testfiles/authorization-templates/rootCertificate.pem] for [authSidecarCert]"
  customTest:
    name: Cert CSI
    run:
      - ./cert-csi test vio --sc op-e2e-isilon --chainNumber 2 --chainLength 2

- scenario: "Install PowerScale Driver(Standalone), Enable Authorization, Enable Observability"
  paths:
    - "testfiles/authorization-templates/csm_authorization_proxy_server_no_cert.yaml"
    - "testfiles/storage_csm_powerscale.yaml"
  modules:
    - "authorizationproxyserver"
    - "observability"
    - "authorization"
  steps:
    - "Given an environment with k8s or openshift, and CSM operator installed"
    - "Create [authorization-proxy-server] prerequisites from CR [1]"
    - "Apply custom resource [1]"
    - "Validate [authorization-proxy-server] module from CR [1] is installed"
    - "Configure authorization-proxy-server for [powerscale]"
    - "Create storageclass with name [op-e2e-isilon] and template [testfiles/powerscale-templates/powerscale-storageclass-template.yaml] for [pscale]"
    - "Set up secret with template [testfiles/powerscale-templates/powerscale-secret-template.yaml] name [isilon-creds] in namespace [isilon] for [pscale]"
    - "Apply custom resource [2]"
    - "Validate custom resource [2]"
    - "Validate [powerscale] driver from CR [2] is installed"
    - "Validate [authorization] module from CR [2] is not installed"
    - "Validate [observability] module from CR [2] is not installed"
    - "Enable [authorization] module from CR [2]"
    - "Set secret for driver from CR [2] to [isilon-creds-auth]"
    - "Set up secret with template [testfiles/powerscale-templates/karavi-authorization-config.json] name [karavi-authorization-config] in namespace [isilon] for [pscaleAuthSidecar]"
    - "Set up secret with template [testfiles/authorization-templates/rootCertificate.pem] name [proxy-server-root-certificate] in namespace [isilon] for [authSidecarCert]"
    - "Validate [powerscale] driver from CR [2] is installed"
    - "Validate [authorization] module from CR [2] is installed"
    - "Validate [observability] module from CR [2] is not installed"
    - "Set up secret from [testfiles/observability-cert.yaml] in namespace [karavi]"
    - "Enable [observability] module from CR [2]"
    - "Validate [powerscale] driver from CR [2] is installed"
    - "Validate [authorization] module from CR [2] is installed"
    - "Validate [observability] module from CR [2] is installed"
    # cleanup
    - "Enable forceRemoveDriver on CR [2]"
    - "Delete custom resource [2]"
    - "Delete custom resource [1]"
    - "Restore template [testfiles/powerscale-templates/powerscale-secret-template.yaml] for [pscale]"
    - "Restore template [testfiles/powerscale-templates/karavi-authorization-config.json] for [pscaleAuthSidecar]"

- scenario: "Install PowerScale Driver(With Authorization and Observability), Disable Observability module, Disable Authorization module"
  paths:
    - "testfiles/authorization-templates/csm_authorization_proxy_server_no_cert.yaml"
    - "testfiles/storage_csm_powerscale_observability_auth.yaml"
  modules:
    - "authorizationproxyserver"
    - "authorization"
    - "observability"
  steps:
    - "Given an environment with k8s or openshift, and CSM operator installed"
    - "Create [authorization-proxy-server] prerequisites from CR [1]"
    - "Apply custom resource [1]"
    - "Validate [authorization-proxy-server] module from CR [1] is installed"
    - "Configure authorization-proxy-server for [powerscale]"
    - "Create storageclass with name [op-e2e-isilon] and template [testfiles/powerscale-templates/powerscale-storageclass-template.yaml] for [pscale]"
    - "Set up secret with template [testfiles/powerscale-templates/powerscale-auth-secret-template.yaml] name [isilon-creds-auth] in namespace [isilon] for [pscaleAuth]"
    - "Set up secret with template [testfiles/powerscale-templates/karavi-authorization-config.json] name [karavi-authorization-config] in namespace [isilon] for [pscaleAuthSidecar]"
    - "Set up secret with template [testfiles/authorization-templates/rootCertificate.pem] name [proxy-server-root-certificate] in namespace [isilon] for [authSidecarCert]"
    - "Set up secret from [testfiles/observability-cert.yaml] in namespace [karavi]"
    - "Apply custom resource [2]"
    - "Validate custom resource [2]"
    - "Validate [powerscale] driver from CR [2] is installed"
    - "Validate [authorization] module from CR [2] is installed"
    - "Validate [observability] module from CR [2] is installed"
    - "Disable [observability] module from CR [2]"
    - "Validate [powerscale] driver from CR [2] is installed"
    - "Validate [authorization] module from CR [2] is installed"
    - "Validate [observability] module from CR [2] is not installed"
    - "Disable [authorization] module from CR [2]"
    - "Set secret for driver from CR [2] to [isilon-creds]"
    - "Validate [powerscale] driver from CR [2] is installed"
    - "Validate [authorization] module from CR [2] is not installed"
    - "Validate [observability] module from CR [2] is not installed"
    - "Run custom test"
    # cleanup
    - "Enable forceRemoveDriver on CR [2]"
    - "Delete custom resource [2]"
    - "Delete custom resource [1]"
    - "Restore template [testfiles/powerscale-templates/powerscale-storageclass-template.yaml] for [pscale]"
    - "Restore template [testfiles/powerscale-templates/powerscale-auth-secret-template.yaml] for [pscaleAuth]"
    - "Restore template [testfiles/powerscale-templates/karavi-authorization-config.json] for [pscaleAuthSidecar]"
    - "Restore template [testfiles/authorization-templates/rootCertificate.pem] for [authSidecarCert]"
  customTest:
    name: Cert CSI
    run:
      - ./cert-csi test vio --sc op-e2e-isilon --chainNumber 2 --chainLength 2

- scenario: "Install PowerScale Driver(With Authorization and Observability), Disable Authorization module, Disable Observability module"
  paths:
    - "testfiles/authorization-templates/csm_authorization_proxy_server_no_cert.yaml"
    - "testfiles/storage_csm_powerscale_observability_auth.yaml"
  modules:
    - "authorizationproxyserver"
    - "authorization"
    - "observability"
  steps:
    - "Given an environment with k8s or openshift, and CSM operator installed"
    - "Create [authorization-proxy-server] prerequisites from CR [1]"
    - "Apply custom resource [1]"
    - "Validate [authorization-proxy-server] module from CR [1] is installed"
    - "Configure authorization-proxy-server for [powerscale]"
    - "Create storageclass with name [op-e2e-isilon] and template [testfiles/powerscale-templates/powerscale-storageclass-template.yaml] for [pscale]"
    - "Set up secret with template [testfiles/powerscale-templates/powerscale-auth-secret-template.yaml] name [isilon-creds-auth] in namespace [isilon] for [pscaleAuth]"
    - "Set up secret with template [testfiles/powerscale-templates/karavi-authorization-config.json] name [karavi-authorization-config] in namespace [isilon] for [pscaleAuthSidecar]"
    - "Set up secret with template [testfiles/authorization-templates/rootCertificate.pem] name [proxy-server-root-certificate] in namespace [isilon] for [authSidecarCert]"
    - "Set up secret from [testfiles/observability-cert.yaml] in namespace [karavi]"
    - "Apply custom resource [2]"
    - "Validate custom resource [2]"
    - "Validate [powerscale] driver from CR [2] is installed"
    - "Validate [authorization] module from CR [2] is installed"
    - "Validate [observability] module from CR [2] is installed"
    - "Disable [authorization] module from CR [2]"
    - "Set secret for driver from CR [2] to [isilon-creds]"
    - "Validate [powerscale] driver from CR [2] is installed"
    - "Validate [authorization] module from CR [2] is not installed"
    - "Validate [observability] module from CR [2] is installed"
    - "Disable [observability] module from CR [2]"
    - "Validate [powerscale] driver from CR [2] is installed"
    - "Validate [authorization] module from CR [2] is not installed"
    - "Validate [observability] module from CR [2] is not installed"
    - "Run custom test"
    # cleanup
    - "Enable forceRemoveDriver on CR [2]"
    - "Delete custom resource [2]"
    - "Delete custom resource [1]"
    - "Restore template [testfiles/powerscale-templates/powerscale-storageclass-template.yaml] for [pscale]"
    - "Restore template [testfiles/powerscale-templates/powerscale-auth-secret-template.yaml] for [pscaleAuth]"
    - "Restore template [testfiles/powerscale-templates/karavi-authorization-config.json] for [pscaleAuthSidecar]"
    - "Restore template [testfiles/authorization-templates/rootCertificate.pem] for [authSidecarCert]"
  customTest:
    name: Cert CSI
    run:
      - ./cert-csi test vio --sc op-e2e-isilon --chainNumber 2 --chainLength 2

- scenario: "Install PowerFlex Driver(With Observability)"
  paths:
    - "testfiles/storage_csm_powerflex_observability.yaml"
  modules:
    - "observability"
  steps:
    - "Given an environment with k8s or openshift, and CSM operator installed"
    - "Create storageclass with name [op-e2e-vxflexos] and template [testfiles/powerflex-templates/powerflex-storageclass-template.yaml] for [pflex]"
    - "Set up secret with template [testfiles/powerflex-templates/powerflex-secret-template.yaml] name [test-vxflexos-config] in namespace [test-vxflexos] for [pflex]"
    - "Apply custom resource [1]"
    - "Validate [powerflex] driver from CR [1] is installed"
    - "Validate [observability] module from CR [1] is installed"
    # cleanup
    - "Enable forceRemoveDriver on CR [1]"
    - "Delete custom resource [1]"
    - "Restore template [testfiles/powerflex-templates/powerflex-secret-template.yaml] for [pflex]"
    - "Restore template [testfiles/powerflex-templates/powerflex-storageclass-template.yaml] for [pflex]"

- scenario: "Install PowerFlex Driver(Standalone), Enable/Disable Observability"
  paths:
    - "testfiles/storage_csm_powerflex.yaml"
  modules:
    - "observability"
  steps:
    - "Given an environment with k8s or openshift, and CSM operator installed"
    - "Create storageclass with name [op-e2e-vxflexos] and template [testfiles/powerflex-templates/powerflex-storageclass-template.yaml] for [pflex]"
    - "Set up secret with template [testfiles/powerflex-templates/powerflex-secret-template.yaml] name [test-vxflexos-config] in namespace [test-vxflexos] for [pflex]"
    - "Apply custom resource [1]"
    - "Validate [powerflex] driver from CR [1] is installed"
    - "Validate [observability] module from CR [1] is not installed"
    - "Enable [observability] module from CR [1]"
    - "Validate [powerflex] driver from CR [1] is installed"
    - "Validate [observability] module from CR [1] is installed"
    - "Disable [observability] module from CR [1]"
    - "Validate [powerflex] driver from CR [1] is installed"
    - "Validate [observability] module from CR [1] is not installed"
    # cleanup
    - "Enable forceRemoveDriver on CR [1]"
    - "Delete custom resource [1]"
    - "Restore template [testfiles/powerflex-templates/powerflex-secret-template.yaml] for [pflex]"
    - "Restore template [testfiles/powerflex-templates/powerflex-storageclass-template.yaml] for [pflex]"

- scenario: "Install PowerFlex Driver(With Observability), Disable Observability module"
  paths:
    - "testfiles/storage_csm_powerflex_observability.yaml"
  modules:
    - "observability"
  steps:
    - "Given an environment with k8s or openshift, and CSM operator installed"
    - "Create storageclass with name [op-e2e-vxflexos] and template [testfiles/powerflex-templates/powerflex-storageclass-template.yaml] for [pflex]"
    - "Set up secret with template [testfiles/powerflex-templates/powerflex-secret-template.yaml] name [test-vxflexos-config] in namespace [test-vxflexos] for [pflex]"
    - "Apply custom resource [1]"
    - "Validate [powerflex] driver from CR [1] is installed"
    - "Validate [observability] module from CR [1] is installed"
    - "Disable [observability] module from CR [1]"
    - "Validate [powerflex] driver from CR [1] is installed"
    - "Validate [observability] module from CR [1] is not installed"
    # cleanup
    - "Enable forceRemoveDriver on CR [1]"
    - "Delete custom resource [1]"
    - "Restore template [testfiles/powerflex-templates/powerflex-secret-template.yaml] for [pflex]"
    - "Restore template [testfiles/powerflex-templates/powerflex-storageclass-template.yaml] for [pflex]"

- scenario: "Install PowerFlex Driver(Standalone), Enable Authorization, Enable Observability"
  paths:
    - "testfiles/authorization-templates/csm_authorization_proxy_server_no_cert.yaml"
    - "testfiles/storage_csm_powerflex.yaml"
  modules:
    - "authorizationproxyserver"
    - "authorization"
    - "observability"
  steps:
    - "Given an environment with k8s or openshift, and CSM operator installed"
    - "Create [authorization-proxy-server] prerequisites from CR [1]"
    - "Apply custom resource [1]"
    - "Validate [authorization-proxy-server] module from CR [1] is installed"
    - "Configure authorization-proxy-server for [powerflex]"
    - "Create storageclass with name [op-e2e-vxflexos] and template [testfiles/powerflex-templates/powerflex-storageclass-template.yaml] for [pflex]"
    - "Set up secret with template [testfiles/powerflex-templates/csm-authorization-config.json] name [karavi-authorization-config] in namespace [test-vxflexos] for [pflexAuthSidecar]"
    - "Set up secret with template [testfiles/powerflex-templates/powerflex-secret-template.yaml] name [test-vxflexos-config] in namespace [test-vxflexos] for [pflex]"
    - "Restore template [testfiles/powerflex-templates/powerflex-secret-template.yaml] for [pflex]"
    - "Apply custom resource [2]"
    - "Validate custom resource [2]"
    - "Validate [powerflex] driver from CR [2] is installed"
    - "Validate [authorization] module from CR [2] is not installed"
    - "Set up secret with template [testfiles/powerflex-templates/powerflex-secret-template.yaml] name [test-vxflexos-config] in namespace [test-vxflexos] for [pflexAuth]"
    - "Enable [authorization] module from CR [2]"
    - "Validate [powerflex] driver from CR [2] is installed"
    - "Validate [authorization] module from CR [2] is installed"
    - "Validate [observability] module from CR [2] is not installed"
#    - "Set secret for driver from CR [2] to [test-vxflexos-config-auth]"
    - "Enable [observability] module from CR [2]"
    - "Validate [powerflex] driver from CR [2] is installed"
    - "Validate [authorization] module from CR [2] is installed"
    - "Validate [observability] module from CR [2] is installed"
    - "Run custom test"
    # cleanup
    - "Enable forceRemoveDriver on CR [2]"
    - "Delete custom resource [1]"
    - "Delete custom resource [2]"
    - "Restore template [testfiles/powerflex-templates/powerflex-secret-template.yaml] for [pflexAuth]"
    - "Restore template [testfiles/powerflex-templates/powerflex-storageclass-template.yaml] for [pflex]"
    - "Restore template [testfiles/powerflex-templates/csm-authorization-config.json] for [pflexAuthSidecar]"

- scenario: "Install PowerFlex Driver(With Authorization and Observability)"
  paths:
    - "testfiles/authorization-templates/csm_authorization_proxy_server_no_cert.yaml"
    - "testfiles/storage_csm_powerflex_observability_auth.yaml"
  modules:
    - "authorizationproxyserver"
    - "authorization"
    - "observability"
  steps:
    - "Given an environment with k8s or openshift, and CSM operator installed"
    - "Create [authorization-proxy-server] prerequisites from CR [1]"
    - "Apply custom resource [1]"
    - "Validate [authorization-proxy-server] module from CR [1] is installed"
    - "Configure authorization-proxy-server for [powerflex]"
    - "Create storageclass with name [op-e2e-vxflexos] and template [testfiles/powerflex-templates/powerflex-storageclass-template.yaml] for [pflex]"
    - "Set up secret with template [testfiles/powerflex-templates/csm-authorization-config.json] name [karavi-authorization-config] in namespace [test-vxflexos] for [pflexAuthSidecar]"
    - "Set up secret with template [testfiles/powerflex-templates/powerflex-secret-template.yaml] name [test-vxflexos-config] in namespace [test-vxflexos] for [pflex]"
    - "Set up secret with template [testfiles/powerflex-templates/powerflex-secret-template.yaml] name [test-vxflexos-config] in namespace [test-vxflexos] for [pflexAuth]"
    - "Set up secret from [testfiles/observability-cert.yaml] in namespace [karavi]"
    - "Apply custom resource [2]"
    - "Validate custom resource [2]"
    - "Validate [powerflex] driver from CR [2] is installed"
    - "Validate [authorization] module from CR [2] is installed"
    - "Validate [observability] module from CR [2] is installed"
    - "Run custom test"
    # cleanup
    - "Enable forceRemoveDriver on CR [2]"
    - "Delete custom resource [2]"
    - "Delete custom resource [1]"
    - "Restore template [testfiles/powerflex-templates/powerflex-secret-template.yaml] for [pflexAuth]"
    - "Restore template [testfiles/powerflex-templates/powerflex-storageclass-template.yaml] for [pflex]"
    - "Restore template [testfiles/powerflex-templates/csm-authorization-config.json] for [pflexAuthSidecar]"
  customTest:
    name: Cert CSI
    run:
      - ./cert-csi test vio --sc op-e2e-vxflexos --chainNumber 2 --chainLength 2

- scenario: Install PowerFlex Driver(With Authorization and Observability), Disable Observability module, Disable Authorization module"
  paths:
    - "testfiles/authorization-templates/csm_authorization_proxy_server_no_cert.yaml"
    - "testfiles/storage_csm_powerflex_observability_auth.yaml"
  modules:
    - "authorizationproxyserver"
    - "authorization"
    - "observability"
  steps:
    - "Given an environment with k8s or openshift, and CSM operator installed"
    - "Create [authorization-proxy-server] prerequisites from CR [1]"
    - "Apply custom resource [1]"
    - "Validate [authorization-proxy-server] module from CR [1] is installed"
    - "Configure authorization-proxy-server for [powerflex]"
    - "Create storageclass with name [op-e2e-vxflexos] and template [testfiles/powerflex-templates/powerflex-storageclass-template.yaml] for [pflex]"
    - "Set up secret with template [testfiles/powerflex-templates/csm-authorization-config.json] name [karavi-authorization-config] in namespace [test-vxflexos] for [pflexAuthSidecar]"
    - "Set up secret with template [testfiles/powerflex-templates/powerflex-secret-template.yaml] name [test-vxflexos-config] in namespace [test-vxflexos] for [pflex]"
    - "Set up secret with template [testfiles/powerflex-templates/powerflex-secret-template.yaml] name [test-vxflexos-config] in namespace [test-vxflexos] for [pflexAuth]"
    - "Set up secret from [testfiles/observability-cert.yaml] in namespace [karavi]"
    - "Apply custom resource [2]"
    - "Validate custom resource [2]"
    - "Validate [powerflex] driver from CR [2] is installed"
    - "Validate [authorization] module from CR [2] is installed"
    - "Validate [observability] module from CR [2] is installed"
    - "Disable [observability] module from CR [2]"
    - "Validate [powerflex] driver from CR [2] is installed"
    - "Validate [authorization] module from CR [2] is installed"
    - "Validate [observability] module from CR [2] is not installed"
    - "Disable [authorization] module from CR [2]"
    - "Set secret for driver from CR [1] to [test-vxflexos-config]"
    - "Validate [powerflex] driver from CR [2] is installed"
    - "Validate [authorization] module from CR [2] is not installed"
    - "Validate [observability] module from CR [2] is not installed"
    - "Run custom test"
    # cleanup
    - "Enable forceRemoveDriver on CR [2]"
    - "Delete custom resource [2]"
    - "Delete custom resource [1]"
    - "Restore template [testfiles/powerflex-templates/powerflex-secret-template.yaml] for [pflexAuth]"
    - "Restore template [testfiles/powerflex-templates/powerflex-storageclass-template.yaml] for [pflex]"
    - "Restore template [testfiles/powerflex-templates/csm-authorization-config.json] for [pflexAuthSidecar]"
  customTest:
    name: Cert CSI
    run:
      - ./cert-csi test vio --sc op-e2e-vxflexos --chainNumber 2 --chainLength 2

- scenario: Install PowerFlex Driver(With Authorization and Observability), Disable Authorization module, Disable Observability module"
  paths:
    - "testfiles/authorization-templates/csm_authorization_proxy_server_no_cert.yaml"
    - "testfiles/storage_csm_powerflex_observability_auth.yaml"
  modules:
    - "authorizationproxyserver"
    - "authorization"
    - "observability"
  steps:
    - "Given an environment with k8s or openshift, and CSM operator installed"
    - "Create [authorization-proxy-server] prerequisites from CR [1]"
    - "Apply custom resource [1]"
    - "Validate [authorization-proxy-server] module from CR [1] is installed"
    - "Configure authorization-proxy-server for [powerflex]"
    - "Create storageclass with name [op-e2e-vxflexos] and template [testfiles/powerflex-templates/powerflex-storageclass-template.yaml] for [pflex]"
    - "Set up secret with template [testfiles/powerflex-templates/csm-authorization-config.json] name [karavi-authorization-config] in namespace [test-vxflexos] for [pflexAuthSidecar]"
    - "Set up secret with template [testfiles/powerflex-templates/powerflex-secret-template.yaml] name [test-vxflexos-config] in namespace [test-vxflexos] for [pflex]"
    - "Set up secret with template [testfiles/powerflex-templates/powerflex-secret-template.yaml] name [test-vxflexos-config] in namespace [test-vxflexos] for [pflexAuth]"
    - "Set up secret from [testfiles/observability-cert.yaml] in namespace [karavi]"
    - "Apply custom resource [2]"
    - "Validate custom resource [2]"
    - "Validate [powerflex] driver from CR [2] is installed"
    - "Validate [authorization] module from CR [2] is installed"
    - "Validate [observability] module from CR [2] is installed"
    - "Disable [authorization] module from CR [2]"
    - "Set secret for driver from CR [1] to [test-vxflexos-config]"
    - "Validate [powerflex] driver from CR [2] is installed"
    - "Validate [authorization] module from CR [2] is not installed"
    - "Validate [observability] module from CR [2] is installed"
    - "Disable [observability] module from CR [2]"
    - "Validate [powerflex] driver from CR [2] is installed"
    - "Validate [authorization] module from CR [2] is not installed"
    - "Validate [observability] module from CR [2] is not installed"
    - "Run custom test"
    # cleanup
    - "Enable forceRemoveDriver on CR [2]"
    - "Delete custom resource [2]"
    - "Delete custom resource [1]"
    - "Restore template [testfiles/powerflex-templates/powerflex-secret-template.yaml] for [pflexAuth]"
    - "Restore template [testfiles/powerflex-templates/powerflex-storageclass-template.yaml] for [pflex]"
    - "Restore template [testfiles/powerflex-templates/csm-authorization-config.json] for [pflexAuthSidecar]"
  customTest:
    name: Cert CSI
    run:
      - ./cert-csi test vio --sc op-e2e-vxflexos --chainNumber 2 --chainLength 2
