# List of E2E Tests Scenarios for minimal samples

- scenario: "Install PowerStore Driver(Standalone)"
  paths:
    - "testfiles/minimal-testfiles/storage_csm_powerstore.yaml"
  tags:
    - "powerstore"
  steps:
    - "Given an environment with k8s or openshift, and CSM operator installed"
    - "Create storageclass with name [op-e2e-pstore] and template [testfiles/powerstore-templates/powerstore-storageclass-template.yaml] for [pstore]"
    - "Set up secret with template [testfiles/powerstore-templates/powerstore-secret-template.yaml] name [powerstore-config] in namespace [powerstore] for [pstore]"
    - "Apply custom resource [1]"
    - "Validate custom resource [1]"
    - "Validate [powerstore] driver from CR [1] is installed"
    - "Run custom test"
    # cleanup
    - "Enable forceRemoveDriver on CR [1]"
    - "Delete custom resource [1]"
    - "Restore template [testfiles/powerstore-templates/powerstore-secret-template.yaml] for [pstore]"
    - "Restore template [testfiles/powerstore-templates/powerstore-storageclass-template.yaml] for [pstore]"
  customTest:
    name: Cert CSI
    run:
      - cert-csi test vio --sc op-e2e-pstore --chainNumber 2 --chainLength 2

- scenario: "Install PowerStore Driver(With Resiliency)"
  paths:
    - "testfiles/minimal-testfiles/storage_csm_powerstore_resiliency.yaml"
  tags:
    - "powerstore"
    - "resiliency"
  steps:
    - "Given an environment with k8s or openshift, and CSM operator installed"
    - "Create storageclass with name [op-e2e-pstore] and template [testfiles/powerstore-templates/powerstore-storageclass-template.yaml] for [pstore]"
    - "Set up secret with template [testfiles/powerstore-templates/powerstore-secret-template.yaml] name [powerstore-config] in namespace [powerstore] for [pstore]"
    - "Apply custom resource [1]"
    - "Validate custom resource [1]"
    - "Validate [powerstore] driver from CR [1] is installed"
    - "Validate [resiliency] module from CR [1] is installed"
    - "Run custom test"
    # cleanup
    - "Enable forceRemoveDriver on CR [1]"
    - "Delete custom resource [1]"
    - "Restore template [testfiles/powerstore-templates/powerstore-secret-template.yaml] for [pstore]"
    - "Restore template [testfiles/powerstore-templates/powerstore-storageclass-template.yaml] for [pstore]"
  customTest:
    name: CustomTest
    run:
      - echo "no current test for resiliency"

- scenario: "Install PowerStore Driver(Standalone), Enable Resiliency"
  paths:
    - "testfiles/minimal-testfiles/storage_csm_powerstore.yaml"
  tags:
    - "powerstore"
    - "resiliency"
  steps:
    - "Given an environment with k8s or openshift, and CSM operator installed"
    - "Create storageclass with name [op-e2e-pstore] and template [testfiles/powerstore-templates/powerstore-storageclass-template.yaml] for [pstore]"
    - "Set up secret with template [testfiles/powerstore-templates/powerstore-secret-template.yaml] name [powerstore-config] in namespace [powerstore] for [pstore]"
    - "Apply custom resource [1]"
    - "Validate custom resource [1]"
    - "Validate [powerstore] driver from CR [1] is installed"
    - "Validate [resiliency] module from CR [1] is not installed"
    - "Enable [resiliency] module from CR [1]"
    - "Validate [powerstore] driver from CR [1] is installed"
    - "Validate [resiliency] module from CR [1] is installed"
    - "Disable [resiliency] module from CR [1]"
    - "Validate [powerstore] driver from CR [1] is installed"
    - "Validate [resiliency] module from CR [1] is not installed"
    # cleanup
    - "Enable forceRemoveDriver on CR [1]"
    - "Delete custom resource [1]"
    - "Restore template [testfiles/powerstore-templates/powerstore-secret-template.yaml] for [pstore]"
    - "Restore template [testfiles/powerstore-templates/powerstore-storageclass-template.yaml] for [pstore]"

- scenario: "Install Unity Driver(Standalone)"
  paths:
    - "testfiles/minimal-testfiles/storage_csm_unity.yaml"
  tags:
    - "unity"
  steps:
    - "Given an environment with k8s or openshift, and CSM operator installed"
    - "Create storageclass with name [op-e2e-unity] and template [testfiles/unity-templates/unity-storageclass-template.yaml] for [unity]"
    - "Set up secret with template [testfiles/unity-templates/unity-secret-template.yaml] name [unity-creds] in namespace [unity] for [unity]"
    - "Apply custom resource [1]"
    - "Validate custom resource [1]"
    - "Validate [unity] driver from CR [1] is installed"
    - "Run custom test"
    # cleanup
    - "Enable forceRemoveDriver on CR [1]"
    - "Delete custom resource [1]"
    - "Restore template [testfiles/unity-templates/unity-secret-template.yaml] for [unity]"
    - "Restore template [testfiles/unity-templates/unity-storageclass-template.yaml] for [unity]"
  customTest:
    name: Cert CSI
    run:
      - cert-csi test vio --sc op-e2e-unity --chainNumber 2 --chainLength 2

- scenario: "Install PowerFlex Driver(Standalone)"
  paths:
    - "testfiles/minimal-testfiles/storage_csm_powerflex.yaml"
  tags:
    - "powerflex"
    - "sanity"
  steps:
    - "Given an environment with k8s or openshift, and CSM operator installed"
    - "Create storageclass with name [op-e2e-vxflexos] and template [testfiles/powerflex-templates/powerflex-storageclass-template.yaml] for [pflex]"
    - "Set up secret with template [testfiles/powerflex-templates/powerflex-secret-template.yaml] name [test-vxflexos-config] in namespace [test-vxflexos] for [pflex]"
    - "Apply custom resource [1]"
    - "Validate custom resource [1]"
    - "Validate [powerflex] driver from CR [1] is installed"
    - "Run custom test"
    # cleanup
    - "Enable forceRemoveDriver on CR [1]"
    - "Delete custom resource [1]"
    - "Restore template [testfiles/powerflex-templates/powerflex-secret-template.yaml] for [pflex]"
    - "Restore template [testfiles/powerflex-templates/powerflex-storageclass-template.yaml] for [pflex]"
  customTest:
    name: Cert CSI
    run:
      - cert-csi test vio --sc op-e2e-vxflexos --chainNumber 2 --chainLength 2
