#
# Copyright Â© 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#      http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#
apiVersion: storage.dell.com/v1
kind: ContainerStorageModule
metadata:
  name: powermax
  namespace: powermax
spec:
  # Add fields here
  driver:
    csiDriverType: "powermax"
    csiDriverSpec:
      # in OCP <= 4.16 and K8s <= 1.29, fsGroupPolicy is an immutable field
      # fsGroupPolicy: Defines if the underlying volume supports changing ownership and permission of the volume before being mounted.
      # Allowed values: ReadWriteOnceWithFSType, File , None
      # Default value: ReadWriteOnceWithFSType
      fSGroupPolicy: "ReadWriteOnceWithFSType"
      # storageCapacity: Helps the scheduler to schedule the pod on a node satisfying the topology constraints, only if the requested capacity is available on the storage array
      # Allowed values:
      #   true: enable storage capacity tracking
      #   false: disable storage capacity tracking
      storageCapacity: true
    configVersion: v2.14.1
    # replica: Define the number of PowerMax controller nodes
    # to deploy to the Kubernetes release
    # Controller count
    # Allowed values: n, where n > 0
    # Default value: 2
    replicas: 2
    # Default credential secret for Powermax, if not set it to ""
    authSecret: powermax-creds
    dnsPolicy: ClusterFirstWithHostNet
    forceRemoveDriver: true
    common:
      image: quay.io/dell/container-storage-modules/csi-powermax:nightly
      # imagePullPolicy: Policy to determine if the image should be pulled prior to starting the container.
      # Allowed values:
      #  Always: Always pull the image.
      #  IfNotPresent: Only pull the image if it does not already exist on the node.
      #  Never: Never pull the image.
      # Default value: None
      imagePullPolicy: Always
      envs:
        # X_CSI_MANAGED_ARRAYS: Serial ID of the arrays that will be used for provisioning
        # Default value: None
        # Examples: "000000000001,000000000002"
        - name: X_CSI_MANAGED_ARRAYS
          value: "REPLACE_ARRAYS"
        # X_CSI_POWERMAX_PORTGROUPS: Define the set of existing port groups that the driver will use.
        # It is a comma separated list of portgroup names.
        # Required only in case of iSCSI and NVMe/TCP only
        # Allowed values: iSCSI or NVMe/TCP Port Group names
        # Default value: None
        # Examples: "pg1", "pg1, pg2"
        - name: X_CSI_POWERMAX_PORTGROUPS
          value: "REPLACE_PORTGROUPS"
        # "X_CSI_TRANSPORT_PROTOCOL" can be "FC" or "FIBRE" for fibrechannel,
        # "REPLACE_PROTOCOL" for iSCSI,
        # "NVMETCP" for NVMeTCP or "" for autoselection.
        # Allowed values:
        #   "FC"    - Fiber Channel protocol
        #   "FIBER" - Fiber Channel protocol
        #   "REPLACE_PROTOCOL" - iSCSI protocol
        #   "NVMETCP" = NVMeTCP protocol
        #   ""      - Automatic selection of transport protocol
        # Default value: "" <empty> defaults to auto if nothing is specified
        - name: X_CSI_TRANSPORT_PROTOCOL
          value: "REPLACE_PROTOCOL"
        # X_CSI_K8S_CLUSTER_PREFIX: Define a prefix that is appended onto
        # all resources created in the Array
        # This should be unique per K8s/CSI deployment
        # maximum length of this value is 3 characters
        # Default value: "CSM"
        # Examples: "XYZ", "EMC"
        - name: X_CSI_K8S_CLUSTER_PREFIX
          value: "CSM"
        # Specify kubelet config dir path.
        # Ensure that the config.yaml file is present at this path.
        # Default value: /var/lib/kubelet
        - name: KUBELET_CONFIG_DIR
          value: /var/lib/kubelet
        # VMware/vSphere virtualization support
        # set X_CSI_VSPHERE_ENABLED to true, if you to enable VMware virtualized environment support via RDM
        # Allowed values:
        #   "true" - vSphere volumes are enabled
        #   "false" - vSphere volumes are disabled
        # Default value: "false"
        - name: "X_CSI_VSPHERE_ENABLED"
          value: "false"
        # X_CSI_VSPHERE_PORTGROUP: An existing portGroup that driver will use for vSphere
        # recommended format: csi-x-VC-PG, x can be anything of user choice
        # Allowed value: valid existing port group on the array
        # Default value: "" <empty>
        - name: "X_CSI_VSPHERE_PORTGROUP"
          value: ""
        # X_CSI_VSPHERE_HOSTNAME: An existing host(initiator group)/ host group(cascaded initiator group) that driver will use for vSphere
        # this host should contain initiators from all the ESXs/ESXi host where the cluster is deployed
        # recommended format: csi-x-VC-HN, x can be anything of user choice
        # Allowed value: valid existing host/host group on the array
        # Default value: "" <empty>
        - name: "X_CSI_VSPHERE_HOSTNAME"
          value: ""
        # X_CSI_VCENTER_HOST: URL/endpoint of the vCenter where all the ESX are present
        # Allowed value: valid vCenter host endpoint
        # Default value: "" <empty>
        - name: "X_CSI_VCENTER_HOST"
          value: ""
        # CSI driver log level
        # Allowed values: "error", "warn"/"warning", "info", "debug"
        # Default value: "debug"
        - name: "CSI_LOG_LEVEL"
          value: "info"
        # X_CSI_POWERMAX_SKIP_CERTIFICATE_VALIDATION: It determines if driver is going to skip verification
        # of TLS certificates while connecting to Unisphere RESTAPI interface
        # If it is set to false,
        # then a secret powermax-certs has to be created with a X.509 certificate of CA
        # which signed the Unisphere certificate
        # Allowed values:
        #   "true"  - TLS certificates verification will be skipped
        #   "false" - TLS certificates will be verified
        # Default value: "true"
        - name: "X_CSI_POWERMAX_SKIP_CERTIFICATE_VALIDATION"
          value: "false"
        # CSI driver log format
        # Allowed values: "TEXT" or "JSON"
        # Default value: "TEXT"
        - name: "CSI_LOG_FORMAT"
          value: "TEXT"
    controller:
      envs:
        # X_CSI_HEALTH_MONITOR_ENABLED: Enable/Disable health monitor of CSI volumes from node plugin- volume usage, volume condition
        # Allowed values:
        #   true: enable checking of health condition of CSI volumes
        #   false: disable checking of health condition of CSI volumes
        # Default value: false
        - name: X_CSI_HEALTH_MONITOR_ENABLED
          value: "false"
      # nodeSelector: Define node selection constraints for controller pods.
      # For the pod to be eligible to run on a node, the node must have each
      # of the indicated key-value pairs as labels.
      # Leave as blank to consider all nodes
      # Allowed values: map of key-value pairs
      # Default value: None
      nodeSelector:
      # Uncomment if nodes you wish to use have the node-role.kubernetes.io/control-plane taint
      #  node-role.kubernetes.io/control-plane: ""

      # tolerations: Define tolerations that would be applied to controller deployment
      # Leave as blank to install controller on worker nodes
      # Allowed values: map of key-value pairs
      # Default value: None
      tolerations:
      # Uncomment if nodes you wish to use have the node-role.kubernetes.io/control-plane taint
      #  - key: "node-role.kubernetes.io/control-plane"
      #    operator: "Exists"
      #    effect: "NoSchedule"
    node:
      envs:
        # X_CSI_POWERMAX_ISCSI_ENABLE_CHAP: Determine if the driver is going to configure
        # ISCSI node databases on the nodes with the CHAP credentials
        # If enabled, the CHAP secret must be provided in the credentials secret
        # and set to the key "chapsecret"
        # Allowed values:
        #   "true"  - CHAP is enabled
        #   "false" - CHAP is disabled
        # Default value: "false"
        - name: X_CSI_POWERMAX_ISCSI_ENABLE_CHAP
          value: "false"
        # X_CSI_HEALTH_MONITOR_ENABLED: Enable/Disable health monitor of CSI volumes from node plugin- volume usage, volume condition
        # Allowed values:
        #   true: enable checking of health condition of CSI volumes
        #   false: disable checking of health condition of CSI volumes
        # Default value: false
        - name: X_CSI_HEALTH_MONITOR_ENABLED
          value: "false"
        # X_CSI_TOPOLOGY_CONTROL_ENABLED provides a way to filter topology keys on a node based on array and transport protocol
        # if enabled, user can create custom topology keys by editing node-topology-config configmap.
        # Allowed values:
        #   true: enable the filtration based on config map
        #   false: disable the filtration based on config map
        # Default value: false
        - name: X_CSI_TOPOLOGY_CONTROL_ENABLED
          value: "false"
        # X_CSI_MAX_VOLUMES_PER_NODE: Defines the maximum PowerMax volumes that the controller can schedule on the node
        # Allowed values: Any value greater than or equal to 0
        # Default value: "0"
        - name: X_CSI_MAX_VOLUMES_PER_NODE
          value: "0"
      # nodeSelector: Define node selection constraints for node pods.
      # For the pod to be eligible to run on a node, the node must have each
      # of the indicated key-value pairs as labels.
      # Leave as blank to consider all nodes
      # Allowed values: map of key-value pairs
      # Default value: None
      nodeSelector:
      # Uncomment if nodes you wish to use have the node-role.kubernetes.io/control-plane taint
      #  node-role.kubernetes.io/control-plane: ""

      # tolerations: Define tolerations that would be applied to node daemonset
      # Add/Remove tolerations as per requirement
      # Leave as blank if you wish to not apply any tolerations
      # Allowed values: map of key-value pairs
      # Default value: None
      tolerations:
        - key: "node.kubernetes.io/memory-pressure"
          operator: "Exists"
          effect: "NoExecute"
        - key: "node.kubernetes.io/disk-pressure"
          operator: "Exists"
          effect: "NoExecute"
        - key: "node.kubernetes.io/network-unavailable"
          operator: "Exists"
          effect: "NoExecute"
    sideCars:
      # 'csivol' represents a string prepended to each volume created by the CSI driver
      - name: provisioner
        image: registry.k8s.io/sig-storage/csi-provisioner:v5.1.0
        args: ["--volume-name-prefix=csivol"]
      - name: attacher
        image: registry.k8s.io/sig-storage/csi-attacher:v4.8.0
      - name: registrar
        image: registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.13.0
      - name: resizer
        image: registry.k8s.io/sig-storage/csi-resizer:v1.13.1
      - name: snapshotter
        image: registry.k8s.io/sig-storage/csi-snapshotter:v8.2.0
      - name: csi-metadata-retriever
        image: quay.io/dell/container-storage-modules/csi-metadata-retriever:v1.10.0
      # health monitor is disabled by default, refer to driver documentation before enabling it
      # Default monitor-interval: 60s
      - name: external-health-monitor
        enabled: false
        args: ["--monitor-interval=60s"]
        image: registry.k8s.io/sig-storage/csi-external-health-monitor-controller:v0.14.0
        # Uncomment the following to configure how often external-provisioner polls the driver to detect changed capacity
        # Configure only when the storageCapacity is set as "true"
        # Allowed values: 1m,2m,3m,...,10m,...,60m etc. Default value: 5m
        # - name: provisioner
        #  args: ["--capacity-poll-interval=5m"]
  modules:
    # CSI Powermax Reverseproxy is a mandatory module for Powermax
    - name: csireverseproxy
      configVersion: v2.13.1
      components:
        - name: csipowermax-reverseproxy
          # image: Define the container images used for the reverse proxy
          # Default value: None
          image: quay.io/dell/container-storage-modules/csipowermax-reverseproxy:nightly
          imagePullPolicy: Always
          envs:
            # "tlsSecret" defines the TLS secret that is created with certificate
            # and its associated key
            # Default value: None
            # Example: "tls-secret"
            - name: X_CSI_REVPROXY_TLS_SECRET
              value: "csirevproxy-tls-secret"
            - name: X_CSI_REVPROXY_PORT
              value: "2222"
            - name: X_CSI_CONFIG_MAP_NAME
              value: "powermax-reverseproxy-config"
            # deployAsSidecar defines the way reversproxy is installed with the driver
            # set it true, if csm-auth is enabled / you want it as a sidecar container
            # set it false, if you want it as a deployment
            - name: "DeployAsSidecar"
              value: "true"
