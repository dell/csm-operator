apiVersion: storage.dell.com/v1
kind: ContainerStorageModule
metadata:
  name: test-vxflexos
  namespace: test-vxflexos
spec:
  driver:
    csiDriverType: "powerflex"
    csiDriverSpec:
      # fsGroupPolicy: Defines if the underlying volume supports changing ownership and permission of the volume before being mounted.
      # Allowed values: ReadWriteOnceWithFSType, File , None
      # Default value: ReadWriteOnceWithFSType
      fSGroupPolicy: "File"
    configVersion: v2.15.0
    replicas: 2
    dnsPolicy: ClusterFirstWithHostNet
    forceRemoveDriver: true
    common:
      image: quay.io/dell/container-storage-modules/csi-vxflexos:v2.15.0
      imagePullPolicy: Always
      envs:
        - name: X_CSI_VXFLEXOS_ENABLELISTVOLUMESNAPSHOT
          value: "false"
        - name: X_CSI_VXFLEXOS_ENABLESNAPSHOTCGDELETE
          value: "false"
        - name: X_CSI_DEBUG
          value: "true"
        - name: X_CSI_ALLOW_RWO_MULTI_POD_ACCESS
          value: "false"
        # Specify kubelet config dir path.
        # Ensure that the config.yaml file is present at this path.
        # Default value: None
        - name: KUBELET_CONFIG_DIR
          value: "/var/lib/kubelet"
        - name: "CERT_SECRET_COUNT"
          value: "0"
    sideCars:
      # sdc-monitor is disabled by default, due to high CPU usage
      - name: sdc-monitor
        enabled: false
        image: quay.io/dell/storage/powerflex/sdc:4.5.4
        envs:
          - name: HOST_PID
            value: "1"
          - name: MDM
            value: "10.x.x.x,10.x.x.x"  # provide MDM value
      # health monitor is disabled by default, refer to driver documentation before enabling it
      # Also set the env variable controller.envs.X_CSI_HEALTH_MONITOR_ENABLED  to "true".
      - name: csi-external-health-monitor-controller
        enabled: false
        args: ["--monitor-interval=60s"]
    controller:
      envs:
        # X_CSI_HEALTH_MONITOR_ENABLED: Enable/Disable health monitor of CSI volumes from Controller plugin - volume condition.
        # Install the 'external-health-monitor' sidecar accordingly.
        # Allowed values:
        #   true: enable checking of health condition of CSI volumes
        #   false: disable checking of health condition of CSI volumes
        # Default value: false
        - name: X_CSI_HEALTH_MONITOR_ENABLED
          value: "false"
      # "controller.nodeSelector" defines what nodes would be selected for pods of controller deployment
      # Leave as blank to use all nodes
      # Allowed values: map of key-value pairs
      # Default value: None
      # Examples:
      #  node-role.kubernetes.io/control-plane: ""
      nodeSelector:
      # Uncomment if nodes you wish to use have the node-role.kubernetes.io/master taint
      #  node-role.kubernetes.io/master: ""
      # Uncomment if nodes you wish to use have the node-role.kubernetes.io/control-plane taint
      #  node-role.kubernetes.io/control-plane: ""

      # "controller.tolerations" defines tolerations that would be applied to controller deployment
      # Leave as blank to install controller on worker nodes
      # Default value: None
      tolerations:
      # Uncomment if nodes you wish to use have the node-role.kubernetes.io/master taint
      # - key: "node-role.kubernetes.io/master"
      #   operator: "Exists"
      #   effect: "NoSchedule"
      # Uncomment if nodes you wish to use have the node-role.kubernetes.io/control-plane taint
      # - key: "node-role.kubernetes.io/control-plane"
      #   operator: "Exists"
      #   effect: "NoSchedule"
    node:
      envs:
        # X_CSI_HEALTH_MONITOR_ENABLED: Enable/Disable health monitor of CSI volumes from node plugin - volume usage
        # Allowed values:
        #   true: enable checking of health condition of CSI volumes
        #   false: disable checking of health condition of CSI volumes
        # Default value: false
        - name: X_CSI_HEALTH_MONITOR_ENABLED
          value: "false"
        - name: X_CSI_SDC_SFTP_REPO_ENABLED
          value: "false"
      # "node.nodeSelector" defines what nodes would be selected for pods of node daemonset
      # Leave as blank to use all nodes
      # Allowed values: map of key-value pairs
      # Default value: None
      # Examples:
      #  node-role.kubernetes.io/control-plane: ""
      nodeSelector:
      # Uncomment if nodes you wish to use have the node-role.kubernetes.io/master taint
      #  node-role.kubernetes.io/master: ""
      # Uncomment if nodes you wish to use have the node-role.kubernetes.io/control-plane taint
      #  node-role.kubernetes.io/control-plane: ""

      # "node.tolerations" defines tolerations that would be applied to node daemonset
      # Leave as blank to install node driver only on worker nodes
      # Default value: None
      tolerations:
      # Uncomment if nodes you wish to use have the node-role.kubernetes.io/master taint
      # - key: "node-role.kubernetes.io/master"
      #   operator: "Exists"
      #   effect: "NoSchedule"
      # Uncomment if nodes you wish to use have the node-role.kubernetes.io/control-plane taint
      # - key: "node-role.kubernetes.io/control-plane"
      #   operator: "Exists"
      #   effect: "NoSchedule"
    initContainers:
      - image: quay.io/dell/storage/powerflex/sdc:4.5.4
        imagePullPolicy: IfNotPresent
        name: sdc
        envs:
          - name: MDM
            value: "REPLACE_MDM"  # provide MDM value
          - name: REPO_ADDRESS
            value: "REPLACE_SFTP_REPO_ADDRESS"  # SFTP/private repository address. Format: "protocol://address"
          - name: REPO_USER
            value: "REPLACE_SFTP_REPO_USER"  # provide username to authenticate to the SFTP repo
          - name: MODULE_SIGCHECK
            value: "0"
  modules:
    # Authorization: enable csm-authorization for RBAC
    - name: authorization
      # enable: Enable/Disable csm-authorization
      enabled: true
      configVersion: v1.13.0
      components:
        - name: karavi-authorization-proxy
          image: quay.io/dell/container-storage-modules/csm-authorization-sidecar:v1.13.0
          envs:
            # proxyHost: hostname of the csm-authorization server
            - name: "PROXY_HOST"
              value: "authorization-ingress-nginx-controller.authorization.svc.cluster.local"
            # skipCertificateValidation: Enable/Disable certificate validation of the csm-authorization server
            - name: "SKIP_CERTIFICATE_VALIDATION"
              value: "true"
