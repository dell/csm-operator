# List of E2E Tests Scenarios
- scenario: "Install PowerScale Driver(Standalone)"
  path: "testfiles/storage_csm_powerscale.yaml"
  steps:
    - "Given an environment with k8s or openshift, and CSM operator installed"
    - "Apply custom resources"
    - "Validate custom resources"
    - "Validate [powerscale] driver is installed"
    - "Run custom test"
    # Last two steps perform Clean Up
    - "Enable forceRemoveDriver on CR"
    - "Delete resources"
  customTest:
    # name of custom test to run
    name: Cert CSI
    # Provide command-line argument to run. Ginkgo will run the command and return output
    # The command should be accessible from e2e_tes repo. 
    # Example:
    #   ./hello_world.sh
    #   cert-csi test vio --sc <storage class> --chainNumber 2 --chainLength 2
    run: ./cert-csi test vio --sc isilon --chainNumber 2 --chainLength 2


#- scenario: "Install PowerScale Driver(With Authorization)"
#  path: "testfiles/storage_csm_powerscale_auth.yaml"
#  steps:
#    - "Given an environment with k8s or openshift, and CSM operator installed"
#    - "Apply custom resources"
#    - "Validate custom resources"
#    - "Validate [powerscale] driver is installed"
#    - "Validate [authorization] module is installed"
#    - "Run custom test"
#    # Last two steps perform Clean Up
#    - "Enable forceRemoveDriver on CR"
#    - "Delete resources"
#  customTest:
#    name: Cert CSI
#    run: ./cert-csi test vio --sc isilon --chainNumber 2 --chainLength 2

#- scenario: "Install PowerScale Driver(Standalone), Enable Authorization"
#  path: "testfiles/storage_csm_powerscale.yaml"
#  steps:
#    - "Given an environment with k8s or openshift, and CSM operator installed"
#    - "Apply custom resources"
#    - "Validate custom resources"
#    - "Validate [powerscale] driver is installed"
#    - "Validate [authorization] module is not installed"
#    - "Enable [authorization] module"
#    - "Set Driver secret to [test-isilon-creds-auth]"
#    - "Validate [powerscale] driver is installed"
#    - "Validate [authorization] module is installed"
#    - "Run custom test"
#    # Last two steps perform Clean Up
#    - "Enable forceRemoveDriver on CR"
#    - "Delete resources"
#  customTest:
#    name: HelloWorld 
#    run: "echo Hello && echo World"



#- scenario: "Install PowerScale Driver(With Replication)"
#  path: "testfiles/storage_csm_powerscale_replica.yaml"
#  steps:
#    - "Given an environment with k8s or openshift, and CSM operator installed"
#    - "Apply custom resources"
#    - "Validate custom resources"
#    - "Validate [powerscale] driver is installed"
#    - "Validate [replication] module is installed"
#    - "Run custom test"
#    # Last two steps perform Clean Up
#    - "Enable forceRemoveDriver on CR"
#    - "Delete resources"
#  customTest:
#    name: HelloWorld 
#    run: "echo Hello && echo World"

#- scenario: "Install PowerScale Driver(Standalone), Enable Replication"
#  path: "testfiles/storage_csm_powerscale.yaml"
#  steps:
#    - "Given an environment with k8s or openshift, and CSM operator installed"
#    - "Apply custom resources"
#    - "Validate custom resources"
#    - "Validate [powerscale] driver is installed"
#    - "Validate [replication] module is not installed"
#    - "Enable [replication] module"
#    - "Validate [powerscale] driver is installed"
#    - "Validate [replication] module is installed"
#    - "Run custom test"
#    # Last two steps perform Clean Up
#    - "Enable forceRemoveDriver on CR"
#    - "Delete resources"
#  customTest:
#    name: HelloWorld 
#    run: "echo Hello && echo World"


- scenario: "Uninstall PowerScale Driver"
  path: "testfiles/storage_csm_powerscale.yaml"
  steps:
    - "Given an environment with k8s or openshift, and CSM operator installed"
    - "Apply custom resources"
    - "Validate custom resources"
    - "Validate [powerscale] driver is installed"
    - "Enable forceRemoveDriver on CR"
    - "Delete resources"
    - "Validate [powerscale] driver is not installed"

#- scenario: Install PowerScale Driver(With Authorization), Disable Authorization module"
#  path: "testfiles/storage_csm_powerscale_auth.yaml"
#  steps:
#    - "Given an environment with k8s or openshift, and CSM operator installed"
#    - "Apply custom resources"
#    - "Validate custom resources"
#    - "Validate [powerscale] driver is installed"
#    - "Validate [authorization] module is installed"
#    - "Disable [authorization] module"
#    - "Validate [powerscale] driver is installed"
#    - "Validate [authorization] module is not installed"
#    # Last two steps perform Clean Up
#    - "Enable forceRemoveDriver on CR"
#    - "Delete resources"

#- scenario: Install PowerScale Driver(With Replication), Disable Replication module"
#  path: "testfiles/storage_csm_powerscale_replica.yaml"
#  steps:
#    - "Given an environment with k8s or openshift, and CSM operator installed"
#    - "Apply custom resources"
#    - "Validate custom resources"
#    - "Validate [powerscale] driver is installed"
#    - "Validate [replication] module is installed"
#    - "Disable [replication] module"
#    - "Validate [replication] driver is installed"
#    - "Validate [replication] module is not installed"
#    # Last two steps perform Clean Up
#    - "Enable forceRemoveDriver on CR"
#    - "Delete resources"


