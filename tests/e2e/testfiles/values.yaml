# List of E2E Tests Scenarios
- scenario: "Install PowerScale Driver(Standalone)"
  path: "testfiles/storage_csm_powerscale.yaml"
  modules:
  steps:
    - "Given an environment with k8s or openshift, and CSM operator installed"
    - "Apply custom resources"
    - "Validate custom resources"
    - "Validate [powerscale] driver is installed"
    - "Run custom test"
    # Last two steps perform Clean Up
    - "Enable forceRemoveDriver on CR"
    - "Delete resources"
  customTest:
    # name of custom test to run
    name: Cert CSI
    # Provide command-line argument to run. Ginkgo will run the command and return output
    # The command should be accessible from e2e_test repo. The cert-csi path is supplied in the values file.
    # Example:
    #   ./hello_world.sh
    #   cert-csi test vio --sc <storage class> --chainNumber 2 --chainLength 2
    run: ./cert-csi test vio --sc isilon --chainNumber 2 --chainLength 2

- scenario: "Install PowerScale Driver(With Authorization)"
  path: "testfiles/storage_csm_powerscale_auth.yaml"
  modules:
    - "authorization"
  steps:
    - "Given an environment with k8s or openshift, and CSM operator installed"
    - "Apply custom resources"
    - "Validate custom resources"
    - "Validate [powerscale] driver is installed"
    - "Validate [authorization] module is installed"
    - "Run custom test"
    # Last two steps perform Clean Up
    - "Enable forceRemoveDriver on CR"
    - "Delete resources"
  customTest:
    name: Cert CSI
    run: ./cert-csi test vio --sc isilon --chainNumber 2 --chainLength 2

- scenario: "Install PowerScale Driver(Standalone), Enable Authorization"
  path: "testfiles/storage_csm_powerscale.yaml"
  modules:
    - "authorization"
  steps:
    - "Given an environment with k8s or openshift, and CSM operator installed"
    - "Apply custom resources"
    - "Validate custom resources"
    - "Validate [powerscale] driver is installed"
    - "Validate [authorization] module is not installed"
    - "Enable [authorization] module"
    - "Set Driver secret to [test-isilon-creds-auth]"
    - "Validate [powerscale] driver is installed"
    - "Validate [authorization] module is installed"
    - "Run custom test"
    # Last two steps perform Clean Up
    - "Enable forceRemoveDriver on CR"
    - "Delete resources"
  customTest:
    name: HelloWorld 
    run: "echo Hello && echo World"



- scenario: "Install PowerScale Driver(With Replication)"
  path: "testfiles/storage_csm_powerscale_replica.yaml"
  modules:
    - "replication"
  steps:
    - "Given an environment with k8s or openshift, and CSM operator installed"
    - "Apply custom resources"
    - "Validate custom resources"
    - "Validate [powerscale] driver is installed"
    - "Validate [replication] module is installed"
    - "Run custom test"
    # Last two steps perform Clean Up
    - "Enable forceRemoveDriver on CR"
    - "Delete resources"
  customTest:
    name: HelloWorld 
    run: "echo Hello && echo World"

- scenario: "Install PowerScale Driver(Standalone), Enable Replication"
  path: "testfiles/storage_csm_powerscale.yaml"
  modules:
    - "replication"
  steps:
    - "Given an environment with k8s or openshift, and CSM operator installed"
    - "Apply custom resources"
    - "Validate custom resources"
    - "Validate [powerscale] driver is installed"
    - "Validate [replication] module is not installed"
    - "Enable [replication] module"
    - "Validate [powerscale] driver is installed"
    - "Validate [replication] module is installed"
    - "Run custom test"
    # Last two steps perform Clean Up
    - "Enable forceRemoveDriver on CR"
    - "Delete resources"
  customTest:
    name: HelloWorld 
    run: "echo Hello && echo World"


- scenario: "Uninstall PowerScale Driver"
  path: "testfiles/storage_csm_powerscale.yaml"
  modules:
  steps:
    - "Given an environment with k8s or openshift, and CSM operator installed"
    - "Apply custom resources"
    - "Validate custom resources"
    - "Validate [powerscale] driver is installed"
    - "Enable forceRemoveDriver on CR"
    - "Delete resources"
    - "Validate [powerscale] driver is not installed"

- scenario: Install PowerScale Driver(With Authorization), Disable Authorization module"
  path: "testfiles/storage_csm_powerscale_auth.yaml"
  modules:
    - "authorization"
  steps:
    - "Given an environment with k8s or openshift, and CSM operator installed"
    - "Apply custom resources"
    - "Validate custom resources"
    - "Validate [powerscale] driver is installed"
    - "Validate [authorization] module is installed"
    - "Disable [authorization] module"
    - "Validate [powerscale] driver is installed"
    - "Validate [authorization] module is not installed"
    # Last two steps perform Clean Up
    - "Enable forceRemoveDriver on CR"
    - "Delete resources"

- scenario: Install PowerScale Driver(With Replication), Disable Replication module"
  path: "testfiles/storage_csm_powerscale_replica.yaml"
  modules:
    - "replication"
  steps:
    - "Given an environment with k8s or openshift, and CSM operator installed"
    - "Apply custom resources"
    - "Validate custom resources"
    - "Validate [powerscale] driver is installed"
    - "Validate [replication] module is installed"
    - "Disable [replication] module"
    - "Validate [replication] driver is installed"
    - "Validate [replication] module is not installed"
    # Last two steps perform Clean Up
    - "Enable forceRemoveDriver on CR"
    - "Delete resources"


- scenario: "Install PowerScale Driver(With Observability)"
  path: "testfiles/storage_csm_powerscale_observability.yaml"
  modules:
    - "observability"
  steps:
    - "Given an environment with k8s or openshift, and CSM operator installed"
    - "Apply custom resources"
    - "Validate custom resources"
    - "Validate [powerscale] driver is installed"
    - "Validate [observability] module is installed"
    # Last two steps perform Clean Up
    - "Enable forceRemoveDriver on CR"
    - "Delete resources"

- scenario: "Install PowerScale Driver(Standalone), Enable Observability"
  path: "testfiles/storage_csm_powerscale.yaml"
  modules:
    - "observability"
  steps:
    - "Given an environment with k8s or openshift, and CSM operator installed"
    - "Apply custom resources"
    - "Validate custom resources"
    - "Validate [powerscale] driver is installed"
    - "Validate [observability] module is not installed"
    - "Enable [observability] module"
    - "Validate [powerscale] driver is installed"
    - "Validate [observability] module is installed"
    # Last two steps perform Clean Up
    - "Enable forceRemoveDriver on CR"
    - "Delete resources"

- scenario: Install PowerScale Driver(With Observability), Disable Observability module"
  path: "testfiles/storage_csm_powerscale_observability.yaml"
  modules:
    - "observability"
  steps:
    - "Given an environment with k8s or openshift, and CSM operator installed"
    - "Apply custom resources"
    - "Validate custom resources"
    - "Validate [powerscale] driver is installed"
    - "Validate [observability] module is installed"
    - "Disable [observability] module"
    - "Validate [powerscale] driver is installed"
    - "Validate [observability] module is not installed"
    # Last two steps perform Clean Up
    - "Enable forceRemoveDriver on CR"
    - "Delete resources"

- scenario: "Install PowerScale Driver(With Authorization and Observability)"
  path: "testfiles/storage_csm_powerscale_observability_auth.yaml"
  modules:
    - "observability"
    - "authorization"
  steps:
    - "Given an environment with k8s or openshift, and CSM operator installed"
    - "Apply custom resources"
    - "Validate custom resources"
    - "Validate [powerscale] driver is installed"
    - "Validate [authorization] module is installed"
    - "Validate [observability] module is installed"
    - "Run custom test"
    # Last two steps perform Clean Up
    - "Enable forceRemoveDriver on CR"
    - "Delete resources"
  customTest:
    name: Cert CSI
    run: ./cert-csi test vio --sc isilon --chainNumber 2 --chainLength 2

- scenario: "Install PowerScale Driver(Standalone), Enable Authorization, Enable Observability"
  path: "testfiles/storage_csm_powerscale.yaml"
  modules:
    - "observability"
    - "authorization"
  steps:
    - "Given an environment with k8s or openshift, and CSM operator installed"
    - "Apply custom resources"
    - "Validate custom resources"
    - "Validate [powerscale] driver is installed"
    - "Validate [authorization] module is not installed"
    - "Validate [observability] module is not installed"
    - "Enable [authorization] module"
    - "Set Driver secret to [test-isilon-creds-auth]"
    - "Validate [powerscale] driver is installed"
    - "Validate [authorization] module is installed"
    - "Validate [observability] module is not installed"
    - "Enable [observability] module"
    - "Validate [powerscale] driver is installed"
    - "Validate [authorization] module is installed"
    - "Validate [observability] module is installed"
    # Last two steps perform Clean Up
    - "Enable forceRemoveDriver on CR"
    - "Delete resources"

- scenario: Install PowerScale Driver(With Authorization and Observability), Disable Observability module, Disable Authorization module"
  path: "testfiles/storage_csm_powerscale_observability_auth.yaml"
  modules:
    - "observability"
    - "authorization"
  steps:
    - "Given an environment with k8s or openshift, and CSM operator installed"
    - "Apply custom resources"
    - "Validate custom resources"
    - "Validate [powerscale] driver is installed"
    - "Validate [authorization] module is installed"
    - "Validate [observability] module is installed"
    - "Disable [observability] module"
    - "Validate [powerscale] driver is installed"
    - "Validate [authorization] module is installed"
    - "Validate [observability] module is not installed"
    - "Disable [authorization] module"
    - "Set Driver secret to [test-isilon-creds]"
    - "Validate [powerscale] driver is installed"
    - "Validate [authorization] module is not installed"
    - "Validate [observability] module is not installed"
    # Last two steps perform Clean Up
    - "Enable forceRemoveDriver on CR"
    - "Delete resources"

- scenario: Install PowerScale Driver(With Authorization and Observability), Disable Authorization module, Disable Observability module"
  path: "testfiles/storage_csm_powerscale_observability_auth.yaml"
  modules:
    - "observability"
    - "authorization"
  steps:
    - "Given an environment with k8s or openshift, and CSM operator installed"
    - "Apply custom resources"
    - "Validate custom resources"
    - "Validate [powerscale] driver is installed"
    - "Validate [authorization] module is installed"
    - "Validate [observability] module is installed"
    - "Disable [authorization] module"
    - "Set Driver secret to [test-isilon-creds]"
    - "Validate [powerscale] driver is installed"
    - "Validate [authorization] module is not installed"
    - "Validate [observability] module is installed"
    - "Disable [observability] module"
    - "Validate [powerscale] driver is installed"
    - "Validate [authorization] module is not installed"
    - "Validate [observability] module is not installed"
    # Last two steps perform Clean Up
    - "Enable forceRemoveDriver on CR"
    - "Delete resources"


- scenario: "Install PowerFlex Driver(Standalone)"
  path: "testfiles/storage_csm_powerflex.yaml"
  modules:
  steps:
    - "Given an environment with k8s or openshift, and CSM operator installed"
    - "Apply custom resources"
    - "Validate custom resources"
    - "Validate [powerflex] driver is installed"
    - "Run custom test"
    # Last two steps perform Clean Up
    - "Enable forceRemoveDriver on CR"
    - "Delete resources"
  customTest:
    # name of custom test to run
    name: Cert CSI
    # Provide command-line argument to run. Ginkgo will run the command and return output
    # The command should be accessible from e2e_test repo. The cert-csi path is supplied in the values file.
    # Example:
    #   ./hello_world.sh
    #   cert-csi test vio --sc <storage class> --chainNumber 2 --chainLength 2
    run: ./cert-csi test vio --sc vxflexos --chainNumber 2 --chainLength 2

- scenario: "Uninstall PowerFlex Driver"
  path: "testfiles/storage_csm_powerflex.yaml"
  modules:
  steps:
    - "Given an environment with k8s or openshift, and CSM operator installed"
    - "Apply custom resources"
    - "Validate custom resources"
    - "Validate [powerflex] driver is installed"
    - "Enable forceRemoveDriver on CR"
    - "Delete resources"
    - "Validate [powerflex] driver is not installed"

- scenario: "Install PowerFlex Driver (With Authorization)"
  path: "testfiles/storage_csm_powerflex_auth.yaml"
  modules:
  steps:
    - "Given an environment with k8s or openshift, and CSM operator installed"
    - "Apply custom resources"
    - "Validate custom resources"
    - "Validate [powerflex] driver is installed"
    - "Run custom test"
    # Last two steps perform Clean Up
    - "Enable forceRemoveDriver on CR"
    - "Delete resources"
  customTest:
    # name of custom test to run
    name: Cert CSI
    # Provide command-line argument to run. Ginkgo will run the command and return output
    # The command should be accessible from e2e_test repo. The cert-csi path is supplied in the values file.
    # Example:
    #   ./hello_world.sh
    #   cert-csi test vio --sc <storage class> --chainNumber 2 --chainLength 2
    run: ./cert-csi test vio --sc vxflexos --chainNumber 2 --chainLength 2





