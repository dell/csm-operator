- scenario: "Install PowerScale Driver(Standalone)"
  paths:
    - "testfiles/storage_csm_powerscale.yaml"
  modules:
  steps:
    - "Given an environment with k8s or openshift, and CSM operator installed"
    - "Apply custom resource [1]"
    - "Validate custom resource [1]"
    - "Validate [powerscale] driver from CR [1] is installed"
    - "Run custom test"
    # Last two steps perform Clean Up
    - "Enable forceRemoveDriver on CR [1]"
    - "Delete custom resource [1]"
  customTest:
    # name of custom test to run
    name: Cert CSI
    # Provide command-line argument to run. Ginkgo will run the command and return output
    # The command should be accessible from e2e_test repo. The cert-csi path is supplied in the values file.
    # Example:
    #   ./hello_world.sh
    #   cert-csi test vio --sc <storage class> --chainNumber 2 --chainLength 2
    run: ./cert-csi test vio --sc isilon --chainNumber 2 --chainLength 2

- scenario: "Uninstall PowerScale Driver"
  paths:
    - "testfiles/storage_csm_powerscale.yaml"
  modules:
  steps:
    - "Given an environment with k8s or openshift, and CSM operator installed"
    - "Apply custom resource [1]"
    - "Validate custom resource [1]"
    - "Validate [powerscale] driver from CR [1] is installed"
    - "Enable forceRemoveDriver on CR [1]"
    - "Delete custom resource [1]"
    - "Validate [powerscale] driver from CR [1] is not installed"

- scenario: "Install PowerFlex Driver(Standalone)"
  paths:
    - "testfiles/storage_csm_powerflex.yaml"
  modules:
  steps:
    - "Given an environment with k8s or openshift, and CSM operator installed"
    - "Apply custom resource [1]"
    - "Validate custom resource [1]"
    - "Validate [powerflex] driver from CR [1] is installed"
    - "Run custom test"
    # Last two steps perform Clean Up
    - "Enable forceRemoveDriver on CR [1]"
    - "Delete custom resource [1]"
  customTest:
    # name of custom test to run
    name: Cert CSI
    # Provide command-line argument to run. Ginkgo will run the command and return output
    # The command should be accessible from e2e_test repo. The cert-csi path is supplied in the values file.
    # Example:
    #   ./hello_world.sh
    #   cert-csi test vio --sc <storage class> --chainNumber 2 --chainLength 2
    run: ./cert-csi test vio --sc vxflexos --chainNumber 2 --chainLength 2

- scenario: "Uninstall PowerFlex Driver"
  paths:
    - "testfiles/storage_csm_powerflex.yaml"
  modules:
  steps:
    - "Given an environment with k8s or openshift, and CSM operator installed"
    - "Apply custom resource [1]"
    - "Validate custom resource [1]"
    - "Validate [powerflex] driver from CR [1] is installed"
    - "Enable forceRemoveDriver on CR [1]"
    - "Delete custom resource [1]"
    - "Validate [powerflex] driver from CR [1] is not installed"
- scenario: "Install PowerFlex Driver (With Authorization)"
  paths:
    - "testfiles/storage_csm_powerflex_auth.yaml"
  modules:
    - "authorization"
  steps:
    - "Given an environment with k8s or openshift, and CSM operator installed"
    - "Apply custom resource [1]"
    - "Set secret for driver from CR [1] to [test-vxflexos-config-auth]"
    - "Validate custom resource [1]"
    - "Validate [powerflex] driver from CR [1] is installed"
    - "Run custom test"
    # Last two steps perform Clean Up
    - "Enable forceRemoveDriver on CR [1]"
    - "Delete custom resource [1]"
  customTest:
    name: Cert CSI
    run: ./cert-csi test vio --sc vxflexos --chainNumber 2 --chainLength 2

- scenario: "Install PowerFlex Driver(Standalone), Enable Authorization"
  paths:
    - "testfiles/storage_csm_powerflex.yaml"
  modules:
    - "authorization"
  steps:
    - "Given an environment with k8s or openshift, and CSM operator installed"
    - "Apply custom resource [1]"
    - "Validate custom resource [1]"
    - "Validate [powersflex] driver from CR [1] is installed"
    - "Validate [authorization] module from CR [1] is not installed"
    - "Enable [authorization] module from CR [1]"
    - "Set secret for driver from CR [1] to [test-vxflexos-config-auth]"
    - "Validate [powerflex] driver from CR [1] is installed"
    - "Validate [authorization] module from CR [1] is installed"
    - "Run custom test"
    # Last two steps perform Clean Up
    - "Enable forceRemoveDriver on CR [1]"
    - "Delete custom resource [1]"
  customTest:
    name: Cert CSI
    run: ./cert-csi test vio --sc vxflexos --chainNumber 2 --chainLength 2

- scenario: Install PowerFlex Driver(With Authorization), Disable Authorization module"
  paths:
    - "testfiles/storage_csm_powerflex_auth.yaml"
  modules:
    - "authorization"
  steps:
    - "Given an environment with k8s or openshift, and CSM operator installed"
    - "Apply custom resource [1]"
    - "Set secret for driver from CR [1] to [test-vxflexos-config-auth]"
    - "Validate custom resource [1]"
    - "Validate [powerflex] driver from CR [1] is installed"
    - "Validate [authorization] module from CR [1] is installed"
    - "Run custom test"
    - "Disable [authorization] module from CR [1]"
    - "Set secret for driver from CR [1] to [test-vxflexos-config]"
    - "Validate [powerflex] driver from CR [1] is installed"
    - "Validate [authorization] module from CR [1] is not installed"
    - "Run custom test"
    # Last two steps perform Clean Up
    - "Enable forceRemoveDriver on CR [1]"
    - "Delete custom resource [1]"
  customTest:
    name: Cert CSI
    run: ./cert-csi test vio --sc vxflexos --chainNumber 2 --chainLength 2

- scenario: "Install PowerScale Driver and PowerFlex Driver, uninstall PowerFlex Driver"
  paths:
    - "testfiles/storage_csm_powerscale.yaml"
    - "testfiles/storage_csm_powerflex.yaml"
  modules:
  steps:
    - "Given an environment with k8s or openshift, and CSM operator installed"
    - "Apply custom resource [1]"
    - "Apply custom resource [2]"
    - "Validate custom resource [1]"
    - "Validate custom resource [2]"
    - "Validate [powerscale] driver from CR [1] is installed"
    - "Validate [powerflex] driver from CR [2] is installed"
    - "Enable forceRemoveDriver on CR [2]"
    - "Delete custom resource [2]"
    - "Validate [powerscale] driver from CR [1] is installed"
    - "Validate [powerflex] driver from CR [2] is not installed"
    # Last two steps perform Clean Up
    - "Enable forceRemoveDriver on CR [1]"
    - "Delete custom resource [1]"



