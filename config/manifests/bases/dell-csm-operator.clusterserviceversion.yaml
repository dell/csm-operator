apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: "[]"
    capabilities: Seamless Upgrades
    categories: Storage
    containerImage: quay.io/dell/container-storage-modules/dell-csm-operator:v1.10.0
    createdAt: "2022-03-29T11:59:59Z"
    description: Easily install and manage Dellâ€™s CSI Drivers and CSM
    features.operators.openshift.io/disconnected: "true"
    features.operators.openshift.io/fips-compliant: "false"
    features.operators.openshift.io/proxy-aware: "false"
    features.operators.openshift.io/tls-profiles: "false"
    features.operators.openshift.io/token-auth-aws: "false"
    features.operators.openshift.io/token-auth-azure: "false"
    features.operators.openshift.io/token-auth-gcp: "false"
    repository: https://github.com/dell/csm-operator
    support: Dell Technologies
  name: dell-csm-operator.v1.10.0
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
      - description:
          ContainerStorageModule is the Schema for the containerstoragemodules
          API
        displayName: Container Storage Module
        kind: ContainerStorageModule
        name: containerstoragemodules.storage.dell.com
        specDescriptors:
          - description: AuthSecret is the name of the credentials secret for the driver
            displayName: Auth Secret
            path: driver.authSecret
          - description:
              Common is the common specification for both controller and node
              plugins
            displayName: Common specification
            path: driver.common
          - description: Args is the set of arguments for the container
            displayName: Container Arguments
            path: driver.common.args
          - description: AuthorizationController is the image tag for the container
            displayName: Authorization Controller Container Image
            path: driver.common.authorizationController
          - description:
              AuthorizationControllerReplicas is the number of replicas for
              the authorization controller deployment
            displayName: Authorization Controller Replicas
            path: driver.common.authorizationControllerReplicas
          - description:
              Certificate is a certificate used for a certificate/private-key
              pair
            displayName: Certificate for certificate/private-key pair
            path: driver.common.certificate
          - description:
              CertificateAuthority is a certificate authority used to validate
              a certificate
            displayName: Certificate authority for validating a certificate
            path: driver.common.certificateAuthority
          - description: Commander is the image tag for the Container
            displayName: Authorization Commander Container Image
            path: driver.common.commander
          - description:
              ConfigSecretProviderClass is the SecretProviderClass Object details
              for config secret Applicable from CSM v1.15 onwards
            displayName: Config SecretProviderClass details
            path: driver.common.configSecretProviderClass
          - description:
              ConfigSecretName is the name of the Kubernetes secret created
              by the CSI driver
            displayName: Config Secret Name
            path: driver.common.configSecretProviderClass[0].configSecretName
          - description:
              Conjur is the secret configuration with path to retrieve the
              Config secret from Conjur
            displayName: Conjur Config Secret Configuration
            path: driver.common.configSecretProviderClass[0].conjur
          - description: SecretPath is the path to the config secret
            displayName: Conjur Secret Path
            path: driver.common.configSecretProviderClass[0].conjur.secretPath
          - description:
              SecretProviderClassName is the name of the SecretProviderClass
              that holds the config secretObject
            displayName: Config Secret Provider Class Name
            path: driver.common.configSecretProviderClass[0].secretProviderClassName
          - description: The interval which the reconcile of each controller is run
            displayName: Controller Reconcile Interval
            path: driver.common.controllerReconcileInterval
          - description: Enabled is used to indicate wether or not to deploy a module
            displayName: Enabled
            path: driver.common.enabled
          - description: Envs is the set of environment variables for the container
            displayName: Container Environment vars
            path: driver.common.envs
          - description: Hostname is the authorization proxy server hostname
            displayName: Authorization Proxy Server Hostname
            path: driver.common.hostname
          - description: Image is the image tag for the Container
            displayName: Container Image
            path: driver.common.image
          - description: ImagePullPolicy is the image pull policy for the image
            displayName: Container Image Pull Policy
            path: driver.common.imagePullPolicy
            x-descriptors:
              - urn:alm:descriptor:com.tectonic.ui:imagePullPolicy
          - description: LeaderElection is boolean flag to enable leader election
            displayName: Leader Election
            path: driver.common.leaderElection
          - description: Name is the name of Container
            displayName: Container Name
            path: driver.common.name
          - description:
              NodeSelector is a selector which must be true for the pod to
              fit on a node. Selector which must match a node's labels for the pod to
              be scheduled on that node.
            displayName: NodeSelector
            path: driver.common.nodeSelector
          - description: Opa is the image tag for the Container
            displayName: Authorization Opa Container Image
            path: driver.common.opa
          - description: OpaKubeMgmt is the image tag for the Container
            displayName: Authorization Opa Kube Management Container Image
            path: driver.common.opaKubeMgmt
          - description:
              OpenTelemetryCollectorAddress is the address of the OTLP receiving
              endpoint using gRPC
            displayName: OpenTelemetry Collector Address of the OTLP endpoint using gRPC
            path: driver.common.openTelemetryCollectorAddress
          - description:
              PrivateKey is a private key used for a certificate/private-key
              pair
            displayName: Private key for certificate/private-key pair
            path: driver.common.privateKey
          - description:
              ProxyServerIngress is the authorization proxy server ingress
              configuration
            displayName: Authorization Proxy Server ingress configuration
            path: driver.common.proxyServerIngress
          - description:
              Annotations is an unstructured key value map that stores additional
              annotations for the ingress
            displayName: Authorization Proxy Server Annotations
            path: driver.common.proxyServerIngress[0].annotations
          - description: Hosts is the hosts rules for the ingress
            displayName: Authorization Proxy Server Hosts
            path: driver.common.proxyServerIngress[0].hosts
          - description: IngressClassName is the ingressClassName
            displayName: Authorization Proxy Server Ingress Class Name
            path: driver.common.proxyServerIngress[0].ingressClassName
          - description: ProxyService is the image tag for the Container
            displayName: Authorization Proxy Service Container Image
            path: driver.common.proxyService
          - description:
              ProxyServiceReplicas is the number of replicas for the proxy
              service deployment
            displayName: Proxy Service Replicas
            path: driver.common.proxyServiceReplicas
          - description: Redis is the image tag for the Container
            displayName: Authorization Redis Container Image
            path: driver.common.redis
          - description: RedisCommander is the name of the redis deployment
            displayName: Redis Deployment Name
            path: driver.common.redisCommander
          - description: RedisName is the name of the redis statefulset
            displayName: Redis StatefulSet Name
            path: driver.common.redisName
          - description: RedisReplicas is the number of replicas for the redis deployment
            displayName: Redis Deployment Replicas
            path: driver.common.redisReplicas
          - description:
              RedisSecretProviderClass is the SecretProviderClass Object details
              for redis Applicable from CSM v1.15 onwards
            displayName: Redis SecretProviderClass details
            path: driver.common.redisSecretProviderClass
          - description:
              Conjur is the secret configuration with path to retrieve the
              Redis credentials from Conjur
            displayName: Conjur Secret Configuration
            path: driver.common.redisSecretProviderClass[0].conjur
          - description: PasswordPath is the path to the password in the secret
            displayName: Conjur Password Path
            path: driver.common.redisSecretProviderClass[0].conjur.passwordPath
          - description: UsernamePath is the path to the username in the secret
            displayName: Conjur Username Path
            path: driver.common.redisSecretProviderClass[0].conjur.usernamePath
          - description:
              RedisPasswordKey is the key in the secret that holds the Redis
              password
            displayName: Redis Password Key
            path: driver.common.redisSecretProviderClass[0].redisPasswordKey
          - description:
              RedisSecretName is the name of the Kubernetes secret created
              by the CSI driver
            displayName: Redis Secret Name
            path: driver.common.redisSecretProviderClass[0].redisSecretName
          - description:
              RedisUsernameKey is the key in the secret that holds the Redis
              username
            displayName: Redis Username Key
            path: driver.common.redisSecretProviderClass[0].redisUsernameKey
          - description:
              SecretProviderClassName is the name of the SecretProviderClass
              that holds the Redis secretObject
            displayName: Redis Secret Provider Class Name
            path: driver.common.redisSecretProviderClass[0].secretProviderClassName
          - description: RoleService is the image tag for the Container
            displayName: Authorization Role Service Container Image
            path: driver.common.roleService
          - description:
              RoleServiceReplicas is the number of replicas for the role service
              deployment
            displayName: Role Service Replicas
            path: driver.common.roleServiceReplicas
          - description:
              SecretProviderClasses is a collection of secret provider classes
              for retrieving secrets from external providers for storage system credentials
              Applicable from CSM v1.15 onwards Only one of SecretProviderClasses or Secrets
              must be specified (mutually exclusive)
            displayName: Secret Provider Classes
            path: driver.common.secretProviderClasses
          - description: Conjur is the list SecretProviderClass names provided by Conjur
            displayName: Conjur SecretProviderClasses
            path: driver.common.secretProviderClasses.conjur
          - description: Name is the name of the Conjur SecretProviderClass
            displayName: Conjur SecretProviderClass Name
            path: driver.common.secretProviderClasses.conjur[0].name
          - description: Paths is the list of paths to the secrets in Conjur
            displayName: Conjur Credential Paths
            path: driver.common.secretProviderClasses.conjur[0].paths
          - description: PasswordPath is the path to the password in the secret
            displayName: Conjur Password Path
            path: driver.common.secretProviderClasses.conjur[0].paths[0].passwordPath
          - description: UsernamePath is the path to the username in the secret
            displayName: Conjur Username Path
            path: driver.common.secretProviderClasses.conjur[0].paths[0].usernamePath
          - description: Vault is the list SecretProviderClass names provided by Vault
            displayName: Vault SecretProviderClass Names
            path: driver.common.secretProviderClasses.vault
          - description:
              Secrets is a collection of kubernetes secrets for storage system
              credentials Applicable from CSM v1.15 onwards Only one of SecretProviderClasses
              or Secrets must be specified (mutually exclusive)
            displayName: Secrets
            path: driver.common.secrets
          - description: Sentinel is the name of the sentinel statefulSet
            displayName: Sentinel StatefulSet Name
            path: driver.common.sentinel
          - description: skipCertificateValidation is the flag to skip certificate validation
            displayName: Authorization Skip Certificate Validation
            path: driver.common.skipCertificateValidation
          - description: StorageService is the image tag for the Container
            displayName: Authorization Storage Service Container Image
            path: driver.common.storageService
          - description:
              StorageServiceReplicas is the number of replicas for storage
              service deployment
            displayName: Storage Service Replicas
            path: driver.common.storageServiceReplicas
          - description:
              RedisStorageClass is the authorization proxy server redis storage
              class for persistence
            displayName: Authorization Proxy Server Redis storage class
            path: driver.common.storageclass
          - description: TenantService is the image tag for the Container
            displayName: Authorization Tenant Service Container Image
            path: driver.common.tenantService
          - description:
              TenantServiceReplicas is the number of replicas for the tenant
              service deployment
            displayName: Tenant Service Replicas
            path: driver.common.tenantServiceReplicas
          - description: Tolerations is the list of tolerations for the driver pods
            displayName: Tolerations
            path: driver.common.tolerations
          - description: Vaults are the vault configurations Applicable till CSM v1.14
            displayName: Vault Configurations
            path: driver.common.vaultConfigurations
          - description: Address is the address for this vault
            displayName: Vault Address
            path: driver.common.vaultConfigurations[0].address
          - description:
              CertificateAuthority is the base64-encoded certificate authority
              for validaitng the vault certificate
            displayName: Vault Certificate Authority
            path: driver.common.vaultConfigurations[0].certificateAuthority
          - description:
              ClientCertificate is the base64-encoded certificate for connecting
              to vault
            displayName: Vault CLient Certificate
            path: driver.common.vaultConfigurations[0].clientCertificate
          - description:
              ClientKey validates is the base64-encoded certificate key for
              connecting to vault
            displayName: Vault CLient Certificate Key
            path: driver.common.vaultConfigurations[0].clientKey
          - description: Identifier is the identifier for this vault
            displayName: Vault Identifier
            path: driver.common.vaultConfigurations[0].identifier
          - description: Role is the role for this vault
            displayName: Vault Role
            path: driver.common.vaultConfigurations[0].role
          - description:
              SkipCertificateValidation validates the vault server certificate
              or not
            displayName: Vault Skip Certificate Validation
            path: driver.common.vaultConfigurations[0].skipCertificateValidation
          - description: ConfigVersion is the configuration version of the driver
            displayName: Config Version
            path: driver.configVersion
          - description: Controller is the specification for Controller plugin only
            displayName: Controller Specification
            path: driver.controller
          - description: Args is the set of arguments for the container
            displayName: Container Arguments
            path: driver.controller.args
          - description: AuthorizationController is the image tag for the container
            displayName: Authorization Controller Container Image
            path: driver.controller.authorizationController
          - description:
              AuthorizationControllerReplicas is the number of replicas for
              the authorization controller deployment
            displayName: Authorization Controller Replicas
            path: driver.controller.authorizationControllerReplicas
          - description:
              Certificate is a certificate used for a certificate/private-key
              pair
            displayName: Certificate for certificate/private-key pair
            path: driver.controller.certificate
          - description:
              CertificateAuthority is a certificate authority used to validate
              a certificate
            displayName: Certificate authority for validating a certificate
            path: driver.controller.certificateAuthority
          - description: Commander is the image tag for the Container
            displayName: Authorization Commander Container Image
            path: driver.controller.commander
          - description:
              ConfigSecretProviderClass is the SecretProviderClass Object details
              for config secret Applicable from CSM v1.15 onwards
            displayName: Config SecretProviderClass details
            path: driver.controller.configSecretProviderClass
          - description:
              ConfigSecretName is the name of the Kubernetes secret created
              by the CSI driver
            displayName: Config Secret Name
            path: driver.controller.configSecretProviderClass[0].configSecretName
          - description:
              Conjur is the secret configuration with path to retrieve the
              Config secret from Conjur
            displayName: Conjur Config Secret Configuration
            path: driver.controller.configSecretProviderClass[0].conjur
          - description: SecretPath is the path to the config secret
            displayName: Conjur Secret Path
            path: driver.controller.configSecretProviderClass[0].conjur.secretPath
          - description:
              SecretProviderClassName is the name of the SecretProviderClass
              that holds the config secretObject
            displayName: Config Secret Provider Class Name
            path: driver.controller.configSecretProviderClass[0].secretProviderClassName
          - description: The interval which the reconcile of each controller is run
            displayName: Controller Reconcile Interval
            path: driver.controller.controllerReconcileInterval
          - description: Enabled is used to indicate wether or not to deploy a module
            displayName: Enabled
            path: driver.controller.enabled
          - description: Envs is the set of environment variables for the container
            displayName: Container Environment vars
            path: driver.controller.envs
          - description: Hostname is the authorization proxy server hostname
            displayName: Authorization Proxy Server Hostname
            path: driver.controller.hostname
          - description: Image is the image tag for the Container
            displayName: Container Image
            path: driver.controller.image
          - description: ImagePullPolicy is the image pull policy for the image
            displayName: Container Image Pull Policy
            path: driver.controller.imagePullPolicy
            x-descriptors:
              - urn:alm:descriptor:com.tectonic.ui:imagePullPolicy
          - description: LeaderElection is boolean flag to enable leader election
            displayName: Leader Election
            path: driver.controller.leaderElection
          - description: Name is the name of Container
            displayName: Container Name
            path: driver.controller.name
          - description:
              NodeSelector is a selector which must be true for the pod to
              fit on a node. Selector which must match a node's labels for the pod to
              be scheduled on that node.
            displayName: NodeSelector
            path: driver.controller.nodeSelector
          - description: Opa is the image tag for the Container
            displayName: Authorization Opa Container Image
            path: driver.controller.opa
          - description: OpaKubeMgmt is the image tag for the Container
            displayName: Authorization Opa Kube Management Container Image
            path: driver.controller.opaKubeMgmt
          - description:
              OpenTelemetryCollectorAddress is the address of the OTLP receiving
              endpoint using gRPC
            displayName: OpenTelemetry Collector Address of the OTLP endpoint using gRPC
            path: driver.controller.openTelemetryCollectorAddress
          - description:
              PrivateKey is a private key used for a certificate/private-key
              pair
            displayName: Private key for certificate/private-key pair
            path: driver.controller.privateKey
          - description:
              ProxyServerIngress is the authorization proxy server ingress
              configuration
            displayName: Authorization Proxy Server ingress configuration
            path: driver.controller.proxyServerIngress
          - description:
              Annotations is an unstructured key value map that stores additional
              annotations for the ingress
            displayName: Authorization Proxy Server Annotations
            path: driver.controller.proxyServerIngress[0].annotations
          - description: Hosts is the hosts rules for the ingress
            displayName: Authorization Proxy Server Hosts
            path: driver.controller.proxyServerIngress[0].hosts
          - description: IngressClassName is the ingressClassName
            displayName: Authorization Proxy Server Ingress Class Name
            path: driver.controller.proxyServerIngress[0].ingressClassName
          - description: ProxyService is the image tag for the Container
            displayName: Authorization Proxy Service Container Image
            path: driver.controller.proxyService
          - description:
              ProxyServiceReplicas is the number of replicas for the proxy
              service deployment
            displayName: Proxy Service Replicas
            path: driver.controller.proxyServiceReplicas
          - description: Redis is the image tag for the Container
            displayName: Authorization Redis Container Image
            path: driver.controller.redis
          - description: RedisCommander is the name of the redis deployment
            displayName: Redis Deployment Name
            path: driver.controller.redisCommander
          - description: RedisName is the name of the redis statefulset
            displayName: Redis StatefulSet Name
            path: driver.controller.redisName
          - description: RedisReplicas is the number of replicas for the redis deployment
            displayName: Redis Deployment Replicas
            path: driver.controller.redisReplicas
          - description:
              RedisSecretProviderClass is the SecretProviderClass Object details
              for redis Applicable from CSM v1.15 onwards
            displayName: Redis SecretProviderClass details
            path: driver.controller.redisSecretProviderClass
          - description:
              Conjur is the secret configuration with path to retrieve the
              Redis credentials from Conjur
            displayName: Conjur Secret Configuration
            path: driver.controller.redisSecretProviderClass[0].conjur
          - description: PasswordPath is the path to the password in the secret
            displayName: Conjur Password Path
            path: driver.controller.redisSecretProviderClass[0].conjur.passwordPath
          - description: UsernamePath is the path to the username in the secret
            displayName: Conjur Username Path
            path: driver.controller.redisSecretProviderClass[0].conjur.usernamePath
          - description:
              RedisPasswordKey is the key in the secret that holds the Redis
              password
            displayName: Redis Password Key
            path: driver.controller.redisSecretProviderClass[0].redisPasswordKey
          - description:
              RedisSecretName is the name of the Kubernetes secret created
              by the CSI driver
            displayName: Redis Secret Name
            path: driver.controller.redisSecretProviderClass[0].redisSecretName
          - description:
              RedisUsernameKey is the key in the secret that holds the Redis
              username
            displayName: Redis Username Key
            path: driver.controller.redisSecretProviderClass[0].redisUsernameKey
          - description:
              SecretProviderClassName is the name of the SecretProviderClass
              that holds the Redis secretObject
            displayName: Redis Secret Provider Class Name
            path: driver.controller.redisSecretProviderClass[0].secretProviderClassName
          - description: RoleService is the image tag for the Container
            displayName: Authorization Role Service Container Image
            path: driver.controller.roleService
          - description:
              RoleServiceReplicas is the number of replicas for the role service
              deployment
            displayName: Role Service Replicas
            path: driver.controller.roleServiceReplicas
          - description:
              SecretProviderClasses is a collection of secret provider classes
              for retrieving secrets from external providers for storage system credentials
              Applicable from CSM v1.15 onwards Only one of SecretProviderClasses or Secrets
              must be specified (mutually exclusive)
            displayName: Secret Provider Classes
            path: driver.controller.secretProviderClasses
          - description: Conjur is the list SecretProviderClass names provided by Conjur
            displayName: Conjur SecretProviderClasses
            path: driver.controller.secretProviderClasses.conjur
          - description: Name is the name of the Conjur SecretProviderClass
            displayName: Conjur SecretProviderClass Name
            path: driver.controller.secretProviderClasses.conjur[0].name
          - description: Paths is the list of paths to the secrets in Conjur
            displayName: Conjur Credential Paths
            path: driver.controller.secretProviderClasses.conjur[0].paths
          - description: PasswordPath is the path to the password in the secret
            displayName: Conjur Password Path
            path: driver.controller.secretProviderClasses.conjur[0].paths[0].passwordPath
          - description: UsernamePath is the path to the username in the secret
            displayName: Conjur Username Path
            path: driver.controller.secretProviderClasses.conjur[0].paths[0].usernamePath
          - description: Vault is the list SecretProviderClass names provided by Vault
            displayName: Vault SecretProviderClass Names
            path: driver.controller.secretProviderClasses.vault
          - description:
              Secrets is a collection of kubernetes secrets for storage system
              credentials Applicable from CSM v1.15 onwards Only one of SecretProviderClasses
              or Secrets must be specified (mutually exclusive)
            displayName: Secrets
            path: driver.controller.secrets
          - description: Sentinel is the name of the sentinel statefulSet
            displayName: Sentinel StatefulSet Name
            path: driver.controller.sentinel
          - description: skipCertificateValidation is the flag to skip certificate validation
            displayName: Authorization Skip Certificate Validation
            path: driver.controller.skipCertificateValidation
          - description: StorageService is the image tag for the Container
            displayName: Authorization Storage Service Container Image
            path: driver.controller.storageService
          - description:
              StorageServiceReplicas is the number of replicas for storage
              service deployment
            displayName: Storage Service Replicas
            path: driver.controller.storageServiceReplicas
          - description:
              RedisStorageClass is the authorization proxy server redis storage
              class for persistence
            displayName: Authorization Proxy Server Redis storage class
            path: driver.controller.storageclass
          - description: TenantService is the image tag for the Container
            displayName: Authorization Tenant Service Container Image
            path: driver.controller.tenantService
          - description:
              TenantServiceReplicas is the number of replicas for the tenant
              service deployment
            displayName: Tenant Service Replicas
            path: driver.controller.tenantServiceReplicas
          - description: Tolerations is the list of tolerations for the driver pods
            displayName: Tolerations
            path: driver.controller.tolerations
          - description: Vaults are the vault configurations Applicable till CSM v1.14
            displayName: Vault Configurations
            path: driver.controller.vaultConfigurations
          - description: Address is the address for this vault
            displayName: Vault Address
            path: driver.controller.vaultConfigurations[0].address
          - description:
              CertificateAuthority is the base64-encoded certificate authority
              for validaitng the vault certificate
            displayName: Vault Certificate Authority
            path: driver.controller.vaultConfigurations[0].certificateAuthority
          - description:
              ClientCertificate is the base64-encoded certificate for connecting
              to vault
            displayName: Vault CLient Certificate
            path: driver.controller.vaultConfigurations[0].clientCertificate
          - description:
              ClientKey validates is the base64-encoded certificate key for
              connecting to vault
            displayName: Vault CLient Certificate Key
            path: driver.controller.vaultConfigurations[0].clientKey
          - description: Identifier is the identifier for this vault
            displayName: Vault Identifier
            path: driver.controller.vaultConfigurations[0].identifier
          - description: Role is the role for this vault
            displayName: Vault Role
            path: driver.controller.vaultConfigurations[0].role
          - description:
              SkipCertificateValidation validates the vault server certificate
              or not
            displayName: Vault Skip Certificate Validation
            path: driver.controller.vaultConfigurations[0].skipCertificateValidation
          - description: CSIDriverSpec is the specification for CSIDriver
            displayName: CSI Driver Spec
            path: driver.csiDriverSpec
          - description:
              CSIDriverType is the CSI Driver type for Dell Technologies -
              e.g, powermax, powerflex,...
            displayName: CSI Driver Type
            path: driver.csiDriverType
          - description: DNSPolicy is the dnsPolicy of the daemonset for Node plugin
            displayName: DNSPolicy
            path: driver.dnsPolicy
          - description:
              ForceRemoveDriver is the boolean flag used to remove driver deployment
              when CR is deleted
            displayName: Force Remove Driver
            path: driver.forceRemoveDriver
          - description: Args is the set of arguments for the container
            displayName: Container Arguments
            path: driver.initContainers[0].args
          - description: AuthorizationController is the image tag for the container
            displayName: Authorization Controller Container Image
            path: driver.initContainers[0].authorizationController
          - description:
              AuthorizationControllerReplicas is the number of replicas for
              the authorization controller deployment
            displayName: Authorization Controller Replicas
            path: driver.initContainers[0].authorizationControllerReplicas
          - description:
              Certificate is a certificate used for a certificate/private-key
              pair
            displayName: Certificate for certificate/private-key pair
            path: driver.initContainers[0].certificate
          - description:
              CertificateAuthority is a certificate authority used to validate
              a certificate
            displayName: Certificate authority for validating a certificate
            path: driver.initContainers[0].certificateAuthority
          - description: Commander is the image tag for the Container
            displayName: Authorization Commander Container Image
            path: driver.initContainers[0].commander
          - description:
              ConfigSecretProviderClass is the SecretProviderClass Object details
              for config secret Applicable from CSM v1.15 onwards
            displayName: Config SecretProviderClass details
            path: driver.initContainers[0].configSecretProviderClass
          - description:
              ConfigSecretName is the name of the Kubernetes secret created
              by the CSI driver
            displayName: Config Secret Name
            path: driver.initContainers[0].configSecretProviderClass[0].configSecretName
          - description:
              Conjur is the secret configuration with path to retrieve the
              Config secret from Conjur
            displayName: Conjur Config Secret Configuration
            path: driver.initContainers[0].configSecretProviderClass[0].conjur
          - description: SecretPath is the path to the config secret
            displayName: Conjur Secret Path
            path: driver.initContainers[0].configSecretProviderClass[0].conjur.secretPath
          - description:
              SecretProviderClassName is the name of the SecretProviderClass
              that holds the config secretObject
            displayName: Config Secret Provider Class Name
            path: driver.initContainers[0].configSecretProviderClass[0].secretProviderClassName
          - description: The interval which the reconcile of each controller is run
            displayName: Controller Reconcile Interval
            path: driver.initContainers[0].controllerReconcileInterval
          - description: Enabled is used to indicate wether or not to deploy a module
            displayName: Enabled
            path: driver.initContainers[0].enabled
          - description: Envs is the set of environment variables for the container
            displayName: Container Environment vars
            path: driver.initContainers[0].envs
          - description: Hostname is the authorization proxy server hostname
            displayName: Authorization Proxy Server Hostname
            path: driver.initContainers[0].hostname
          - description: Image is the image tag for the Container
            displayName: Container Image
            path: driver.initContainers[0].image
          - description: ImagePullPolicy is the image pull policy for the image
            displayName: Container Image Pull Policy
            path: driver.initContainers[0].imagePullPolicy
            x-descriptors:
              - urn:alm:descriptor:com.tectonic.ui:imagePullPolicy
          - description: LeaderElection is boolean flag to enable leader election
            displayName: Leader Election
            path: driver.initContainers[0].leaderElection
          - description: Name is the name of Container
            displayName: Container Name
            path: driver.initContainers[0].name
          - description:
              NodeSelector is a selector which must be true for the pod to
              fit on a node. Selector which must match a node's labels for the pod to
              be scheduled on that node.
            displayName: NodeSelector
            path: driver.initContainers[0].nodeSelector
          - description: Opa is the image tag for the Container
            displayName: Authorization Opa Container Image
            path: driver.initContainers[0].opa
          - description: OpaKubeMgmt is the image tag for the Container
            displayName: Authorization Opa Kube Management Container Image
            path: driver.initContainers[0].opaKubeMgmt
          - description:
              OpenTelemetryCollectorAddress is the address of the OTLP receiving
              endpoint using gRPC
            displayName: OpenTelemetry Collector Address of the OTLP endpoint using gRPC
            path: driver.initContainers[0].openTelemetryCollectorAddress
          - description:
              PrivateKey is a private key used for a certificate/private-key
              pair
            displayName: Private key for certificate/private-key pair
            path: driver.initContainers[0].privateKey
          - description:
              ProxyServerIngress is the authorization proxy server ingress
              configuration
            displayName: Authorization Proxy Server ingress configuration
            path: driver.initContainers[0].proxyServerIngress
          - description:
              Annotations is an unstructured key value map that stores additional
              annotations for the ingress
            displayName: Authorization Proxy Server Annotations
            path: driver.initContainers[0].proxyServerIngress[0].annotations
          - description: Hosts is the hosts rules for the ingress
            displayName: Authorization Proxy Server Hosts
            path: driver.initContainers[0].proxyServerIngress[0].hosts
          - description: IngressClassName is the ingressClassName
            displayName: Authorization Proxy Server Ingress Class Name
            path: driver.initContainers[0].proxyServerIngress[0].ingressClassName
          - description: ProxyService is the image tag for the Container
            displayName: Authorization Proxy Service Container Image
            path: driver.initContainers[0].proxyService
          - description:
              ProxyServiceReplicas is the number of replicas for the proxy
              service deployment
            displayName: Proxy Service Replicas
            path: driver.initContainers[0].proxyServiceReplicas
          - description: Redis is the image tag for the Container
            displayName: Authorization Redis Container Image
            path: driver.initContainers[0].redis
          - description: RedisCommander is the name of the redis deployment
            displayName: Redis Deployment Name
            path: driver.initContainers[0].redisCommander
          - description: RedisName is the name of the redis statefulset
            displayName: Redis StatefulSet Name
            path: driver.initContainers[0].redisName
          - description: RedisReplicas is the number of replicas for the redis deployment
            displayName: Redis Deployment Replicas
            path: driver.initContainers[0].redisReplicas
          - description:
              RedisSecretProviderClass is the SecretProviderClass Object details
              for redis Applicable from CSM v1.15 onwards
            displayName: Redis SecretProviderClass details
            path: driver.initContainers[0].redisSecretProviderClass
          - description:
              Conjur is the secret configuration with path to retrieve the
              Redis credentials from Conjur
            displayName: Conjur Secret Configuration
            path: driver.initContainers[0].redisSecretProviderClass[0].conjur
          - description: PasswordPath is the path to the password in the secret
            displayName: Conjur Password Path
            path: driver.initContainers[0].redisSecretProviderClass[0].conjur.passwordPath
          - description: UsernamePath is the path to the username in the secret
            displayName: Conjur Username Path
            path: driver.initContainers[0].redisSecretProviderClass[0].conjur.usernamePath
          - description:
              RedisPasswordKey is the key in the secret that holds the Redis
              password
            displayName: Redis Password Key
            path: driver.initContainers[0].redisSecretProviderClass[0].redisPasswordKey
          - description:
              RedisSecretName is the name of the Kubernetes secret created
              by the CSI driver
            displayName: Redis Secret Name
            path: driver.initContainers[0].redisSecretProviderClass[0].redisSecretName
          - description:
              RedisUsernameKey is the key in the secret that holds the Redis
              username
            displayName: Redis Username Key
            path: driver.initContainers[0].redisSecretProviderClass[0].redisUsernameKey
          - description:
              SecretProviderClassName is the name of the SecretProviderClass
              that holds the Redis secretObject
            displayName: Redis Secret Provider Class Name
            path: driver.initContainers[0].redisSecretProviderClass[0].secretProviderClassName
          - description: RoleService is the image tag for the Container
            displayName: Authorization Role Service Container Image
            path: driver.initContainers[0].roleService
          - description:
              RoleServiceReplicas is the number of replicas for the role service
              deployment
            displayName: Role Service Replicas
            path: driver.initContainers[0].roleServiceReplicas
          - description:
              SecretProviderClasses is a collection of secret provider classes
              for retrieving secrets from external providers for storage system credentials
              Applicable from CSM v1.15 onwards Only one of SecretProviderClasses or Secrets
              must be specified (mutually exclusive)
            displayName: Secret Provider Classes
            path: driver.initContainers[0].secretProviderClasses
          - description: Conjur is the list SecretProviderClass names provided by Conjur
            displayName: Conjur SecretProviderClasses
            path: driver.initContainers[0].secretProviderClasses.conjur
          - description: Name is the name of the Conjur SecretProviderClass
            displayName: Conjur SecretProviderClass Name
            path: driver.initContainers[0].secretProviderClasses.conjur[0].name
          - description: Paths is the list of paths to the secrets in Conjur
            displayName: Conjur Credential Paths
            path: driver.initContainers[0].secretProviderClasses.conjur[0].paths
          - description: PasswordPath is the path to the password in the secret
            displayName: Conjur Password Path
            path: driver.initContainers[0].secretProviderClasses.conjur[0].paths[0].passwordPath
          - description: UsernamePath is the path to the username in the secret
            displayName: Conjur Username Path
            path: driver.initContainers[0].secretProviderClasses.conjur[0].paths[0].usernamePath
          - description: Vault is the list SecretProviderClass names provided by Vault
            displayName: Vault SecretProviderClass Names
            path: driver.initContainers[0].secretProviderClasses.vault
          - description:
              Secrets is a collection of kubernetes secrets for storage system
              credentials Applicable from CSM v1.15 onwards Only one of SecretProviderClasses
              or Secrets must be specified (mutually exclusive)
            displayName: Secrets
            path: driver.initContainers[0].secrets
          - description: Sentinel is the name of the sentinel statefulSet
            displayName: Sentinel StatefulSet Name
            path: driver.initContainers[0].sentinel
          - description: skipCertificateValidation is the flag to skip certificate validation
            displayName: Authorization Skip Certificate Validation
            path: driver.initContainers[0].skipCertificateValidation
          - description: StorageService is the image tag for the Container
            displayName: Authorization Storage Service Container Image
            path: driver.initContainers[0].storageService
          - description:
              StorageServiceReplicas is the number of replicas for storage
              service deployment
            displayName: Storage Service Replicas
            path: driver.initContainers[0].storageServiceReplicas
          - description:
              RedisStorageClass is the authorization proxy server redis storage
              class for persistence
            displayName: Authorization Proxy Server Redis storage class
            path: driver.initContainers[0].storageclass
          - description: TenantService is the image tag for the Container
            displayName: Authorization Tenant Service Container Image
            path: driver.initContainers[0].tenantService
          - description:
              TenantServiceReplicas is the number of replicas for the tenant
              service deployment
            displayName: Tenant Service Replicas
            path: driver.initContainers[0].tenantServiceReplicas
          - description: Tolerations is the list of tolerations for the driver pods
            displayName: Tolerations
            path: driver.initContainers[0].tolerations
          - description: Vaults are the vault configurations Applicable till CSM v1.14
            displayName: Vault Configurations
            path: driver.initContainers[0].vaultConfigurations
          - description: Address is the address for this vault
            displayName: Vault Address
            path: driver.initContainers[0].vaultConfigurations[0].address
          - description:
              CertificateAuthority is the base64-encoded certificate authority
              for validaitng the vault certificate
            displayName: Vault Certificate Authority
            path: driver.initContainers[0].vaultConfigurations[0].certificateAuthority
          - description:
              ClientCertificate is the base64-encoded certificate for connecting
              to vault
            displayName: Vault CLient Certificate
            path: driver.initContainers[0].vaultConfigurations[0].clientCertificate
          - description:
              ClientKey validates is the base64-encoded certificate key for
              connecting to vault
            displayName: Vault CLient Certificate Key
            path: driver.initContainers[0].vaultConfigurations[0].clientKey
          - description: Identifier is the identifier for this vault
            displayName: Vault Identifier
            path: driver.initContainers[0].vaultConfigurations[0].identifier
          - description: Role is the role for this vault
            displayName: Vault Role
            path: driver.initContainers[0].vaultConfigurations[0].role
          - description:
              SkipCertificateValidation validates the vault server certificate
              or not
            displayName: Vault Skip Certificate Validation
            path: driver.initContainers[0].vaultConfigurations[0].skipCertificateValidation
          - description: Node is the specification for Node plugin only
            displayName: Node specification
            path: driver.node
          - description: Args is the set of arguments for the container
            displayName: Container Arguments
            path: driver.node.args
          - description: AuthorizationController is the image tag for the container
            displayName: Authorization Controller Container Image
            path: driver.node.authorizationController
          - description:
              AuthorizationControllerReplicas is the number of replicas for
              the authorization controller deployment
            displayName: Authorization Controller Replicas
            path: driver.node.authorizationControllerReplicas
          - description:
              Certificate is a certificate used for a certificate/private-key
              pair
            displayName: Certificate for certificate/private-key pair
            path: driver.node.certificate
          - description:
              CertificateAuthority is a certificate authority used to validate
              a certificate
            displayName: Certificate authority for validating a certificate
            path: driver.node.certificateAuthority
          - description: Commander is the image tag for the Container
            displayName: Authorization Commander Container Image
            path: driver.node.commander
          - description:
              ConfigSecretProviderClass is the SecretProviderClass Object details
              for config secret Applicable from CSM v1.15 onwards
            displayName: Config SecretProviderClass details
            path: driver.node.configSecretProviderClass
          - description:
              ConfigSecretName is the name of the Kubernetes secret created
              by the CSI driver
            displayName: Config Secret Name
            path: driver.node.configSecretProviderClass[0].configSecretName
          - description:
              Conjur is the secret configuration with path to retrieve the
              Config secret from Conjur
            displayName: Conjur Config Secret Configuration
            path: driver.node.configSecretProviderClass[0].conjur
          - description: SecretPath is the path to the config secret
            displayName: Conjur Secret Path
            path: driver.node.configSecretProviderClass[0].conjur.secretPath
          - description:
              SecretProviderClassName is the name of the SecretProviderClass
              that holds the config secretObject
            displayName: Config Secret Provider Class Name
            path: driver.node.configSecretProviderClass[0].secretProviderClassName
          - description: The interval which the reconcile of each controller is run
            displayName: Controller Reconcile Interval
            path: driver.node.controllerReconcileInterval
          - description: Enabled is used to indicate wether or not to deploy a module
            displayName: Enabled
            path: driver.node.enabled
          - description: Envs is the set of environment variables for the container
            displayName: Container Environment vars
            path: driver.node.envs
          - description: Hostname is the authorization proxy server hostname
            displayName: Authorization Proxy Server Hostname
            path: driver.node.hostname
          - description: Image is the image tag for the Container
            displayName: Container Image
            path: driver.node.image
          - description: ImagePullPolicy is the image pull policy for the image
            displayName: Container Image Pull Policy
            path: driver.node.imagePullPolicy
            x-descriptors:
              - urn:alm:descriptor:com.tectonic.ui:imagePullPolicy
          - description: LeaderElection is boolean flag to enable leader election
            displayName: Leader Election
            path: driver.node.leaderElection
          - description: Name is the name of Container
            displayName: Container Name
            path: driver.node.name
          - description:
              NodeSelector is a selector which must be true for the pod to
              fit on a node. Selector which must match a node's labels for the pod to
              be scheduled on that node.
            displayName: NodeSelector
            path: driver.node.nodeSelector
          - description: Opa is the image tag for the Container
            displayName: Authorization Opa Container Image
            path: driver.node.opa
          - description: OpaKubeMgmt is the image tag for the Container
            displayName: Authorization Opa Kube Management Container Image
            path: driver.node.opaKubeMgmt
          - description:
              OpenTelemetryCollectorAddress is the address of the OTLP receiving
              endpoint using gRPC
            displayName: OpenTelemetry Collector Address of the OTLP endpoint using gRPC
            path: driver.node.openTelemetryCollectorAddress
          - description:
              PrivateKey is a private key used for a certificate/private-key
              pair
            displayName: Private key for certificate/private-key pair
            path: driver.node.privateKey
          - description:
              ProxyServerIngress is the authorization proxy server ingress
              configuration
            displayName: Authorization Proxy Server ingress configuration
            path: driver.node.proxyServerIngress
          - description:
              Annotations is an unstructured key value map that stores additional
              annotations for the ingress
            displayName: Authorization Proxy Server Annotations
            path: driver.node.proxyServerIngress[0].annotations
          - description: Hosts is the hosts rules for the ingress
            displayName: Authorization Proxy Server Hosts
            path: driver.node.proxyServerIngress[0].hosts
          - description: IngressClassName is the ingressClassName
            displayName: Authorization Proxy Server Ingress Class Name
            path: driver.node.proxyServerIngress[0].ingressClassName
          - description: ProxyService is the image tag for the Container
            displayName: Authorization Proxy Service Container Image
            path: driver.node.proxyService
          - description:
              ProxyServiceReplicas is the number of replicas for the proxy
              service deployment
            displayName: Proxy Service Replicas
            path: driver.node.proxyServiceReplicas
          - description: Redis is the image tag for the Container
            displayName: Authorization Redis Container Image
            path: driver.node.redis
          - description: RedisCommander is the name of the redis deployment
            displayName: Redis Deployment Name
            path: driver.node.redisCommander
          - description: RedisName is the name of the redis statefulset
            displayName: Redis StatefulSet Name
            path: driver.node.redisName
          - description: RedisReplicas is the number of replicas for the redis deployment
            displayName: Redis Deployment Replicas
            path: driver.node.redisReplicas
          - description:
              RedisSecretProviderClass is the SecretProviderClass Object details
              for redis Applicable from CSM v1.15 onwards
            displayName: Redis SecretProviderClass details
            path: driver.node.redisSecretProviderClass
          - description:
              Conjur is the secret configuration with path to retrieve the
              Redis credentials from Conjur
            displayName: Conjur Secret Configuration
            path: driver.node.redisSecretProviderClass[0].conjur
          - description: PasswordPath is the path to the password in the secret
            displayName: Conjur Password Path
            path: driver.node.redisSecretProviderClass[0].conjur.passwordPath
          - description: UsernamePath is the path to the username in the secret
            displayName: Conjur Username Path
            path: driver.node.redisSecretProviderClass[0].conjur.usernamePath
          - description:
              RedisPasswordKey is the key in the secret that holds the Redis
              password
            displayName: Redis Password Key
            path: driver.node.redisSecretProviderClass[0].redisPasswordKey
          - description:
              RedisSecretName is the name of the Kubernetes secret created
              by the CSI driver
            displayName: Redis Secret Name
            path: driver.node.redisSecretProviderClass[0].redisSecretName
          - description:
              RedisUsernameKey is the key in the secret that holds the Redis
              username
            displayName: Redis Username Key
            path: driver.node.redisSecretProviderClass[0].redisUsernameKey
          - description:
              SecretProviderClassName is the name of the SecretProviderClass
              that holds the Redis secretObject
            displayName: Redis Secret Provider Class Name
            path: driver.node.redisSecretProviderClass[0].secretProviderClassName
          - description: RoleService is the image tag for the Container
            displayName: Authorization Role Service Container Image
            path: driver.node.roleService
          - description:
              RoleServiceReplicas is the number of replicas for the role service
              deployment
            displayName: Role Service Replicas
            path: driver.node.roleServiceReplicas
          - description:
              SecretProviderClasses is a collection of secret provider classes
              for retrieving secrets from external providers for storage system credentials
              Applicable from CSM v1.15 onwards Only one of SecretProviderClasses or Secrets
              must be specified (mutually exclusive)
            displayName: Secret Provider Classes
            path: driver.node.secretProviderClasses
          - description: Conjur is the list SecretProviderClass names provided by Conjur
            displayName: Conjur SecretProviderClasses
            path: driver.node.secretProviderClasses.conjur
          - description: Name is the name of the Conjur SecretProviderClass
            displayName: Conjur SecretProviderClass Name
            path: driver.node.secretProviderClasses.conjur[0].name
          - description: Paths is the list of paths to the secrets in Conjur
            displayName: Conjur Credential Paths
            path: driver.node.secretProviderClasses.conjur[0].paths
          - description: PasswordPath is the path to the password in the secret
            displayName: Conjur Password Path
            path: driver.node.secretProviderClasses.conjur[0].paths[0].passwordPath
          - description: UsernamePath is the path to the username in the secret
            displayName: Conjur Username Path
            path: driver.node.secretProviderClasses.conjur[0].paths[0].usernamePath
          - description: Vault is the list SecretProviderClass names provided by Vault
            displayName: Vault SecretProviderClass Names
            path: driver.node.secretProviderClasses.vault
          - description:
              Secrets is a collection of kubernetes secrets for storage system
              credentials Applicable from CSM v1.15 onwards Only one of SecretProviderClasses
              or Secrets must be specified (mutually exclusive)
            displayName: Secrets
            path: driver.node.secrets
          - description: Sentinel is the name of the sentinel statefulSet
            displayName: Sentinel StatefulSet Name
            path: driver.node.sentinel
          - description: skipCertificateValidation is the flag to skip certificate validation
            displayName: Authorization Skip Certificate Validation
            path: driver.node.skipCertificateValidation
          - description: StorageService is the image tag for the Container
            displayName: Authorization Storage Service Container Image
            path: driver.node.storageService
          - description:
              StorageServiceReplicas is the number of replicas for storage
              service deployment
            displayName: Storage Service Replicas
            path: driver.node.storageServiceReplicas
          - description:
              RedisStorageClass is the authorization proxy server redis storage
              class for persistence
            displayName: Authorization Proxy Server Redis storage class
            path: driver.node.storageclass
          - description: TenantService is the image tag for the Container
            displayName: Authorization Tenant Service Container Image
            path: driver.node.tenantService
          - description:
              TenantServiceReplicas is the number of replicas for the tenant
              service deployment
            displayName: Tenant Service Replicas
            path: driver.node.tenantServiceReplicas
          - description: Tolerations is the list of tolerations for the driver pods
            displayName: Tolerations
            path: driver.node.tolerations
          - description: Vaults are the vault configurations Applicable till CSM v1.14
            displayName: Vault Configurations
            path: driver.node.vaultConfigurations
          - description: Address is the address for this vault
            displayName: Vault Address
            path: driver.node.vaultConfigurations[0].address
          - description:
              CertificateAuthority is the base64-encoded certificate authority
              for validaitng the vault certificate
            displayName: Vault Certificate Authority
            path: driver.node.vaultConfigurations[0].certificateAuthority
          - description:
              ClientCertificate is the base64-encoded certificate for connecting
              to vault
            displayName: Vault CLient Certificate
            path: driver.node.vaultConfigurations[0].clientCertificate
          - description:
              ClientKey validates is the base64-encoded certificate key for
              connecting to vault
            displayName: Vault CLient Certificate Key
            path: driver.node.vaultConfigurations[0].clientKey
          - description: Identifier is the identifier for this vault
            displayName: Vault Identifier
            path: driver.node.vaultConfigurations[0].identifier
          - description: Role is the role for this vault
            displayName: Vault Role
            path: driver.node.vaultConfigurations[0].role
          - description:
              SkipCertificateValidation validates the vault server certificate
              or not
            displayName: Vault Skip Certificate Validation
            path: driver.node.vaultConfigurations[0].skipCertificateValidation
          - description: Replicas is the count of controllers for Controller plugin
            displayName: Controller count
            path: driver.replicas
          - description: SideCars is the specification for CSI sidecar containers
            displayName: CSI SideCars specification
            path: driver.sideCars
          - description: Args is the set of arguments for the container
            displayName: Container Arguments
            path: driver.sideCars[0].args
          - description: AuthorizationController is the image tag for the container
            displayName: Authorization Controller Container Image
            path: driver.sideCars[0].authorizationController
          - description:
              AuthorizationControllerReplicas is the number of replicas for
              the authorization controller deployment
            displayName: Authorization Controller Replicas
            path: driver.sideCars[0].authorizationControllerReplicas
          - description:
              Certificate is a certificate used for a certificate/private-key
              pair
            displayName: Certificate for certificate/private-key pair
            path: driver.sideCars[0].certificate
          - description:
              CertificateAuthority is a certificate authority used to validate
              a certificate
            displayName: Certificate authority for validating a certificate
            path: driver.sideCars[0].certificateAuthority
          - description: Commander is the image tag for the Container
            displayName: Authorization Commander Container Image
            path: driver.sideCars[0].commander
          - description:
              ConfigSecretProviderClass is the SecretProviderClass Object details
              for config secret Applicable from CSM v1.15 onwards
            displayName: Config SecretProviderClass details
            path: driver.sideCars[0].configSecretProviderClass
          - description:
              ConfigSecretName is the name of the Kubernetes secret created
              by the CSI driver
            displayName: Config Secret Name
            path: driver.sideCars[0].configSecretProviderClass[0].configSecretName
          - description:
              Conjur is the secret configuration with path to retrieve the
              Config secret from Conjur
            displayName: Conjur Config Secret Configuration
            path: driver.sideCars[0].configSecretProviderClass[0].conjur
          - description: SecretPath is the path to the config secret
            displayName: Conjur Secret Path
            path: driver.sideCars[0].configSecretProviderClass[0].conjur.secretPath
          - description:
              SecretProviderClassName is the name of the SecretProviderClass
              that holds the config secretObject
            displayName: Config Secret Provider Class Name
            path: driver.sideCars[0].configSecretProviderClass[0].secretProviderClassName
          - description: The interval which the reconcile of each controller is run
            displayName: Controller Reconcile Interval
            path: driver.sideCars[0].controllerReconcileInterval
          - description: Enabled is used to indicate wether or not to deploy a module
            displayName: Enabled
            path: driver.sideCars[0].enabled
          - description: Envs is the set of environment variables for the container
            displayName: Container Environment vars
            path: driver.sideCars[0].envs
          - description: Hostname is the authorization proxy server hostname
            displayName: Authorization Proxy Server Hostname
            path: driver.sideCars[0].hostname
          - description: Image is the image tag for the Container
            displayName: Container Image
            path: driver.sideCars[0].image
          - description: ImagePullPolicy is the image pull policy for the image
            displayName: Container Image Pull Policy
            path: driver.sideCars[0].imagePullPolicy
            x-descriptors:
              - urn:alm:descriptor:com.tectonic.ui:imagePullPolicy
          - description: LeaderElection is boolean flag to enable leader election
            displayName: Leader Election
            path: driver.sideCars[0].leaderElection
          - description: Name is the name of Container
            displayName: Container Name
            path: driver.sideCars[0].name
          - description:
              NodeSelector is a selector which must be true for the pod to
              fit on a node. Selector which must match a node's labels for the pod to
              be scheduled on that node.
            displayName: NodeSelector
            path: driver.sideCars[0].nodeSelector
          - description: Opa is the image tag for the Container
            displayName: Authorization Opa Container Image
            path: driver.sideCars[0].opa
          - description: OpaKubeMgmt is the image tag for the Container
            displayName: Authorization Opa Kube Management Container Image
            path: driver.sideCars[0].opaKubeMgmt
          - description:
              OpenTelemetryCollectorAddress is the address of the OTLP receiving
              endpoint using gRPC
            displayName: OpenTelemetry Collector Address of the OTLP endpoint using gRPC
            path: driver.sideCars[0].openTelemetryCollectorAddress
          - description:
              PrivateKey is a private key used for a certificate/private-key
              pair
            displayName: Private key for certificate/private-key pair
            path: driver.sideCars[0].privateKey
          - description:
              ProxyServerIngress is the authorization proxy server ingress
              configuration
            displayName: Authorization Proxy Server ingress configuration
            path: driver.sideCars[0].proxyServerIngress
          - description:
              Annotations is an unstructured key value map that stores additional
              annotations for the ingress
            displayName: Authorization Proxy Server Annotations
            path: driver.sideCars[0].proxyServerIngress[0].annotations
          - description: Hosts is the hosts rules for the ingress
            displayName: Authorization Proxy Server Hosts
            path: driver.sideCars[0].proxyServerIngress[0].hosts
          - description: IngressClassName is the ingressClassName
            displayName: Authorization Proxy Server Ingress Class Name
            path: driver.sideCars[0].proxyServerIngress[0].ingressClassName
          - description: ProxyService is the image tag for the Container
            displayName: Authorization Proxy Service Container Image
            path: driver.sideCars[0].proxyService
          - description:
              ProxyServiceReplicas is the number of replicas for the proxy
              service deployment
            displayName: Proxy Service Replicas
            path: driver.sideCars[0].proxyServiceReplicas
          - description: Redis is the image tag for the Container
            displayName: Authorization Redis Container Image
            path: driver.sideCars[0].redis
          - description: RedisCommander is the name of the redis deployment
            displayName: Redis Deployment Name
            path: driver.sideCars[0].redisCommander
          - description: RedisName is the name of the redis statefulset
            displayName: Redis StatefulSet Name
            path: driver.sideCars[0].redisName
          - description: RedisReplicas is the number of replicas for the redis deployment
            displayName: Redis Deployment Replicas
            path: driver.sideCars[0].redisReplicas
          - description:
              RedisSecretProviderClass is the SecretProviderClass Object details
              for redis Applicable from CSM v1.15 onwards
            displayName: Redis SecretProviderClass details
            path: driver.sideCars[0].redisSecretProviderClass
          - description:
              Conjur is the secret configuration with path to retrieve the
              Redis credentials from Conjur
            displayName: Conjur Secret Configuration
            path: driver.sideCars[0].redisSecretProviderClass[0].conjur
          - description: PasswordPath is the path to the password in the secret
            displayName: Conjur Password Path
            path: driver.sideCars[0].redisSecretProviderClass[0].conjur.passwordPath
          - description: UsernamePath is the path to the username in the secret
            displayName: Conjur Username Path
            path: driver.sideCars[0].redisSecretProviderClass[0].conjur.usernamePath
          - description:
              RedisPasswordKey is the key in the secret that holds the Redis
              password
            displayName: Redis Password Key
            path: driver.sideCars[0].redisSecretProviderClass[0].redisPasswordKey
          - description:
              RedisSecretName is the name of the Kubernetes secret created
              by the CSI driver
            displayName: Redis Secret Name
            path: driver.sideCars[0].redisSecretProviderClass[0].redisSecretName
          - description:
              RedisUsernameKey is the key in the secret that holds the Redis
              username
            displayName: Redis Username Key
            path: driver.sideCars[0].redisSecretProviderClass[0].redisUsernameKey
          - description:
              SecretProviderClassName is the name of the SecretProviderClass
              that holds the Redis secretObject
            displayName: Redis Secret Provider Class Name
            path: driver.sideCars[0].redisSecretProviderClass[0].secretProviderClassName
          - description: RoleService is the image tag for the Container
            displayName: Authorization Role Service Container Image
            path: driver.sideCars[0].roleService
          - description:
              RoleServiceReplicas is the number of replicas for the role service
              deployment
            displayName: Role Service Replicas
            path: driver.sideCars[0].roleServiceReplicas
          - description:
              SecretProviderClasses is a collection of secret provider classes
              for retrieving secrets from external providers for storage system credentials
              Applicable from CSM v1.15 onwards Only one of SecretProviderClasses or Secrets
              must be specified (mutually exclusive)
            displayName: Secret Provider Classes
            path: driver.sideCars[0].secretProviderClasses
          - description: Conjur is the list SecretProviderClass names provided by Conjur
            displayName: Conjur SecretProviderClasses
            path: driver.sideCars[0].secretProviderClasses.conjur
          - description: Name is the name of the Conjur SecretProviderClass
            displayName: Conjur SecretProviderClass Name
            path: driver.sideCars[0].secretProviderClasses.conjur[0].name
          - description: Paths is the list of paths to the secrets in Conjur
            displayName: Conjur Credential Paths
            path: driver.sideCars[0].secretProviderClasses.conjur[0].paths
          - description: PasswordPath is the path to the password in the secret
            displayName: Conjur Password Path
            path: driver.sideCars[0].secretProviderClasses.conjur[0].paths[0].passwordPath
          - description: UsernamePath is the path to the username in the secret
            displayName: Conjur Username Path
            path: driver.sideCars[0].secretProviderClasses.conjur[0].paths[0].usernamePath
          - description: Vault is the list SecretProviderClass names provided by Vault
            displayName: Vault SecretProviderClass Names
            path: driver.sideCars[0].secretProviderClasses.vault
          - description:
              Secrets is a collection of kubernetes secrets for storage system
              credentials Applicable from CSM v1.15 onwards Only one of SecretProviderClasses
              or Secrets must be specified (mutually exclusive)
            displayName: Secrets
            path: driver.sideCars[0].secrets
          - description: Sentinel is the name of the sentinel statefulSet
            displayName: Sentinel StatefulSet Name
            path: driver.sideCars[0].sentinel
          - description: skipCertificateValidation is the flag to skip certificate validation
            displayName: Authorization Skip Certificate Validation
            path: driver.sideCars[0].skipCertificateValidation
          - description: StorageService is the image tag for the Container
            displayName: Authorization Storage Service Container Image
            path: driver.sideCars[0].storageService
          - description:
              StorageServiceReplicas is the number of replicas for storage
              service deployment
            displayName: Storage Service Replicas
            path: driver.sideCars[0].storageServiceReplicas
          - description:
              RedisStorageClass is the authorization proxy server redis storage
              class for persistence
            displayName: Authorization Proxy Server Redis storage class
            path: driver.sideCars[0].storageclass
          - description: TenantService is the image tag for the Container
            displayName: Authorization Tenant Service Container Image
            path: driver.sideCars[0].tenantService
          - description:
              TenantServiceReplicas is the number of replicas for the tenant
              service deployment
            displayName: Tenant Service Replicas
            path: driver.sideCars[0].tenantServiceReplicas
          - description: Tolerations is the list of tolerations for the driver pods
            displayName: Tolerations
            path: driver.sideCars[0].tolerations
          - description: Vaults are the vault configurations Applicable till CSM v1.14
            displayName: Vault Configurations
            path: driver.sideCars[0].vaultConfigurations
          - description: Address is the address for this vault
            displayName: Vault Address
            path: driver.sideCars[0].vaultConfigurations[0].address
          - description:
              CertificateAuthority is the base64-encoded certificate authority
              for validaitng the vault certificate
            displayName: Vault Certificate Authority
            path: driver.sideCars[0].vaultConfigurations[0].certificateAuthority
          - description:
              ClientCertificate is the base64-encoded certificate for connecting
              to vault
            displayName: Vault CLient Certificate
            path: driver.sideCars[0].vaultConfigurations[0].clientCertificate
          - description:
              ClientKey validates is the base64-encoded certificate key for
              connecting to vault
            displayName: Vault CLient Certificate Key
            path: driver.sideCars[0].vaultConfigurations[0].clientKey
          - description: Identifier is the identifier for this vault
            displayName: Vault Identifier
            path: driver.sideCars[0].vaultConfigurations[0].identifier
          - description: Role is the role for this vault
            displayName: Vault Role
            path: driver.sideCars[0].vaultConfigurations[0].role
          - description:
              SkipCertificateValidation validates the vault server certificate
              or not
            displayName: Vault Skip Certificate Validation
            path: driver.sideCars[0].vaultConfigurations[0].skipCertificateValidation
          - description: SnapshotClass is the specification for Snapshot Classes
            displayName: Snapshot Classes
            path: driver.snapshotClass
          - description: Name is the name of the Snapshot Class
            displayName: Snapshot Class Name
            path: driver.snapshotClass[0].name
          - description:
              Parameters is a map of driver specific parameters for snapshot
              class
            displayName: Snapshot Class Parameters
            path: driver.snapshotClass[0].parameters
          - description: TLSCertSecret is the name of the TLS Cert secret
            displayName: TLSCert Secret
            path: driver.tlsCertSecret
          - description: Components is the specification for CSM components containers
            displayName: ContainerStorageModule components specification
            path: modules[0].components
          - description: Args is the set of arguments for the container
            displayName: Container Arguments
            path: modules[0].components[0].args
          - description: AuthorizationController is the image tag for the container
            displayName: Authorization Controller Container Image
            path: modules[0].components[0].authorizationController
          - description:
              AuthorizationControllerReplicas is the number of replicas for
              the authorization controller deployment
            displayName: Authorization Controller Replicas
            path: modules[0].components[0].authorizationControllerReplicas
          - description:
              Certificate is a certificate used for a certificate/private-key
              pair
            displayName: Certificate for certificate/private-key pair
            path: modules[0].components[0].certificate
          - description:
              CertificateAuthority is a certificate authority used to validate
              a certificate
            displayName: Certificate authority for validating a certificate
            path: modules[0].components[0].certificateAuthority
          - description: Commander is the image tag for the Container
            displayName: Authorization Commander Container Image
            path: modules[0].components[0].commander
          - description:
              ConfigSecretProviderClass is the SecretProviderClass Object details
              for config secret Applicable from CSM v1.15 onwards
            displayName: Config SecretProviderClass details
            path: modules[0].components[0].configSecretProviderClass
          - description:
              ConfigSecretName is the name of the Kubernetes secret created
              by the CSI driver
            displayName: Config Secret Name
            path: modules[0].components[0].configSecretProviderClass[0].configSecretName
          - description:
              Conjur is the secret configuration with path to retrieve the
              Config secret from Conjur
            displayName: Conjur Config Secret Configuration
            path: modules[0].components[0].configSecretProviderClass[0].conjur
          - description: SecretPath is the path to the config secret
            displayName: Conjur Secret Path
            path: modules[0].components[0].configSecretProviderClass[0].conjur.secretPath
          - description:
              SecretProviderClassName is the name of the SecretProviderClass
              that holds the config secretObject
            displayName: Config Secret Provider Class Name
            path: modules[0].components[0].configSecretProviderClass[0].secretProviderClassName
          - description: The interval which the reconcile of each controller is run
            displayName: Controller Reconcile Interval
            path: modules[0].components[0].controllerReconcileInterval
          - description: Enabled is used to indicate wether or not to deploy a module
            displayName: Enabled
            path: modules[0].components[0].enabled
          - description: Envs is the set of environment variables for the container
            displayName: Container Environment vars
            path: modules[0].components[0].envs
          - description: Hostname is the authorization proxy server hostname
            displayName: Authorization Proxy Server Hostname
            path: modules[0].components[0].hostname
          - description: Image is the image tag for the Container
            displayName: Container Image
            path: modules[0].components[0].image
          - description: ImagePullPolicy is the image pull policy for the image
            displayName: Container Image Pull Policy
            path: modules[0].components[0].imagePullPolicy
            x-descriptors:
              - urn:alm:descriptor:com.tectonic.ui:imagePullPolicy
          - description: LeaderElection is boolean flag to enable leader election
            displayName: Leader Election
            path: modules[0].components[0].leaderElection
          - description: Name is the name of Container
            displayName: Container Name
            path: modules[0].components[0].name
          - description:
              NodeSelector is a selector which must be true for the pod to
              fit on a node. Selector which must match a node's labels for the pod to
              be scheduled on that node.
            displayName: NodeSelector
            path: modules[0].components[0].nodeSelector
          - description: Opa is the image tag for the Container
            displayName: Authorization Opa Container Image
            path: modules[0].components[0].opa
          - description: OpaKubeMgmt is the image tag for the Container
            displayName: Authorization Opa Kube Management Container Image
            path: modules[0].components[0].opaKubeMgmt
          - description:
              OpenTelemetryCollectorAddress is the address of the OTLP receiving
              endpoint using gRPC
            displayName: OpenTelemetry Collector Address of the OTLP endpoint using gRPC
            path: modules[0].components[0].openTelemetryCollectorAddress
          - description:
              PrivateKey is a private key used for a certificate/private-key
              pair
            displayName: Private key for certificate/private-key pair
            path: modules[0].components[0].privateKey
          - description:
              ProxyServerIngress is the authorization proxy server ingress
              configuration
            displayName: Authorization Proxy Server ingress configuration
            path: modules[0].components[0].proxyServerIngress
          - description:
              Annotations is an unstructured key value map that stores additional
              annotations for the ingress
            displayName: Authorization Proxy Server Annotations
            path: modules[0].components[0].proxyServerIngress[0].annotations
          - description: Hosts is the hosts rules for the ingress
            displayName: Authorization Proxy Server Hosts
            path: modules[0].components[0].proxyServerIngress[0].hosts
          - description: IngressClassName is the ingressClassName
            displayName: Authorization Proxy Server Ingress Class Name
            path: modules[0].components[0].proxyServerIngress[0].ingressClassName
          - description: ProxyService is the image tag for the Container
            displayName: Authorization Proxy Service Container Image
            path: modules[0].components[0].proxyService
          - description:
              ProxyServiceReplicas is the number of replicas for the proxy
              service deployment
            displayName: Proxy Service Replicas
            path: modules[0].components[0].proxyServiceReplicas
          - description: Redis is the image tag for the Container
            displayName: Authorization Redis Container Image
            path: modules[0].components[0].redis
          - description: RedisCommander is the name of the redis deployment
            displayName: Redis Deployment Name
            path: modules[0].components[0].redisCommander
          - description: RedisName is the name of the redis statefulset
            displayName: Redis StatefulSet Name
            path: modules[0].components[0].redisName
          - description: RedisReplicas is the number of replicas for the redis deployment
            displayName: Redis Deployment Replicas
            path: modules[0].components[0].redisReplicas
          - description:
              RedisSecretProviderClass is the SecretProviderClass Object details
              for redis Applicable from CSM v1.15 onwards
            displayName: Redis SecretProviderClass details
            path: modules[0].components[0].redisSecretProviderClass
          - description:
              Conjur is the secret configuration with path to retrieve the
              Redis credentials from Conjur
            displayName: Conjur Secret Configuration
            path: modules[0].components[0].redisSecretProviderClass[0].conjur
          - description: PasswordPath is the path to the password in the secret
            displayName: Conjur Password Path
            path: modules[0].components[0].redisSecretProviderClass[0].conjur.passwordPath
          - description: UsernamePath is the path to the username in the secret
            displayName: Conjur Username Path
            path: modules[0].components[0].redisSecretProviderClass[0].conjur.usernamePath
          - description:
              RedisPasswordKey is the key in the secret that holds the Redis
              password
            displayName: Redis Password Key
            path: modules[0].components[0].redisSecretProviderClass[0].redisPasswordKey
          - description:
              RedisSecretName is the name of the Kubernetes secret created
              by the CSI driver
            displayName: Redis Secret Name
            path: modules[0].components[0].redisSecretProviderClass[0].redisSecretName
          - description:
              RedisUsernameKey is the key in the secret that holds the Redis
              username
            displayName: Redis Username Key
            path: modules[0].components[0].redisSecretProviderClass[0].redisUsernameKey
          - description:
              SecretProviderClassName is the name of the SecretProviderClass
              that holds the Redis secretObject
            displayName: Redis Secret Provider Class Name
            path: modules[0].components[0].redisSecretProviderClass[0].secretProviderClassName
          - description: RoleService is the image tag for the Container
            displayName: Authorization Role Service Container Image
            path: modules[0].components[0].roleService
          - description:
              RoleServiceReplicas is the number of replicas for the role service
              deployment
            displayName: Role Service Replicas
            path: modules[0].components[0].roleServiceReplicas
          - description:
              SecretProviderClasses is a collection of secret provider classes
              for retrieving secrets from external providers for storage system credentials
              Applicable from CSM v1.15 onwards Only one of SecretProviderClasses or Secrets
              must be specified (mutually exclusive)
            displayName: Secret Provider Classes
            path: modules[0].components[0].secretProviderClasses
          - description: Conjur is the list SecretProviderClass names provided by Conjur
            displayName: Conjur SecretProviderClasses
            path: modules[0].components[0].secretProviderClasses.conjur
          - description: Name is the name of the Conjur SecretProviderClass
            displayName: Conjur SecretProviderClass Name
            path: modules[0].components[0].secretProviderClasses.conjur[0].name
          - description: Paths is the list of paths to the secrets in Conjur
            displayName: Conjur Credential Paths
            path: modules[0].components[0].secretProviderClasses.conjur[0].paths
          - description: PasswordPath is the path to the password in the secret
            displayName: Conjur Password Path
            path: modules[0].components[0].secretProviderClasses.conjur[0].paths[0].passwordPath
          - description: UsernamePath is the path to the username in the secret
            displayName: Conjur Username Path
            path: modules[0].components[0].secretProviderClasses.conjur[0].paths[0].usernamePath
          - description: Vault is the list SecretProviderClass names provided by Vault
            displayName: Vault SecretProviderClass Names
            path: modules[0].components[0].secretProviderClasses.vault
          - description:
              Secrets is a collection of kubernetes secrets for storage system
              credentials Applicable from CSM v1.15 onwards Only one of SecretProviderClasses
              or Secrets must be specified (mutually exclusive)
            displayName: Secrets
            path: modules[0].components[0].secrets
          - description: Sentinel is the name of the sentinel statefulSet
            displayName: Sentinel StatefulSet Name
            path: modules[0].components[0].sentinel
          - description: skipCertificateValidation is the flag to skip certificate validation
            displayName: Authorization Skip Certificate Validation
            path: modules[0].components[0].skipCertificateValidation
          - description: StorageService is the image tag for the Container
            displayName: Authorization Storage Service Container Image
            path: modules[0].components[0].storageService
          - description:
              StorageServiceReplicas is the number of replicas for storage
              service deployment
            displayName: Storage Service Replicas
            path: modules[0].components[0].storageServiceReplicas
          - description:
              RedisStorageClass is the authorization proxy server redis storage
              class for persistence
            displayName: Authorization Proxy Server Redis storage class
            path: modules[0].components[0].storageclass
          - description: TenantService is the image tag for the Container
            displayName: Authorization Tenant Service Container Image
            path: modules[0].components[0].tenantService
          - description:
              TenantServiceReplicas is the number of replicas for the tenant
              service deployment
            displayName: Tenant Service Replicas
            path: modules[0].components[0].tenantServiceReplicas
          - description: Tolerations is the list of tolerations for the driver pods
            displayName: Tolerations
            path: modules[0].components[0].tolerations
          - description: Vaults are the vault configurations Applicable till CSM v1.14
            displayName: Vault Configurations
            path: modules[0].components[0].vaultConfigurations
          - description: Address is the address for this vault
            displayName: Vault Address
            path: modules[0].components[0].vaultConfigurations[0].address
          - description:
              CertificateAuthority is the base64-encoded certificate authority
              for validaitng the vault certificate
            displayName: Vault Certificate Authority
            path: modules[0].components[0].vaultConfigurations[0].certificateAuthority
          - description:
              ClientCertificate is the base64-encoded certificate for connecting
              to vault
            displayName: Vault CLient Certificate
            path: modules[0].components[0].vaultConfigurations[0].clientCertificate
          - description:
              ClientKey validates is the base64-encoded certificate key for
              connecting to vault
            displayName: Vault CLient Certificate Key
            path: modules[0].components[0].vaultConfigurations[0].clientKey
          - description: Identifier is the identifier for this vault
            displayName: Vault Identifier
            path: modules[0].components[0].vaultConfigurations[0].identifier
          - description: Role is the role for this vault
            displayName: Vault Role
            path: modules[0].components[0].vaultConfigurations[0].role
          - description:
              SkipCertificateValidation validates the vault server certificate
              or not
            displayName: Vault Skip Certificate Validation
            path: modules[0].components[0].vaultConfigurations[0].skipCertificateValidation
          - description: ConfigVersion is the configuration version of the module
            displayName: Config Version
            path: modules[0].configVersion
          - description: Enabled is used to indicate whether or not to deploy a module
            displayName: Enabled
            path: modules[0].enabled
          - description:
              ForceRemoveModule is the boolean flag used to remove authorization
              proxy server deployment when CR is deleted
            displayName: Force Remove Module
            path: modules[0].forceRemoveModule
          - description: Args is the set of arguments for the container
            displayName: Container Arguments
            path: modules[0].initContainer[0].args
          - description: AuthorizationController is the image tag for the container
            displayName: Authorization Controller Container Image
            path: modules[0].initContainer[0].authorizationController
          - description:
              AuthorizationControllerReplicas is the number of replicas for
              the authorization controller deployment
            displayName: Authorization Controller Replicas
            path: modules[0].initContainer[0].authorizationControllerReplicas
          - description:
              Certificate is a certificate used for a certificate/private-key
              pair
            displayName: Certificate for certificate/private-key pair
            path: modules[0].initContainer[0].certificate
          - description:
              CertificateAuthority is a certificate authority used to validate
              a certificate
            displayName: Certificate authority for validating a certificate
            path: modules[0].initContainer[0].certificateAuthority
          - description: Commander is the image tag for the Container
            displayName: Authorization Commander Container Image
            path: modules[0].initContainer[0].commander
          - description:
              ConfigSecretProviderClass is the SecretProviderClass Object details
              for config secret Applicable from CSM v1.15 onwards
            displayName: Config SecretProviderClass details
            path: modules[0].initContainer[0].configSecretProviderClass
          - description:
              ConfigSecretName is the name of the Kubernetes secret created
              by the CSI driver
            displayName: Config Secret Name
            path: modules[0].initContainer[0].configSecretProviderClass[0].configSecretName
          - description:
              Conjur is the secret configuration with path to retrieve the
              Config secret from Conjur
            displayName: Conjur Config Secret Configuration
            path: modules[0].initContainer[0].configSecretProviderClass[0].conjur
          - description: SecretPath is the path to the config secret
            displayName: Conjur Secret Path
            path: modules[0].initContainer[0].configSecretProviderClass[0].conjur.secretPath
          - description:
              SecretProviderClassName is the name of the SecretProviderClass
              that holds the config secretObject
            displayName: Config Secret Provider Class Name
            path: modules[0].initContainer[0].configSecretProviderClass[0].secretProviderClassName
          - description: The interval which the reconcile of each controller is run
            displayName: Controller Reconcile Interval
            path: modules[0].initContainer[0].controllerReconcileInterval
          - description: Enabled is used to indicate wether or not to deploy a module
            displayName: Enabled
            path: modules[0].initContainer[0].enabled
          - description: Envs is the set of environment variables for the container
            displayName: Container Environment vars
            path: modules[0].initContainer[0].envs
          - description: Hostname is the authorization proxy server hostname
            displayName: Authorization Proxy Server Hostname
            path: modules[0].initContainer[0].hostname
          - description: Image is the image tag for the Container
            displayName: Container Image
            path: modules[0].initContainer[0].image
          - description: ImagePullPolicy is the image pull policy for the image
            displayName: Container Image Pull Policy
            path: modules[0].initContainer[0].imagePullPolicy
            x-descriptors:
              - urn:alm:descriptor:com.tectonic.ui:imagePullPolicy
          - description: LeaderElection is boolean flag to enable leader election
            displayName: Leader Election
            path: modules[0].initContainer[0].leaderElection
          - description: Name is the name of Container
            displayName: Container Name
            path: modules[0].initContainer[0].name
          - description:
              NodeSelector is a selector which must be true for the pod to
              fit on a node. Selector which must match a node's labels for the pod to
              be scheduled on that node.
            displayName: NodeSelector
            path: modules[0].initContainer[0].nodeSelector
          - description: Opa is the image tag for the Container
            displayName: Authorization Opa Container Image
            path: modules[0].initContainer[0].opa
          - description: OpaKubeMgmt is the image tag for the Container
            displayName: Authorization Opa Kube Management Container Image
            path: modules[0].initContainer[0].opaKubeMgmt
          - description:
              OpenTelemetryCollectorAddress is the address of the OTLP receiving
              endpoint using gRPC
            displayName: OpenTelemetry Collector Address of the OTLP endpoint using gRPC
            path: modules[0].initContainer[0].openTelemetryCollectorAddress
          - description:
              PrivateKey is a private key used for a certificate/private-key
              pair
            displayName: Private key for certificate/private-key pair
            path: modules[0].initContainer[0].privateKey
          - description:
              ProxyServerIngress is the authorization proxy server ingress
              configuration
            displayName: Authorization Proxy Server ingress configuration
            path: modules[0].initContainer[0].proxyServerIngress
          - description:
              Annotations is an unstructured key value map that stores additional
              annotations for the ingress
            displayName: Authorization Proxy Server Annotations
            path: modules[0].initContainer[0].proxyServerIngress[0].annotations
          - description: Hosts is the hosts rules for the ingress
            displayName: Authorization Proxy Server Hosts
            path: modules[0].initContainer[0].proxyServerIngress[0].hosts
          - description: IngressClassName is the ingressClassName
            displayName: Authorization Proxy Server Ingress Class Name
            path: modules[0].initContainer[0].proxyServerIngress[0].ingressClassName
          - description: ProxyService is the image tag for the Container
            displayName: Authorization Proxy Service Container Image
            path: modules[0].initContainer[0].proxyService
          - description:
              ProxyServiceReplicas is the number of replicas for the proxy
              service deployment
            displayName: Proxy Service Replicas
            path: modules[0].initContainer[0].proxyServiceReplicas
          - description: Redis is the image tag for the Container
            displayName: Authorization Redis Container Image
            path: modules[0].initContainer[0].redis
          - description: RedisCommander is the name of the redis deployment
            displayName: Redis Deployment Name
            path: modules[0].initContainer[0].redisCommander
          - description: RedisName is the name of the redis statefulset
            displayName: Redis StatefulSet Name
            path: modules[0].initContainer[0].redisName
          - description: RedisReplicas is the number of replicas for the redis deployment
            displayName: Redis Deployment Replicas
            path: modules[0].initContainer[0].redisReplicas
          - description:
              RedisSecretProviderClass is the SecretProviderClass Object details
              for redis Applicable from CSM v1.15 onwards
            displayName: Redis SecretProviderClass details
            path: modules[0].initContainer[0].redisSecretProviderClass
          - description:
              Conjur is the secret configuration with path to retrieve the
              Redis credentials from Conjur
            displayName: Conjur Secret Configuration
            path: modules[0].initContainer[0].redisSecretProviderClass[0].conjur
          - description: PasswordPath is the path to the password in the secret
            displayName: Conjur Password Path
            path: modules[0].initContainer[0].redisSecretProviderClass[0].conjur.passwordPath
          - description: UsernamePath is the path to the username in the secret
            displayName: Conjur Username Path
            path: modules[0].initContainer[0].redisSecretProviderClass[0].conjur.usernamePath
          - description:
              RedisPasswordKey is the key in the secret that holds the Redis
              password
            displayName: Redis Password Key
            path: modules[0].initContainer[0].redisSecretProviderClass[0].redisPasswordKey
          - description:
              RedisSecretName is the name of the Kubernetes secret created
              by the CSI driver
            displayName: Redis Secret Name
            path: modules[0].initContainer[0].redisSecretProviderClass[0].redisSecretName
          - description:
              RedisUsernameKey is the key in the secret that holds the Redis
              username
            displayName: Redis Username Key
            path: modules[0].initContainer[0].redisSecretProviderClass[0].redisUsernameKey
          - description:
              SecretProviderClassName is the name of the SecretProviderClass
              that holds the Redis secretObject
            displayName: Redis Secret Provider Class Name
            path: modules[0].initContainer[0].redisSecretProviderClass[0].secretProviderClassName
          - description: RoleService is the image tag for the Container
            displayName: Authorization Role Service Container Image
            path: modules[0].initContainer[0].roleService
          - description:
              RoleServiceReplicas is the number of replicas for the role service
              deployment
            displayName: Role Service Replicas
            path: modules[0].initContainer[0].roleServiceReplicas
          - description:
              SecretProviderClasses is a collection of secret provider classes
              for retrieving secrets from external providers for storage system credentials
              Applicable from CSM v1.15 onwards Only one of SecretProviderClasses or Secrets
              must be specified (mutually exclusive)
            displayName: Secret Provider Classes
            path: modules[0].initContainer[0].secretProviderClasses
          - description: Conjur is the list SecretProviderClass names provided by Conjur
            displayName: Conjur SecretProviderClasses
            path: modules[0].initContainer[0].secretProviderClasses.conjur
          - description: Name is the name of the Conjur SecretProviderClass
            displayName: Conjur SecretProviderClass Name
            path: modules[0].initContainer[0].secretProviderClasses.conjur[0].name
          - description: Paths is the list of paths to the secrets in Conjur
            displayName: Conjur Credential Paths
            path: modules[0].initContainer[0].secretProviderClasses.conjur[0].paths
          - description: PasswordPath is the path to the password in the secret
            displayName: Conjur Password Path
            path: modules[0].initContainer[0].secretProviderClasses.conjur[0].paths[0].passwordPath
          - description: UsernamePath is the path to the username in the secret
            displayName: Conjur Username Path
            path: modules[0].initContainer[0].secretProviderClasses.conjur[0].paths[0].usernamePath
          - description: Vault is the list SecretProviderClass names provided by Vault
            displayName: Vault SecretProviderClass Names
            path: modules[0].initContainer[0].secretProviderClasses.vault
          - description:
              Secrets is a collection of kubernetes secrets for storage system
              credentials Applicable from CSM v1.15 onwards Only one of SecretProviderClasses
              or Secrets must be specified (mutually exclusive)
            displayName: Secrets
            path: modules[0].initContainer[0].secrets
          - description: Sentinel is the name of the sentinel statefulSet
            displayName: Sentinel StatefulSet Name
            path: modules[0].initContainer[0].sentinel
          - description: skipCertificateValidation is the flag to skip certificate validation
            displayName: Authorization Skip Certificate Validation
            path: modules[0].initContainer[0].skipCertificateValidation
          - description: StorageService is the image tag for the Container
            displayName: Authorization Storage Service Container Image
            path: modules[0].initContainer[0].storageService
          - description:
              StorageServiceReplicas is the number of replicas for storage
              service deployment
            displayName: Storage Service Replicas
            path: modules[0].initContainer[0].storageServiceReplicas
          - description:
              RedisStorageClass is the authorization proxy server redis storage
              class for persistence
            displayName: Authorization Proxy Server Redis storage class
            path: modules[0].initContainer[0].storageclass
          - description: TenantService is the image tag for the Container
            displayName: Authorization Tenant Service Container Image
            path: modules[0].initContainer[0].tenantService
          - description:
              TenantServiceReplicas is the number of replicas for the tenant
              service deployment
            displayName: Tenant Service Replicas
            path: modules[0].initContainer[0].tenantServiceReplicas
          - description: Tolerations is the list of tolerations for the driver pods
            displayName: Tolerations
            path: modules[0].initContainer[0].tolerations
          - description: Vaults are the vault configurations Applicable till CSM v1.14
            displayName: Vault Configurations
            path: modules[0].initContainer[0].vaultConfigurations
          - description: Address is the address for this vault
            displayName: Vault Address
            path: modules[0].initContainer[0].vaultConfigurations[0].address
          - description:
              CertificateAuthority is the base64-encoded certificate authority
              for validaitng the vault certificate
            displayName: Vault Certificate Authority
            path: modules[0].initContainer[0].vaultConfigurations[0].certificateAuthority
          - description:
              ClientCertificate is the base64-encoded certificate for connecting
              to vault
            displayName: Vault CLient Certificate
            path: modules[0].initContainer[0].vaultConfigurations[0].clientCertificate
          - description:
              ClientKey validates is the base64-encoded certificate key for
              connecting to vault
            displayName: Vault CLient Certificate Key
            path: modules[0].initContainer[0].vaultConfigurations[0].clientKey
          - description: Identifier is the identifier for this vault
            displayName: Vault Identifier
            path: modules[0].initContainer[0].vaultConfigurations[0].identifier
          - description: Role is the role for this vault
            displayName: Vault Role
            path: modules[0].initContainer[0].vaultConfigurations[0].role
          - description:
              SkipCertificateValidation validates the vault server certificate
              or not
            displayName: Vault Skip Certificate Validation
            path: modules[0].initContainer[0].vaultConfigurations[0].skipCertificateValidation
          - description: Name is name of ContainerStorageModule modules
            displayName: Name
            path: modules[0].name
        statusDescriptors:
          - description: Available is the number of available pods
            displayName: Available
            path: controllerStatus.available
            x-descriptors:
              - urn:alm:descriptor:text
          - description: Desired is the number of desired pods
            displayName: Desired
            path: controllerStatus.desired
            x-descriptors:
              - urn:alm:descriptor:text
          - description: Failed is the number of failed pods
            displayName: Failed
            path: controllerStatus.failed
            x-descriptors:
              - urn:alm:descriptor:text
          - description: Available is the number of available pods
            displayName: Available
            path: nodeStatus.available
            x-descriptors:
              - urn:alm:descriptor:text
          - description: Desired is the number of desired pods
            displayName: Desired
            path: nodeStatus.desired
            x-descriptors:
              - urn:alm:descriptor:text
          - description: Failed is the number of failed pods
            displayName: Failed
            path: nodeStatus.failed
            x-descriptors:
              - urn:alm:descriptor:text
          - description: State is the state of the driver installation
            displayName: State
            path: state
            x-descriptors:
              - urn:alm:descriptor:text
        version: v1
  description:
    "Dell Container Storage Modules (CSM) Operator is a Kubernetes Operator
    which can be \nused to install and manage Dellâ€™s CSI drivers and CSM modules.
    \nBy using Dell CSM Operator, enterprises can quickly and easily deploy the \nCSM
    modules for CSI drivers making it easy for DevOps \nteams to build and optimize
    their Kubernetes workloads using enterprise grade storage \nwhile consistently
    aligning with the desired outcomes of the organization.\nThis operator is available
    as both community and certified operator for Openshift \nand as a community operator
    for upstream Kubernetes.\nOperator can be deployed via OperatorHub.io. using Operator
    Lifecycle Manager (OLM)\n\n### About Dell CSM\n\nDell CSM brings powerful enterprise
    storage features and functionality to Kubernetes for \neasier adoption of cloud
    native workloads, improved productivity and scalable operations. \n\nCSM delivers
    software modules for storage management that provide developers access to \nbuild
    automation for enhanced IT needs and other critical enterprise storage features.
    \n\nCurrently, the following modules are available as part of Dell CSM. \n*\tObservability
    - Delivers a high-level view of the storage capacity \n  and performance usage
    via Grafana dashboards to the Kubernetes users\n*\tReplication - Enables array
    replication capabilities for Kubernetes users\n*\tAuthorization - Provides both
    storage and Kubernetes administrators the ability \n  to apply RBAC for Dell CSI
    Drivers\n*\tResiliency - Designed to make Kubernetes applications more resilient
    to \n  node failures\n\nThese modules are available for various storage platforms
    in the Dell portfolio, \nsuch as Dell PowerStore, Dell PowerMax, Dell PowerFlex,
    Dell PowerScale, and Dell Unity XT.\n\nFor more information, visit [Dellâ€™s Container
    Storage Module web page](https://www.dell.com/en-us/dt/solutions/kubernetes-containers/kubernetes-storage.htm)\n\nAdditional
    Materials\n*\t[Documentation](https://dell.github.io/csm-docs)\n*\t[CSM Solution
    Brief](https://www.delltechnologies.com/asset/en-us/products/storage/briefs-summaries/csm-solution-brief.pdf)\n"
  displayName: Dell Container Storage Modules
  icon:
    - base64data: iVBORw0KGgoAAAANSUhEUgAAAFAAAAAoCAYAAABpYH0BAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAALiMAAC4jAXilP3YAAAtlSURBVGhD7ZoNcFXFFcfPfS8JSdBQG5GK38PUDwhFkgAiLQ5+UloGq5OoRcap1lSxKiMhAYOEoIGQhGqNoIJUseo4oGMFpVpHbasiFEIQAWurUrWAGQoin/m829+5d1/ee0leQhJtUof/zL7dc87uubvnnj37cZ8jPQG5lWMl4EyQ+poCuf/CvZb7fwFHcjfeasttI2BqxHV3iLibpXzEF5bbNdy+NkUSE8rpxS+h9GXuJMuR0qEve/L2MHVTmjjujyzlIyB1Upq+1FLtI69qkLhmtKV8OFIvZemPWapNOJK30dhyB2C2kJ6RQONiKRmxxzI7hmmVl4jj6EDP8BmRcBfL/IxbkLfdt7zKXzOECkv5MPIVg/+OpdrHtEp9zsOWsjCHpDTjOEu0iYDNOwgnjaZzxY3bLnkbciVredAK2sfUTb0Z+EJe3WtQrRhPNosT90i7xush6KQBQ3COR0WZnDXgFbmzqv23nl85WoLue7SbTIqOv0YamEpzJSlhmMw/v8pyRWZs7ifT3uY5PROtG9CYNfw+FU7maQa8mvJ/SK3AuVQSzKued7WGnA3JTJX7xXXehBrgMyNg5AMJyoVSnlEgRWl1lsv02nidNDRsFUnaLNOqxlhuj0IsD3yEQDwpnDKuJ7D/RJK+OlmMk438U79aBBwZLsGGZrEE5FaOlD5OFQ43hTrNn9dIKpPkr9KlJH29zwJT3zkJ4z1H/WdIqbQ9k7j4OryKmC+pm9CxKVw0pkHKhq6Q+oR03CY84CYEJjHIi7xi4ZuJlOezPXkLA5zt8aLxD9JoXlAeemt8FsitvFoCiVsw3NWW48PxpvyN7AbG+Yyegc7FwPvT9kqcO4Gp/qXlhOGYPJn6t2FyOKUSI+TBiV5gjHH5+a0kuUMxnoYKH9PXpbK4sLI7eJ7T13IjYN7h53zvBfYgdM6AirnDdmGtBywViSskELcGIwy0dBhGPqHNxYSEKVKUedhyWVw2jWdFZ2vkXGc5YRj2n0ZyJSl9NNuTf1ounrp+AOFkoqW6DZ03oMIJvmBLEXCCeF6cJXwYY0gPy6GEIRjhL5bLNGflnlb1hBh3Je2+Z7mRWIeudNoskCIHzwXGOISGyRIIbkJ2gcfrRnTNgObAv2ypbTjOi5K8/w5ZlHbQcvzj22GXWGdusJxI1JLulsyho/DWD3wWmFp5huRXvYbhFkId1Ub3m0bXDBiXkmxL7eFKYuJa79ikx7e8yiXEutUY9hQrj4DZyOI8jPg4T7IdXaWVRzTdcLMEnc0Ql/i8noGuGdBtOPop5DgZNKiUpPhtEKGzbyTqkc+WfeYCKR32vuVxXFt7KoZnDxpYDJXiM3sOumhA5zZbCsOYHfwS01qD04vUitfp8a1hhJRmFsniTAxpkbeR6R2vxhzrMyKgZ16RP/lE96HzBpxWmUP8usxSYTjOEqbfBHHlBgbZcpvTHMaZ5x/fhoePb1PWn8xCoS/hCRS2PCIa85okxA+msMpyug0dN2ChCRDD7sJQiywnAuYLcVx/a1Oe/qTEO4MZ7B89OhYc80OprT3dUv7xLT74PhN8vOVE4gD6bmVVvkKKB39ued2KGNdZZqo01oe3KPEBR+rjUtkSj4S6ifQDjx8JYxrFBMZJ+dDm04ptx/qb2N0soBwjhplD/Myi6oXk0SeQEIz5s7j1N8qCC7ZbTuvXWWrkxrohthwbgfhaKcvY2ep1lpHD4talWSo20NHJ+8Bm0JsUg2HV62Ihf8vpYmqXMuBLLecogXFdmSG9Vy6UoiJ/LxhC6wY8SnAULc0Y3vp94FHCmKquLSI+dqJpbJvGU8xP+4zYeDmlydQP7wfbBMe3AMe38oyKFsbrIeiCAc0+3sA8Yt5ApsLrltkOHIMRH5ZAI1PMhE8kLXEEj/aPbyUZH1lej4QaUO/42k9GPiN/l/xR8ixJMqdguLtlfqZuJzqGkuGfSNLKi9E1hRQ+E/tYJ0E3+vgWE84Rflrvb3vJ3wZhgYDeBLVep73kyL7u/yp317qzJRj3OJ1ho22KJDOjNHwCOYajg35Tya8601LHcAzHcAz/KzhFRUXPGmPiLd0CyJZSR7/IdQiFhYVscmUtbTf4nK8P6Nbdw2PovtHndB4zZszol5CQ8CW6wl8DO4DAli1bJg4cODBbE8bSLUpiiNY0e/bsts+yMeA4zgiyU33qa0cA/T+z5S4hMTGxIhAIsAPoHKK2MbyFMRhxCkabYFkeysrKeh88eLDPoEGDqrOzs1tsMYqLi/sil3nz5u22LEHH79H1PDr/gMecCMul3Oofh/CCvikpKQ3kLW5vaKs3zynbtm2rXrFihfdseHEYcDfPOEFphfLITiLt4znN95ZSUlLS58iRI0nIqiFjHl/Vu+Pj4/vV19cfou5+y/YQekZycvKB/Pz8A8pr04AYRhU94glF9A9FA5G/Sr25ykDhVWR5DMa7dkf2fbK5yFerASl/BO888n3U0S9t36Vz1xYUFFQjXwb9V/iXua6rch18Hyvffe+9957W2Ni4iPZqtC+QDyZfzTPn0jYI7RnQDuo+aL2I2Er908hrmJa3qh7k/ZE9Dk+NqmPQ7dJyUhbtx5Gep80C+ryGurfAv576qkdfjl5+TEb2CbIc+JPg6/2k9vW42traidEff5oB4z1Fowdp7N27kWvseYaH3oDbb2LgxSgcBe15FnL1tA3kOhg16CiycXSgQWnq3YnOORR/hawX+dVbt24dH+FZuXV1dWSFd2C8ldQp0JehsuXLlwfxwmfRoZe4oZeqoaKALJU2F1H2PIs6E3mOGmkMvCfQsxg9z6mMeuq9+u+vBKW1H4wjHv7l8LOgL6a9Fw/vueeekcFg8HlkGcjKkPVDj/cNmzqFTP+rYp6Fp0+fnkp29o4dO17JycmJ17Rr1y79xqtX69k89FoULkFh07SkrEeca0mhgPwkPM94Coz+Bm2arpro1LKQ8RTofBPeEHKNSYdp27R4aeigbRHFqIUD3i/i4uJm0a5pWjK4p+GfzMAzIc9Dj2c8hfZHPduSkdA1YCljNKHxVldX6wKoYzkXmZ7dZ82cOXMIehN4RhFpSUwD9urV63gapfbv3//ZyERHb4NfRdIpudOvHQYd1JVXDalofuvi0r7pQzsDiZKj0yUFMXQ/8hYXpjU1NZ/Tvp8lPUD3ZVAt/q8IX+sOotgUl0NAv8bBKFD3eNLtzceL6N+kOrxfF601vCyd4i9ixJd47jkxp/DevXt3paam7tuzZ8/PKyoq9DOjBxqeiFufwOCvgTzX54bBW9E48ZYlOwX0f4z+FheaBO80vPNjS4awnT6dw0v7u6W96U5oOIfBvo2e+cjj1POsWF/UAIxgKR/wVO9b1HvI5/hgGo/o3bv3bnYkP0b2EixN6ijj0fFATA+0RnsaI/5G3Vl5dCSRRsvo1Eg6t4zyJHVplSnmzJkzlGw2qUt/0501a9YH6N7Oy8hnYN5IdaXHeHqrXa50BMqo+5CuskpkZWWp8YopvsHgP6b9auQzoJv04IFTtBwJxrOEerczBl30PDDecbzMR3EinTkLWZTOsiKFxtCGKAPSQd1GNL1JOnI3HdiOK+uq+iIsDeyrsP6TdO5zOnIlD57Jg15Cvor2efB00dhPvQ+pH5rKHujEQfjv2fKH1I36dythQ7cN+u1XPeIaUh/0vor+lSwKumrfh2792KTXXO9qPeTKX8L0Xq59ZKv1Crr1E0GOyvfv368hpw86Xkf+AnoehK2LUGirs41+fMl4tuszcY5iO56X0XMdvJ+yjTtAnsUO4QHtC7JV0FeRWn6V/LaBAWeSor7hQN9F8rZiXUV0IPgWAo8dxcyoYCrejHd9ircN01DQ0NBwBdO5y1/2vvUGVOBt55Pp9kr3qXqz/jsMq6trFyHyX+sbEAjrhciCAAAAAElFTkSuQmCC
      mediatype: image/png
  install:
    spec:
      deployments: null
    strategy: ""
  installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
  keywords:
    - Dell Container Storage Modules
    - Dell CSI Driver
    - Dell CSM Modules
    - Powerflex
    - Powerscale
    - Powerstore
    - Unity
    - Authorization
    - Observability
    - Replication
  links:
    - name: Documentation
      url: https://dell.github.io/csm-docs
  maintainers:
    - email: container.storage.modules@dell.com
      name: Dell Container Storage Modules
  maturity: stable
  minKubeVersion: 1.24.0
  provider:
    name: Dell Technologies
    url: https://github.com/dell/csm-operator
  relatedImages:
    - image: quay.io/dell/container-storage-modules/dell-csm-operator:v1.10.0
      name: dell-csm-operator
    - image: quay.io/dell/container-storage-modules/csi-isilon:v2.15.0
      name: csi-isilon
    - image: quay.io/dell/container-storage-modules/csi-powermax:v2.15.0
      name: csi-powermax
    - image: quay.io/dell/container-storage-modules/csipowermax-reverseproxy:v2.14.0
      name: csipowermax-reverseproxy
    - image: quay.io/dell/container-storage-modules/csi-powerstore:v2.15.0
      name: csi-powerstore
    - image: quay.io/dell/container-storage-modules/csi-unity:v2.15.0
      name: csi-unity
    - image: quay.io/dell/container-storage-modules/csi-vxflexos:v2.15.0
      name: csi-vxflexos
    - image: quay.io/dell/storage/powerflex/sdc:4.5.4
      name: sdc
    - image: quay.io/dell/container-storage-modules/csm-authorization-sidecar:v2.3.0
      name: karavi-authorization-proxy
    - image: quay.io/dell/container-storage-modules/csm-authorization-proxy:v2.3.0
      name: csm-authorization-proxy
    - image: quay.io/dell/container-storage-modules/csm-authorization-tenant:v2.3.0
      name: csm-authorization-tenant
    - image: quay.io/dell/container-storage-modules/csm-authorization-role:v2.3.0
      name: csm-authorization-role
    - image: quay.io/dell/container-storage-modules/csm-authorization-storage:v2.3.0
      name: csm-authorization-storage
    - image: quay.io/dell/container-storage-modules/csm-authorization-controller:v2.3.0
      name: csm-authorization-controller
    - image: quay.io/dell/container-storage-modules/dell-csi-replicator:v1.13.0
      name: dell-csi-replicator
    - image: quay.io/dell/container-storage-modules/dell-replication-controller:v1.13.0
      name: dell-replication-controller-manager
    - image: ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector:0.135.0
      name: otel-collector
    - image: quay.io/dell/container-storage-modules/csm-metrics-powerscale:v1.10.0
      name: metrics-powerscale
    - image: quay.io/dell/container-storage-modules/csm-metrics-powermax:v1.8.0
      name: metrics-powermax
    - image: quay.io/dell/container-storage-modules/csm-metrics-powerflex:v1.13.0
      name: metrics-powerflex
    - image: quay.io/dell/container-storage-modules/csm-metrics-powerstore:v1.13.0
      name: metrics-powerstore
    - image: quay.io/dell/container-storage-modules/podmon:v1.14.0
      name: podmon-node
    - image: registry.redhat.io/openshift4/ose-kube-rbac-proxy-rhel9:v4.16.0-202409051837.p0.g8ea2c99.assembly.stream.el9
      name: kube-rbac-proxy
    - image: registry.k8s.io/sig-storage/csi-attacher:v4.8.0
      name: attacher
    - image: registry.k8s.io/sig-storage/csi-provisioner:v5.1.0
      name: provisioner
    - image: registry.k8s.io/sig-storage/csi-snapshotter:v8.2.0
      name: snapshotter
    - image: registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.13.0
      name: registrar
    - image: registry.k8s.io/sig-storage/csi-resizer:v1.13.1
      name: resizer
    - image: registry.k8s.io/sig-storage/csi-external-health-monitor-controller:v0.14.0
      name: externalhealthmonitorcontroller
    - image: quay.io/dell/container-storage-modules/csi-metadata-retriever:v1.10.0
      name: metadataretriever
  version: 1.10.0
